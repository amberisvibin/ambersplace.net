{"version":3,"file":"client-preact-components-pages-ask.bc2ad28e905abda404bb.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/pages/ask.tsx","webpack:///./preact/components/settings/shared.tsx","webpack:///../shared/limits.ts"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import React, { FunctionComponent, useCallback, useMemo } from \"react\";\nimport { SidebarMenu } from \"../sidebar-menu\";\nimport { ProjectHandle } from \"@/shared/types/ids\";\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { ExpandingTextArea } from \"../expanding-text-area\";\nimport { Button } from \"../elements/button\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport { useCurrentProject } from \"../../hooks/data-loaders\";\nimport { InfoBox } from \"../elements/info-box\";\nimport { ProjectAvatar } from \"../partials/project-avatar\";\nimport anonBug from \"@/client/images/anonbug.png\";\nimport sitemap from \"@/shared/sitemap\";\nimport { ProjectReference } from \"../project-reference\";\nimport { sectionTitleClasses } from \"../settings/shared\";\nimport { toast } from \"react-hot-toast\";\nimport { ASK_LENGTH_LIMIT } from \"@/shared/limits\";\nimport loadable from \"@loadable/component\";\nimport { renderSummaryNoHTML } from \"@/client/lib/markdown/other-rendering\";\n\nconst DevTool = loadable(() => import(\"@hookform/devtools\"), {\n    resolveComponent: (mod) => mod.DevTool,\n});\n\nexport const AskPage: FunctionComponent<{ projectHandle: ProjectHandle }> = (\n    props\n) => {\n    return (\n        <main className=\"w-full pt-16\">\n            <div className=\"container mx-auto grid grid-cols-1 gap-16 lg:grid-cols-4\">\n                <SidebarMenu />\n                <section className=\"col-span-1 flex flex-col gap-12 lg:col-span-2\">\n                    <AskPageContents {...props} />\n                </section>\n            </div>\n        </main>\n    );\n};\n\ntype Inputs = {\n    anon: boolean;\n    content: string;\n};\n\ntype CanSendAskReason = \"notEnabled\" | \"noAnon\" | \"noLoggedOutAnon\" | \"ok\";\n\nconst AskPageContents: FunctionComponent<{ projectHandle: ProjectHandle }> = ({\n    projectHandle,\n}) => {\n    const { loggedIn } = useUserInfo();\n    const currentProject = useCurrentProject();\n    const targetProject = trpc.projects.byHandle.useQuery(projectHandle, {\n        suspense: true,\n    });\n\n    const anonAllowed = useMemo(\n        () => targetProject.data && targetProject.data.askSettings.allowAnon,\n        [targetProject.data]\n    );\n    const canSendAsk = useMemo<CanSendAskReason>(() => {\n        if (!(targetProject.data && targetProject.data.askSettings.enabled)) {\n            return \"notEnabled\";\n        }\n\n        if (!anonAllowed && !loggedIn) {\n            return \"noAnon\";\n        }\n\n        if (anonAllowed && !loggedIn) {\n            const requireLoggedInAnon =\n                targetProject.data &&\n                targetProject.data.askSettings.requireLoggedInAnon;\n\n            return requireLoggedInAnon ? \"noLoggedOutAnon\" : \"ok\";\n        }\n\n        return \"ok\";\n    }, [anonAllowed, loggedIn, targetProject.data]);\n\n    const sendAsk = trpc.asks.send.useMutation();\n    const { register, handleSubmit, control, reset, watch } = useForm<Inputs>({\n        defaultValues: {\n            anon: !loggedIn,\n            content: \"\",\n        },\n    });\n\n    const content = watch(\"content\");\n    const askNotEmpty = useMemo(() => {\n        const rendered = renderSummaryNoHTML(content, new Date(), {\n            renderingContext: \"ask\",\n            hasCohostPlus: true,\n            disableEmbeds: true,\n            externalLinksInNewTab: true,\n        });\n\n        return rendered.trim().length > 0;\n    }, [content]);\n\n    const onSubmit = useCallback<SubmitHandler<Inputs>>(\n        (values) => {\n            const promise = sendAsk.mutateAsync({\n                toProjectHandle: projectHandle,\n                content: values.content,\n                anon: values.anon,\n            });\n            toast\n                .promise(promise, {\n                    loading: \"Sending ask...\",\n                    success: \"Ask sent!\",\n                    error: \"Failed to send ask.\",\n                })\n                .then((_) => reset(undefined, { keepValues: false }))\n                .catch((_) => null);\n        },\n        [projectHandle, reset, sendAsk]\n    );\n\n    const onKeyDown = useCallback<React.KeyboardEventHandler<HTMLElement>>(\n        (ev) => {\n            if ((ev.metaKey || ev.ctrlKey) && ev.key === \"Enter\") {\n                ev.preventDefault();\n                void handleSubmit(onSubmit)();\n            }\n        },\n        [handleSubmit, onSubmit]\n    );\n\n    const sendingToSelf = useMemo(\n        () => currentProject && currentProject.handle === projectHandle,\n        [currentProject, projectHandle]\n    );\n\n    return (\n        <div className=\"flex flex-col gap-8 rounded-lg bg-notWhite p-3 text-notBlack\">\n            <h1 className={sectionTitleClasses}>ask @{projectHandle}</h1>\n\n            {sendingToSelf && (\n                <InfoBox level=\"info\">\n                    <div className=\"prose prose-sm\">\n                        <p>\n                            Sending an ask to yourself, huh? Hope whatever bit\n                            you're trying to do works out.\n                        </p>\n                    </div>\n                </InfoBox>\n            )}\n\n            <InfoBox level=\"info\">\n                <div className=\"prose prose-sm\">\n                    <p>\n                        Asks can contain simple{\" \"}\n                        <a\n                            href={sitemap.public\n                                .staticContent({\n                                    slug: \"markdown-reference\",\n                                })\n                                .toString()}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            markdown formatting\n                        </a>{\" \"}\n                        and links but no inline HTML, and also cannot include\n                        inline images, audio, or video.\n                    </p>\n                </div>\n            </InfoBox>\n\n            {canSendAsk === \"notEnabled\" && (\n                <InfoBox level=\"info\">\n                    <div className=\"prose prose-sm\">\n                        <p>@{projectHandle} doesn't allow asks. Sorry!</p>\n                    </div>\n                </InfoBox>\n            )}\n\n            {canSendAsk === \"noAnon\" && (\n                <InfoBox level=\"info\">\n                    <div className=\"prose prose-sm\">\n                        <p>\n                            @{projectHandle} doesn't allow anonymous asks.{\" \"}\n                            <a\n                                href={sitemap.public\n                                    .login({\n                                        originalUrl: sitemap.public.project\n                                            .ask({ projectHandle })\n                                            .toString(),\n                                    })\n                                    .toString()}\n                            >\n                                log in first.\n                            </a>\n                        </p>\n                    </div>\n                </InfoBox>\n            )}\n\n            {canSendAsk === \"noLoggedOutAnon\" && (\n                <InfoBox level=\"info\">\n                    <div className=\"prose prose-sm\">\n                        <p>\n                            @{projectHandle} doesn't allow anonymous asks from\n                            logged out users.{\" \"}\n                            <a\n                                href={sitemap.public\n                                    .login({\n                                        originalUrl: sitemap.public.project\n                                            .ask({ projectHandle })\n                                            .toString(),\n                                    })\n                                    .toString()}\n                            >\n                                log in first.\n                            </a>\n                        </p>\n                    </div>\n                </InfoBox>\n            )}\n\n            {canSendAsk === \"ok\" && (\n                <form\n                    onSubmit={handleSubmit(onSubmit)}\n                    className=\"flex flex-col gap-4\"\n                >\n                    <div className=\"flex flex-col gap-0 divide-y divide-cherry border border-cherry\">\n                        <Controller\n                            control={control}\n                            name=\"content\"\n                            rules={{\n                                maxLength: ASK_LENGTH_LIMIT,\n                                minLength: 1,\n                            }}\n                            render={({\n                                field: { ref, onChange, ...field },\n                            }) => (\n                                <div className=\"flex flex-row items-start\">\n                                    <ExpandingTextArea\n                                        {...field}\n                                        onInput={onChange}\n                                        onKeyDown={onKeyDown}\n                                        className=\"border-0\"\n                                        ref={ref}\n                                        minRows={4}\n                                        autoComplete=\"off\"\n                                        placeholder={`ask ${projectHandle}`}\n                                    />\n                                    {field.value.length >=\n                                    ASK_LENGTH_LIMIT * 0.75 ? (\n                                        <span\n                                            className={`flex-shrink-0 p-2 tabular-nums ${\n                                                field.value.length >\n                                                ASK_LENGTH_LIMIT\n                                                    ? \"text-red\"\n                                                    : \"text-gray-600\"\n                                            }`}\n                                        >\n                                            {ASK_LENGTH_LIMIT -\n                                                field.value.length}\n                                        </span>\n                                    ) : null}\n                                </div>\n                            )}\n                        />\n\n                        <div className=\"flex flex-row items-center justify-between gap-2 p-2\">\n                            <div className=\"flex flex-row items-center gap-2 truncate\">\n                                {currentProject && !watch(\"anon\") && (\n                                    <>\n                                        <ProjectReference\n                                            project={currentProject}\n                                            inline={true}\n                                        />\n                                    </>\n                                )}\n                                {watch(\"anon\") && (\n                                    <>\n                                        <img\n                                            src={sitemap.public.static\n                                                .staticAsset({ path: anonBug })\n                                                .toString()}\n                                            alt=\"anonymous\"\n                                            className=\"mask mask-squircle h-8 w-8\"\n                                        />\n                                        <span>anonymous</span>\n                                    </>\n                                )}\n                            </div>\n                            {anonAllowed && loggedIn && (\n                                <label className=\"flex flex-row items-center gap-2\">\n                                    anonymous?\n                                    <input\n                                        type=\"checkbox\"\n                                        {...register(\"anon\")}\n                                        className=\"rounded-checkbox\"\n                                    />\n                                </label>\n                            )}\n                        </div>\n                    </div>\n                    <Button\n                        buttonStyle=\"roundrect\"\n                        type=\"submit\"\n                        color=\"authn-primary\"\n                        disabled={!askNotEmpty}\n                    >\n                        send\n                    </Button>\n                </form>\n            )}\n            {process.env.NODE_ENV === \"development\" && (\n                <DevTool control={control} />\n            )}\n        </div>\n    );\n};\n\nexport default AskPage;\n","export const sectionBoxClasses =\n    \"cohost-shadow-light dark:cohost-shadow-dark mx-auto flex max-h-min w-full flex-col gap-4 rounded-lg bg-notWhite text-notBlack px-7 py-8\";\nexport const sectionTitleClasses = \"font-atkinson font-bold text-4xl\";\nexport const buttonRowClasses =\n    \"flex w-full flex-row items-center justify-end gap-4 font-bold text-notWhite\";\nexport const subsectionTitleClasses = \"font-atkinson font-bold text-2xl pt-8\";\n","// length limit for usernames and project handles\nexport const USERNAME_HANDLE_LIMIT = 200;\n\n// length limit for asks\nexport const ASK_LENGTH_LIMIT = 1120;\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","loadable","resolved","chunkName","isReady","key","resolve","__webpack_modules__","importAsync","requireAsync","then","requireSync","id","__webpack_require__","resolveComponent","mod","DevTool","AskPage","SidebarMenu","AskPageContents","projectHandle","loggedIn","useUserInfo","currentProject","useCurrentProject","targetProject","trpc","suspense","anonAllowed","useMemo","data","askSettings","allowAnon","canSendAsk","enabled","requireLoggedInAnon","sendAsk","register","handleSubmit","control","reset","watch","useForm","defaultValues","anon","content","askNotEmpty","renderSummaryNoHTML","Date","renderingContext","hasCohostPlus","disableEmbeds","externalLinksInNewTab","trim","length","onSubmit","useCallback","values","promise","mutateAsync","toProjectHandle","toast","loading","success","error","_","undefined","keepValues","catch","onKeyDown","ev","metaKey","ctrlKey","preventDefault","sendingToSelf","handle","sectionTitleClasses","InfoBox","level","href","sitemap","slug","toString","target","rel","originalUrl","Controller","name","rules","maxLength","ASK_LENGTH_LIMIT","minLength","render","field","onChange","ExpandingTextArea","onInput","minRows","autoComplete","placeholder","value","ProjectReference","project","inline","src","path","anonBug","alt","type","disabled","process","sectionBoxClasses","buttonRowClasses","subsectionTitleClasses"],"sourceRoot":""}