{"version":3,"file":"client-preact-components-pages-moderation-manage-page-edit-project-flags-form.2255710c63238d461fba.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/solid/esm/ChevronUpDownIcon.js","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/solid/esm/CheckIcon.js","webpack:///./preact/components/pages/moderation/manage-page.edit-project-flags-form.tsx"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import * as React from \"react\";\n\nfunction ChevronUpDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M11.47 4.72a.75.75 0 011.06 0l3.75 3.75a.75.75 0 01-1.06 1.06L12 6.31 8.78 9.53a.75.75 0 01-1.06-1.06l3.75-3.75zm-3.75 9.75a.75.75 0 011.06 0L12 17.69l3.22-3.22a.75.75 0 111.06 1.06l-3.75 3.75a.75.75 0 01-1.06 0l-3.75-3.75a.75.75 0 010-1.06z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronUpDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckIcon);\nexport default ForwardRef;","import React, { FunctionComponent } from \"react\";\nimport { useForm, SubmitHandler, Controller } from \"react-hook-form\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { ProjectFlag } from \"@/shared/types/projects\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { Listbox } from \"@headlessui/react\";\nimport { DevTool } from \"@hookform/devtools\";\nimport { CheckIcon, ChevronUpDownIcon } from \"@heroicons/react/24/solid\";\nimport { Button } from \"@/client/preact/components/elements/button\";\n\ntype Inputs = {\n    projectFlags: ProjectFlag[];\n    reason: string;\n};\n\nexport const EditProjectFlagsForm: FunctionComponent<{\n    currentFlags: ProjectFlag[];\n    projectId: ProjectId;\n}> = ({ currentFlags, projectId }) => {\n    const editProjectFlags = trpc.moderation.project.updateFlags.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = (inputs) => {\n        return editProjectFlags.mutateAsync({\n            projectId,\n            newFlags: inputs.projectFlags,\n            reason: inputs.reason,\n        });\n    };\n\n    const { register, handleSubmit, control, formState } = useForm<Inputs>({\n        defaultValues: {\n            projectFlags: currentFlags,\n            reason: \"\",\n        },\n    });\n\n    return (\n        <form\n            onSubmit={handleSubmit(onSubmit)}\n            className=\"my-6 flex max-w-prose flex-col gap-4\"\n        >\n            <div className=\"max-w-prose\">\n                <label>flags</label>\n                <Controller\n                    control={control}\n                    name=\"projectFlags\"\n                    render={({ field }) => (\n                        <Listbox\n                            multiple\n                            value={field.value}\n                            onChange={field.onChange}\n                        >\n                            <div className=\"relative mt-1\">\n                                <Listbox.Button className=\"relative w-full cursor-default rounded-lg bg-notWhite py-2 pl-3 pr-10 text-left shadow-md focus:outline-none focus-visible:border-cherry focus-visible:ring-2 focus-visible:ring-notWhite focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-mango-300\">\n                                    <span className=\"block truncate\">\n                                        {field.value.join(\", \")}\n                                    </span>\n                                    <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                                        <ChevronUpDownIcon\n                                            className=\"h-5 w-5 text-gray-400\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </span>\n                                </Listbox.Button>\n                                <Listbox.Options className=\"absolute mt-1 max-h-60 w-full overflow-auto rounded-md bg-notWhite py-1 text-base shadow-lg ring-1 ring-notBlack ring-opacity-5 focus:outline-none\">\n                                    {ProjectFlag.options.map((flag) => (\n                                        <Listbox.Option\n                                            key={flag}\n                                            value={flag}\n                                            className={({ active }) =>\n                                                `relative cursor-default select-none py-2 pl-10 pr-4 ${\n                                                    active\n                                                        ? \"bg-cherry-100 text-cherry-900\"\n                                                        : \"text-gray-900\"\n                                                }`\n                                            }\n                                        >\n                                            {({ selected }) => (\n                                                <>\n                                                    {\" \"}\n                                                    <span\n                                                        className={`block truncate ${\n                                                            selected\n                                                                ? \"font-medium\"\n                                                                : \"font-normal\"\n                                                        }`}\n                                                    >\n                                                        {flag}\n                                                    </span>\n                                                    {selected ? (\n                                                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-mango-600\">\n                                                            <CheckIcon\n                                                                className=\"h-5 w-5\"\n                                                                aria-hidden=\"true\"\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </>\n                                            )}\n                                        </Listbox.Option>\n                                    ))}\n                                </Listbox.Options>\n                            </div>\n                        </Listbox>\n                    )}\n                />\n            </div>\n            <div className=\"flex flex-col gap-2\">\n                <label>change reason</label>\n                {formState.errors.reason ? (\n                    <span className=\"font-bold text-red\">\n                        {formState.errors.reason.message}\n                    </span>\n                ) : null}\n                <textarea\n                    className=\"w-full\"\n                    {...register(\"reason\", {\n                        required: \"You must provide a reason!\",\n                    })}\n                />\n            </div>\n            <Button\n                type=\"submit\"\n                buttonStyle=\"pill\"\n                color=\"cherry\"\n                className=\"max-w-max\"\n            >\n                submit\n            </Button>\n            {formState.isSubmitSuccessful ? (\n                <span className=\"font-bold text-green\">Submit successful!</span>\n            ) : null}\n            {process.env.NODE_ENV === \"development\" ? (\n                <DevTool control={control} />\n            ) : null}\n        </form>\n    );\n};\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","title","titleId","svgRef","Object","assign","xmlns","viewBox","fill","id","fillRule","d","clipRule","EditProjectFlagsForm","currentFlags","projectId","editProjectFlags","trpc","register","handleSubmit","control","formState","useForm","defaultValues","projectFlags","reason","onSubmit","inputs","mutateAsync","newFlags","Controller","name","render","field","Listbox","multiple","value","onChange","join","ChevronUpDownIcon","ProjectFlag","flag","key","active","selected","CheckIcon","errors","message","required","type","isSubmitSuccessful"],"sourceRoot":""}