{"version":3,"file":"3639.e36ee23a34b24dcfc7ad.js","mappings":"wCAOA,WACE,aAMA,IAJA,IAAIA,EAAQ,mEAGRC,EAAS,IAAIC,WAAW,KACnBC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAChCF,EAAOD,EAAMK,WAAWF,IAAMA,EAGhCG,EAAQ,EAAS,SAASC,GACxB,IACAJ,EADIK,EAAQ,IAAIN,WAAWK,GACxBE,EAAMD,EAAMJ,OAAQM,EAAS,GAEhC,IAAKP,EAAI,EAAGA,EAAIM,EAAKN,GAAG,EACtBO,GAAUV,EAAMQ,EAAML,IAAM,GAC5BO,GAAUV,GAAmB,EAAXQ,EAAML,KAAW,EAAMK,EAAML,EAAI,IAAM,GACzDO,GAAUV,GAAuB,GAAfQ,EAAML,EAAI,KAAY,EAAMK,EAAML,EAAI,IAAM,GAC9DO,GAAUV,EAAqB,GAAfQ,EAAML,EAAI,IAS5B,OANKM,EAAM,GAAO,EAChBC,EAASA,EAAOC,UAAU,EAAGD,EAAON,OAAS,GAAK,IACzCK,EAAM,GAAM,IACrBC,EAASA,EAAOC,UAAU,EAAGD,EAAON,OAAS,GAAK,MAG7CM,GAGTJ,EAAQ,EAAU,SAASI,GACzB,IACqBP,EACrBS,EAAUC,EAAUC,EAAUC,EAF1BC,EAA+B,IAAhBN,EAAON,OAC1BK,EAAMC,EAAON,OAAWa,EAAI,EAGM,MAA9BP,EAAOA,EAAON,OAAS,KACzBY,IACkC,MAA9BN,EAAOA,EAAON,OAAS,IACzBY,KAIJ,IAAIT,EAAc,IAAIW,YAAYF,GAClCR,EAAQ,IAAIN,WAAWK,GAEvB,IAAKJ,EAAI,EAAGA,EAAIM,EAAKN,GAAG,EACtBS,EAAWX,EAAOS,EAAOL,WAAWF,IACpCU,EAAWZ,EAAOS,EAAOL,WAAWF,EAAE,IACtCW,EAAWb,EAAOS,EAAOL,WAAWF,EAAE,IACtCY,EAAWd,EAAOS,EAAOL,WAAWF,EAAE,IAEtCK,EAAMS,KAAQL,GAAY,EAAMC,GAAY,EAC5CL,EAAMS,MAAoB,GAAXJ,IAAkB,EAAMC,GAAY,EACnDN,EAAMS,MAAoB,EAAXH,IAAiB,EAAiB,GAAXC,EAGxC,OAAOR,GAzDX,KCNIY,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAahB,QAGrB,IAAIkB,EAASL,EAAyBE,GAAY,CAGjDf,QAAS,IAOV,OAHAmB,EAAoBJ,GAAUG,EAAQA,EAAOlB,QAASc,GAG/CI,EAAOlB,S,uCCffoB,UAAYC,MAAAA,IAGR,IAGI,MAAMC,EAAgB,CAClBC,KAAM,SACNC,KAAM,UACNC,WAAY,IACZC,KAAMC,EAAAA,EAAsBC,EAAEC,KAAKH,OAIjCI,GADa,IAAIC,aACKC,OAAOJ,EAAEC,KAAKI,UAEpCC,EAAQC,KAAKC,MAEbC,QAAgBC,OAAOC,OAAOC,UAChC,MACAV,EACAR,GACA,EACA,CAAC,cAGCmB,QAAmBH,OAAOC,OAAOG,UACnCpB,EACAe,EACA,CAAEd,KAAM,OAAQC,KAAM,YACtB,EACA,CAAC,SAGCA,QAAac,OAAOC,OAAOI,UAAU,MAAOF,GAE5CG,EAAMT,KAAKC,MAEjBS,QAAQC,IACH,oBAAmBxB,EAAcG,4BACbmB,EAAMV,OAG/Ba,YAAY,CAAEC,WAAYrB,EAAAA,EAAsBH,SAASP,GAC3D,MAAOW,GACLiB,QAAQI,MAAMrB,K","sources":["webpack:///../node_modules/.pnpm/base64-arraybuffer@0.2.0/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///webpack/bootstrap","webpack:///./lib/hash-worker.ts"],"sourcesContent":["/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as b64arraybuffer from \"base64-arraybuffer\";\n\n/**\n * run an expensive password hash in the background so it doesn't hang the\n * user's browser for a noticeable amount of time\n */\nonmessage = async (\n    e: MessageEvent<{ password: string; salt: string }>\n): Promise<void> => {\n    try {\n        // do PBKDF2-HMAC-SHA2 with the Web Crypto API as a client-side hashing\n        // algorithm so that users don't have to d/l libsodium, which is huge\n        const PBKDF2_PARAMS = {\n            name: \"PBKDF2\",\n            hash: \"SHA-384\",\n            iterations: 200000,\n            salt: b64arraybuffer.decode(e.data.salt),\n        };\n\n        const pwdEncoder = new TextEncoder();\n        const pwdArray = pwdEncoder.encode(e.data.password);\n\n        const start = Date.now();\n\n        const baseKey = await crypto.subtle.importKey(\n            \"raw\",\n            pwdArray,\n            PBKDF2_PARAMS,\n            false,\n            [\"deriveKey\"]\n        );\n\n        const derivedKey = await crypto.subtle.deriveKey(\n            PBKDF2_PARAMS,\n            baseKey,\n            { name: \"HMAC\", hash: \"SHA-384\" },\n            true,\n            [\"sign\"]\n        );\n\n        const hash = await crypto.subtle.exportKey(\"raw\", derivedKey);\n\n        const end = Date.now();\n\n        console.log(\n            `worker: finished ${PBKDF2_PARAMS.iterations} ` +\n                `iterations in ${end - start}ms`\n        );\n\n        postMessage({ clientHash: b64arraybuffer.encode(hash) }, undefined);\n    } catch (e) {\n        console.error(e);\n    }\n};\n"],"names":["chars","lookup","Uint8Array","i","length","charCodeAt","exports","arraybuffer","bytes","len","base64","substring","encoded1","encoded2","encoded3","encoded4","bufferLength","p","ArrayBuffer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","onmessage","async","PBKDF2_PARAMS","name","hash","iterations","salt","b64arraybuffer","e","data","pwdArray","TextEncoder","encode","password","start","Date","now","baseKey","crypto","subtle","importKey","derivedKey","deriveKey","exportKey","end","console","log","postMessage","clientHash","error"],"sourceRoot":""}