{"version":3,"file":"client-preact-components-pages-moderation-manage-post-edit-post-form.42f6a410e36309fb64e2.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/pages/moderation/manage-post.edit-post-form.tsx"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { DevTool } from \"@hookform/devtools\";\nimport { PostState, PostStateEnum } from \"@/shared/types/posts\";\nimport {\n    WirePostModel,\n    WirePostModelModeratorExtensions,\n} from \"@/shared/types/wire-models\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { Button } from \"../../elements/button\";\n\ntype Inputs = {\n    postState: PostState;\n    adultContent: boolean;\n    adultContentOverride: boolean;\n    commentsLocked: boolean;\n    cws: string[];\n};\n\nexport const EditPostForm: FunctionComponent<{\n    post: WirePostModelModeratorExtensions;\n}> = ({ post }) => {\n    const updatePost = trpc.posts.moderation.editPost.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = (inputs) => {\n        return updatePost.mutateAsync({\n            postId: post.postId,\n            adultContent: inputs.adultContent,\n            adultContentOverride: inputs.adultContentOverride,\n            state: inputs.postState,\n            commentsLocked: inputs.commentsLocked,\n            cws: inputs.cws,\n        });\n    };\n\n    const { control, formState, register, handleSubmit } = useForm<Inputs>({\n        defaultValues: {\n            postState: post.state,\n            adultContent: post.adultContent,\n            adultContentOverride: post.adultContentOverride,\n            commentsLocked: post.commentsLocked,\n            cws: post.cws,\n        },\n    });\n\n    useEffect(() => {\n        if (formState.isSubmitSuccessful) location.reload();\n    }, [formState.isSubmitSuccessful]);\n\n    return (\n        <form\n            className=\"my-6 flex max-w-prose flex-col gap-4 divide-y\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <div className=\"flex flex-col gap-2\">\n                <label>post state</label>\n                {formState.errors.postState ? (\n                    <span className=\"font-bold text-red\">\n                        {formState.errors.postState.message}\n                    </span>\n                ) : null}\n                <select\n                    {...register(\"postState\", {\n                        valueAsNumber: true, // returns as string by default, which fails validation\n                    })}\n                >\n                    <option value={PostState.Deleted}>Deleted</option>\n                    <option value={PostState.Unpublished}>Unpublished</option>\n                    <option value={PostState.Published}>Published</option>\n                </select>\n            </div>\n\n            <div className=\"flex flex-col gap-2\">\n                <div className=\"flex flex-row items-center gap-2\">\n                    <label>adult content</label>\n                    <input type=\"checkbox\" {...register(\"adultContent\")} />\n                </div>\n                {formState.errors.adultContent ? (\n                    <span className=\"font-bold text-red\">\n                        {formState.errors.adultContent.message}\n                    </span>\n                ) : null}\n            </div>\n\n            <div className=\"flex flex-col gap-2\">\n                <div className=\"flex flex-row items-center gap-2\">\n                    <label>adult content override</label>\n                    <input\n                        type=\"checkbox\"\n                        {...register(\"adultContentOverride\")}\n                    />\n                </div>\n                {formState.errors.adultContentOverride ? (\n                    <span className=\"font-bold text-red\">\n                        {formState.errors.adultContentOverride.message}\n                    </span>\n                ) : null}\n            </div>\n\n            <div className=\"flex flex-col gap-2\">\n                <div className=\"flex flex-row items-center gap-2\">\n                    <label>comments locked</label>\n                    <input type=\"checkbox\" {...register(\"commentsLocked\")} />\n                </div>\n                {formState.errors.commentsLocked ? (\n                    <span className=\"font-bold text-red\">\n                        {formState.errors.commentsLocked.message}\n                    </span>\n                ) : null}\n            </div>\n\n            <div className=\"flex flex-col gap-2\">\n                <div className=\"flex flex-row items-center gap-2\">\n                    <label>CWs</label>\n                    <input\n                        className=\"w-full\"\n                        {...register(\"cws\", {\n                            setValueAs: (val: string | string[]): string[] =>\n                                typeof val === \"string\"\n                                    ? val.split(\",\").map((cw) => cw.trim())\n                                    : val,\n                        })}\n                    />\n                </div>\n                {formState.errors.cws ? (\n                    <span className=\"font-bold text-red\">\n                        {formState.errors.cws\n                            .map((error) => error.message)\n                            .join(\", \")}\n                    </span>\n                ) : null}\n            </div>\n\n            <Button\n                type=\"submit\"\n                buttonStyle=\"pill\"\n                color=\"cherry\"\n                className=\"max-w-max\"\n            >\n                submit\n            </Button>\n            {formState.isSubmitSuccessful ? (\n                <span className=\"font-bold text-green\">Submit successful!</span>\n            ) : null}\n\n            {process.env.NODE_ENV === \"development\" ? (\n                <DevTool control={control} />\n            ) : null}\n        </form>\n    );\n};\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","EditPostForm","post","updatePost","trpc","control","formState","register","handleSubmit","useForm","defaultValues","postState","state","adultContent","adultContentOverride","commentsLocked","cws","useEffect","isSubmitSuccessful","location","reload","onSubmit","inputs","mutateAsync","postId","errors","message","valueAsNumber","value","PostState","type","setValueAs","val","split","map","cw","trim","error","join"],"sourceRoot":""}