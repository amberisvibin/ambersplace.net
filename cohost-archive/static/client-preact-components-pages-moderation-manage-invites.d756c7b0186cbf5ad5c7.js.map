{"version":3,"file":"client-preact-components-pages-moderation-manage-invites.d756c7b0186cbf5ad5c7.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/pages/moderation/manage-invites.tsx","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/outline/esm/ChevronLeftIcon.js"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import sitemap from \"@/shared/sitemap\";\nimport { WireInviteModel } from \"@/shared/types/wire-models\";\nimport { ChevronLeftIcon } from \"@heroicons/react/24/outline\";\nimport { DateTime } from \"luxon\";\nimport React, { FunctionComponent } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Button } from \"@/client/preact/components/elements/button\";\n\ntype ManageInvitesPageProps = {\n    activeInvites: WireInviteModel[];\n};\n\nexport const ManageInvites: FunctionComponent<ManageInvitesPageProps> = ({\n    activeInvites,\n}) => {\n    return (\n        <>\n            <Helmet title=\"manage invites\" />\n            <div className=\"flex flex-col gap-4 prose-headings:m-0\">\n                <h1>invite management page</h1>\n                <a href={sitemap.public.moderation.home().toString()}>\n                    <ChevronLeftIcon className=\"inline h-6 w-6\" />\n                    back to moderation home\n                </a>\n\n                <form\n                    className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n                    method=\"post\"\n                    action={sitemap.public.invites.create().toString()}\n                >\n                    <h2 className=\"text-xl\">create a new invite</h2>\n\n                    <div className=\"flex flex-row items-center gap-2\">\n                        <label htmlFor=\"nUserActivations\">\n                            number of user activations\n                        </label>\n                        <input\n                            type=\"number\"\n                            min={1}\n                            max={999}\n                            step={1}\n                            defaultValue={1}\n                            name=\"nUserActivations\"\n                        />\n                    </div>\n                    <Button type=\"submit\" color=\"cherry\" buttonStyle=\"pill\">\n                        create a new invite\n                    </Button>\n                </form>\n\n                <h2 className=\"text-xl\">active invites</h2>\n\n                <table className=\"max-w-fit table-auto whitespace-nowrap text-center\">\n                    <thead className=\"border-b border-gray\">\n                        <tr>\n                            <th className=\"p-3\" scope=\"col\">\n                                invite ID\n                            </th>\n                            <th scope=\"col\" className=\"p-3\">\n                                uses remaining\n                            </th>\n                            <th scope=\"col\" className=\"p-3\">\n                                created at\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {activeInvites.map((invite) => {\n                            const inviteLink = sitemap.public.invites.activate({\n                                inviteId: invite.inviteId,\n                            });\n\n                            return (\n                                <tr\n                                    key={invite.inviteId}\n                                    className=\"border-b border-gray\"\n                                >\n                                    <td className=\"p-3\">\n                                        <a href={inviteLink.toString()}>\n                                            {invite.inviteId}\n                                        </a>\n                                    </td>\n                                    <td className=\"p-3\">\n                                        {invite.userActivationsRemaining}\n                                    </td>\n                                    <td className=\"p-3\">\n                                        {DateTime.fromISO(invite.createdAt)\n                                            .toUTC()\n                                            .toLocaleString({\n                                                ...DateTime.DATETIME_MED,\n                                                timeZoneName: \"short\",\n                                            })}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n};\n\nManageInvites.displayName = \"moderation/manage-invites\";\nexport default ManageInvites;\n","import * as React from \"react\";\n\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 19.5L8.25 12l7.5-7.5\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","ManageInvites","activeInvites","Helmet","title","href","sitemap","toString","ChevronLeftIcon","method","action","htmlFor","type","min","max","step","defaultValue","name","scope","map","invite","inviteLink","inviteId","key","userActivationsRemaining","DateTime","createdAt","toUTC","toLocaleString","timeZoneName","ForwardRef","titleId","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","id","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}