{"version":3,"file":"client-preact-components-pages-moderation-manage-user.fb58775fcf8e529da5a2.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/pages/moderation/manage-user.activate.tsx","webpack:///./preact/components/pages/moderation/manage-user.ban-user-form.tsx","webpack:///./preact/components/pages/moderation/manage-user.birthdate-edit-form.tsx","webpack:///./preact/components/pages/moderation/manage-user.manage-permissions.tsx","webpack:///./preact/components/pages/moderation/manage-user.purge-user.tsx","webpack:///./preact/components/pages/moderation/manage-user.tsx","webpack:///../shared/types/wire-models.ts"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import { trpc } from \"@/client/lib/trpc\";\nimport { UserId } from \"@/shared/types/ids\";\nimport React, { FunctionComponent } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"../../elements/button\";\nimport { InfoBox } from \"../../elements/info-box\";\n\nexport const ActivateUserForm: FunctionComponent<{ userId: UserId }> = ({\n    userId,\n}) => {\n    const navigate = useNavigate();\n\n    const { handleSubmit } = useForm();\n    const activateUserMutation = trpc.moderation.user.activate.useMutation();\n\n    const onSubmit = async () => {\n        await activateUserMutation.mutateAsync({ userId });\n        navigate(0);\n    };\n\n    return (\n        <form\n            className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <h4 className=\"h4\">activate user</h4>\n            <InfoBox level=\"info\" className=\"prose\">\n                this generates a new single-use invite and activates the user\n                with it, sending them an email to let them know they can post\n                now.\n            </InfoBox>\n            <Button\n                type=\"submit\"\n                buttonStyle=\"pill\"\n                color=\"cherry\"\n                className=\"w-fit\"\n            >\n                activate user\n            </Button>\n        </form>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { UserId } from \"@/shared/types/ids\";\nimport React, { FunctionComponent } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"../../elements/button\";\nimport { InfoBox } from \"../../elements/info-box\";\n\ntype Inputs = {\n    banReason: string;\n};\n\nexport const BanUserForm: FunctionComponent<{ userId: UserId }> = ({\n    userId,\n}) => {\n    const { register, handleSubmit } = useForm<Inputs>();\n    const navigate = useNavigate();\n\n    const banUserMutation = trpc.moderation.user.ban.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = (values) =>\n        banUserMutation\n            .mutateAsync({\n                userId,\n                banReason: values.banReason,\n            })\n            .then(() =>\n                // reload the page\n                navigate(0)\n            );\n\n    return (\n        <form\n            className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <h4 className=\"h4\">ban user</h4>\n            <InfoBox level=\"warning\" className=\"prose\">\n                <p>\n                    <b>HEADS UP!</b> This will add the \"suspended\" permission to\n                    the user as well as the \"suspended\" flag to their\n                    self-project and all projcts which they are the sole editor\n                    of.\n                </p>\n                <p>\n                    This will also delete ALL POSTS AND COMMENTS from those\n                    projects.\n                </p>\n                <p>\n                    This last part is very difficult to undo, so ONLY RUN THIS\n                    IF YOU ARE GOING SCORCHED EARTH!\n                </p>\n            </InfoBox>\n            <label>reason for banning user:</label>\n            <textarea {...register(\"banReason\", { required: true })} />\n            <Button\n                type=\"submit\"\n                buttonStyle=\"pill\"\n                color=\"cherry\"\n                className=\"w-fit\"\n            >\n                ban user\n            </Button>\n        </form>\n    );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { WireUserModel } from \"@/shared/types/wire-models\";\nimport { DateTime } from \"luxon\";\nimport { Button } from \"../../elements/button\";\n\ntype Inputs = {\n    birthdate: string;\n};\n\nconst SIXTEEN_YEARS_AGO = DateTime.now().minus({ years: 16 });\n\nexport const BirthdateEditForm: FunctionComponent<{\n    user: WireUserModel;\n    birthdate: string;\n}> = ({ user, birthdate }) => {\n    const { register, handleSubmit, formState } = useForm<Inputs>({\n        defaultValues: {\n            // get just the date component of the ISO string. date inputs are very particular about this\n            birthdate: birthdate.substring(0, 10),\n        },\n    });\n\n    const mutateBirthdate = trpc.moderation.user.changeBirthdate.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = async ({ birthdate }) => {\n        await mutateBirthdate.mutateAsync({\n            userId: user.userId,\n            date: birthdate,\n        });\n    };\n\n    return (\n        <form\n            onSubmit={handleSubmit(onSubmit)}\n            className=\"flex flex-row items-center gap-4\"\n        >\n            <input\n                type=\"date\"\n                max={SIXTEEN_YEARS_AGO.toISODate()}\n                {...register(\"birthdate\", {\n                    required: true,\n                    max: SIXTEEN_YEARS_AGO.toISODate(),\n                })}\n            />\n            <Button buttonStyle=\"pill\" color=\"cherry\" type=\"submit\">\n                save birthdate\n            </Button>\n            {formState.isSubmitting ? (\n                <span className=\"font-bold\">sending...</span>\n            ) : null}\n            {formState.isSubmitSuccessful ? (\n                <span className=\"font-bold text-green\">Saved!</span>\n            ) : null}\n        </form>\n    );\n};\n","import { Button } from \"@/client/preact/components/elements/button\";\nimport { GrantOrRevokePermissionReq } from \"@/shared/api-types/moderation-v1\";\nimport sitemap from \"@/shared/sitemap\";\nimport { Permission, WireUserModel } from \"@/shared/types/wire-models\";\nimport axios, { AxiosResponse } from \"axios\";\nimport React, { FunctionComponent } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\n\ntype Inputs = {\n    action: \"grant\" | \"revoke\";\n    permission: Permission;\n    reason: string;\n};\n\nexport const ManagePermissionsForm: FunctionComponent<{\n    user: WireUserModel;\n    permissions: Permission[];\n}> = ({ permissions, user }) => {\n    const { register: registerGrant, handleSubmit: handleSubmitGrant } =\n        useForm<Inputs>();\n    const { register: registerRevoke, handleSubmit: handleSubmitRevoke } =\n        useForm<Inputs>();\n    const ungrantedPermissions = Permission.options.filter(\n        (p) => permissions.indexOf(p) === -1\n    );\n\n    const onSubmit: SubmitHandler<Inputs> = async (data) => {\n        try {\n            const reqData: GrantOrRevokePermissionReq = {\n                userId: user.userId,\n                ...data,\n            };\n\n            if (data.action === \"grant\") {\n                await axios.post<\n                    any,\n                    AxiosResponse<any>,\n                    GrantOrRevokePermissionReq\n                >(\n                    sitemap.public.apiV1.moderation\n                        .grantOrRevokePermission()\n                        .toString(),\n                    reqData\n                );\n            } else {\n                await axios.delete<\n                    any,\n                    AxiosResponse<any>,\n                    GrantOrRevokePermissionReq\n                >(\n                    sitemap.public.apiV1.moderation\n                        .grantOrRevokePermission()\n                        .toString(),\n                    { data: reqData }\n                );\n            }\n        } finally {\n            window.location.reload();\n        }\n    };\n\n    return (\n        <>\n            <form\n                className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n                onSubmit={handleSubmitGrant(onSubmit)}\n            >\n                <h4 className=\"h4\">grant permissions</h4>\n                <input\n                    type=\"hidden\"\n                    value=\"grant\"\n                    {...registerGrant(\"action\")}\n                />\n                permission to grant:\n                {ungrantedPermissions.map((permission) => (\n                    <div key={permission}>\n                        <input\n                            type=\"radio\"\n                            id={`grant-permission-${permission}`}\n                            value={permission}\n                            {...registerGrant(\"permission\", { required: true })}\n                        />\n                        <label htmlFor={`permission-${permission}`}>\n                            {permission}\n                        </label>\n                    </div>\n                ))}\n                reason for granting permission:\n                <textarea {...registerGrant(\"reason\", { required: true })} />\n                <Button\n                    type=\"submit\"\n                    buttonStyle=\"pill\"\n                    color=\"cherry\"\n                    className=\"w-fit\"\n                >\n                    grant permission\n                </Button>\n            </form>\n            <form\n                className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n                onSubmit={handleSubmitRevoke(onSubmit)}\n            >\n                <h4 className=\"h4\">revoke permissions</h4>\n                <input\n                    type=\"hidden\"\n                    value=\"revoke\"\n                    {...registerRevoke(\"action\")}\n                />\n                permission to revoke:\n                {permissions.map((permission) => (\n                    <div key={permission}>\n                        <input\n                            type=\"radio\"\n                            id={`revoke-permission-${permission}`}\n                            value={permission}\n                            {...registerRevoke(\"permission\", {\n                                required: true,\n                            })}\n                        />\n                        <label htmlFor={`permission-${permission}`}>\n                            {permission}\n                        </label>\n                    </div>\n                ))}\n                reason for revoking permission:\n                <textarea {...registerRevoke(\"reason\", { required: true })} />\n                <Button\n                    type=\"submit\"\n                    buttonStyle=\"pill\"\n                    color=\"cherry\"\n                    className=\"w-fit\"\n                >\n                    revoke permission\n                </Button>\n            </form>\n        </>\n    );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport { InfoBox } from \"../../elements/info-box\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { UserId } from \"@/shared/types/ids\";\n\ntype Inputs = {\n    confirmed: boolean;\n};\n\ntype Props = {\n    email: string;\n    userId: UserId;\n};\n\nexport const PurgeUserForm: FunctionComponent<Props> = ({ email, userId }) => {\n    const { register, handleSubmit, watch } = useForm<Inputs>();\n    const formState = watch();\n\n    const purgeUserMutation = trpc.moderation.user.purge.useMutation();\n    const { data: hasActiveSubscription } =\n        trpc.moderation.user.hasActiveSubscription.useQuery(\n            { userId },\n            { suspense: true }\n        );\n\n    const onSubmit = async () => {\n        await purgeUserMutation.mutateAsync({\n            userId,\n        });\n    };\n\n    return (\n        <form\n            className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <h4 className=\"h4\">purge user</h4>\n\n            {hasActiveSubscription ? (\n                <InfoBox level=\"warning\" className=\"prose\">\n                    <p>\n                        This user ({email}) cannot currently be purged because\n                        they have one or more active subscriptions. Cancel and\n                        refund them manually first from the Stripe dashboard.\n                    </p>\n                </InfoBox>\n            ) : (\n                <>\n                    <InfoBox level=\"warning\" className=\"prose\">\n                        <p>\n                            <b>HEADS UP!</b> This will perform the following\n                            irreverseable operations:\n                            <ul>\n                                <li>purge this user's self-project;</li>\n                                <li>\n                                    purge all non-self projects for which this\n                                    user is the sole editor;\n                                </li>\n                                <li>permanently delete this user</li>\n                            </ul>\n                        </p>\n                        <p>\n                            Only use this form if you're doing it at user\n                            request!\n                        </p>\n                    </InfoBox>\n\n                    <label>\n                        I've read the warnings and I'm still gonna do it:\n                    </label>\n                    <input\n                        type=\"checkbox\"\n                        {...register(\"confirmed\", { required: true })}\n                    />\n                    <Button\n                        type=\"submit\"\n                        buttonStyle=\"pill\"\n                        color=\"cherry\"\n                        className=\"w-fit\"\n                        disabled={!formState.confirmed}\n                    >\n                        purge user\n                    </Button>\n                </>\n            )}\n        </form>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport {\n    Permission,\n    WireAuditLogEntryTypes,\n    WireUserModel,\n} from \"@/shared/types/wire-models\";\nimport React, { FunctionComponent, useState } from \"react\";\nimport { ActivateUserForm } from \"./manage-user.activate\";\nimport { BanUserForm } from \"./manage-user.ban-user-form\";\nimport { ManagePermissionsForm } from \"./manage-user.manage-permissions\";\nimport { PurgeUserForm } from \"./manage-user.purge-user\";\nimport { sitemap } from \"@/shared/sitemap\";\nimport { BirthdateEditForm } from \"./manage-user.birthdate-edit-form\";\nimport { UserId } from \"@/shared/types/ids\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from \"../../elements/button\";\nimport { BasicButton } from \"../../elements/basic-button\";\n\nexport type ManageUserPageProps = {\n    user: WireUserModel;\n    moderationUserData: {\n        stripeCustomerId: string | null;\n        emailVerifyCanceled: boolean;\n        birthdate: string;\n        lastActivityTime: string | null;\n    };\n    permissions: Permission[];\n    auditLog: (\n        | WireAuditLogEntryTypes[\"grant_permission\"]\n        | WireAuditLogEntryTypes[\"revoke_permission\"]\n    )[];\n    userLookup: { [userId: string]: WireUserModel };\n    isActivated: boolean;\n};\n\nconst Reset2FAButton: FunctionComponent<{ userId: UserId }> = ({ userId }) => {\n    const navigate = useNavigate();\n\n    const reset2FAMutation = trpc.moderation.user.reset2FA.useMutation();\n\n    const onClick = () =>\n        reset2FAMutation\n            .mutateAsync({\n                userId,\n            })\n            .then(() =>\n                // reload the page\n                navigate(0)\n            );\n\n    return (\n        <Button\n            buttonStyle=\"pill\"\n            color=\"cherry\"\n            className=\"w-fit\"\n            onClick={onClick}\n        >\n            reset 2FA\n        </Button>\n    );\n};\n\nexport const ManageUser: FunctionComponent<ManageUserPageProps> = ({\n    user,\n    permissions,\n    auditLog,\n    userLookup,\n    isActivated,\n    moderationUserData,\n}) => {\n    const editedProjects = trpc.moderation.user.listEditedProjects.useQuery(\n        { userId: user.userId },\n        {\n            suspense: true,\n        }\n    );\n    const noSelfProject =\n        !!editedProjects.data?.projects &&\n        !editedProjects.data.projects.some((project) => project.isSelfProject);\n    const [showBirthdateEditForm, setShowBirthdateEditForm] = useState(false);\n\n    const recreateSelfProject =\n        trpc.moderation.user.recreateSelfProject.useMutation();\n    const utils = trpc.useContext();\n\n    const onRecreateSelfProject = async () => {\n        await recreateSelfProject.mutateAsync({ userId: user.userId });\n        await utils.moderation.user.listEditedProjects.invalidate();\n    };\n\n    return (\n        <div className=\"cohost-shadow-light dark:cohost-shadow-dark container mx-auto mt-12 flex flex-col gap-4 rounded-lg bg-notWhite p-3 text-notBlack\">\n            <h1 className=\"text-4xl\">manage user</h1>\n\n            <div className=\"prose\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>e-mail address</td>\n                            <td>\n                                {user.email} (\n                                {user.emailVerified\n                                    ? \"verified\"\n                                    : moderationUserData.emailVerifyCanceled\n                                    ? \"verification cancelled\"\n                                    : \"not verified\"}\n                                )\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>2fa enabled</td>\n                            <td>\n                                {user.twoFactorEnabled.toString()}\n\n                                {user.twoFactorEnabled ? (\n                                    <Reset2FAButton userId={user.userId} />\n                                ) : null}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>is adult</td>\n                            <td>\n                                {user.isAdult ? \"true\" : \"false\"} (\n                                <a\n                                    onClick={() =>\n                                        setShowBirthdateEditForm(true)\n                                    }\n                                    className=\"cursor-pointer\"\n                                >\n                                    edit birthdate\n                                </a>\n                                )\n                            </td>\n                        </tr>\n                        {showBirthdateEditForm ? (\n                            <tr>\n                                <td colSpan={2}>\n                                    <BirthdateEditForm\n                                        user={user}\n                                        birthdate={moderationUserData.birthdate}\n                                    />\n                                </td>\n                            </tr>\n                        ) : null}\n                        <tr>\n                            <td>is activated</td>\n                            <td>{isActivated.toString()}</td>\n                        </tr>\n                        <tr>\n                            <td>stripe customer id</td>\n                            <td>\n                                {moderationUserData.stripeCustomerId ? (\n                                    <a\n                                        href={`https://dashboard.stripe.com/customers/${moderationUserData.stripeCustomerId}`}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {moderationUserData.stripeCustomerId}\n                                    </a>\n                                ) : (\n                                    \"n/a\"\n                                )}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>last activity time</td>\n                            <td>\n                                {moderationUserData.lastActivityTime ?? \"null\"}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div className=\"prose rounded-lg border border-mango p-3\">\n                <h2>edited projects</h2>\n                <ul>\n                    {editedProjects.data?.projects.map((project) => (\n                        <li key={project.projectId}>\n                            {project.displayName} (\n                            <a\n                                href={sitemap.public.project\n                                    .mainAppProfile({\n                                        projectHandle: project.handle,\n                                    })\n                                    .toString()}\n                            >\n                                @{project.handle}\n                            </a>\n                            ) -{\" \"}\n                            <a\n                                href={sitemap.public.moderation\n                                    .manageProject({\n                                        projectHandle: project.handle,\n                                    })\n                                    .toString()}\n                            >\n                                manage\n                            </a>\n                        </li>\n                    ))}\n                    {noSelfProject ? (\n                        <>\n                            this user appears to be missing a self project. you\n                            can&nbsp;\n                            <BasicButton\n                                buttonSize=\"regular\"\n                                buttonColor=\"cherry\"\n                                type=\"button\"\n                                onClick={onRecreateSelfProject}\n                            >\n                                create one\n                            </BasicButton>\n                            &nbsp;for them.\n                        </>\n                    ) : null}\n                </ul>\n            </div>\n\n            {isActivated ? null : <ActivateUserForm userId={user.userId} />}\n\n            <ManagePermissionsForm user={user} permissions={permissions} />\n\n            <h4 className=\"h4\">permission audit log</h4>\n\n            <table className=\"prose\">\n                <thead>\n                    <tr>\n                        <td>granted/revoked</td>\n                        <td>permission</td>\n                        <td>performed at</td>\n                        <td>performed by user id (e-mail)</td>\n                        <td>reason</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {auditLog.map((entry) => (\n                        <tr key={entry.entryId}>\n                            <td>\n                                {entry.logType === \"grant_permission\"\n                                    ? \"granted\"\n                                    : \"revoked\"}\n                            </td>\n                            <td>{entry.permission}</td>\n                            <td>{entry.loggedAt}</td>\n                            <td>\n                                {`${entry.changedBy} (${\n                                    userLookup[entry.changedBy.toString()]\n                                        ?.email ?? \"undefined\"\n                                })`}\n                            </td>\n                            <td>{entry.reason}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <hr />\n            <BanUserForm userId={user.userId} />\n            <PurgeUserForm userId={user.userId} email={user.email} />\n        </div>\n    );\n};\n\nManageUser.displayName = \"moderation/manage-user\";\nexport default ManageUser;\n","import { string, z } from \"zod\";\nimport { AccessResult, AccessResultEnum } from \"./access-result\";\nimport {\n    ArtistAlleyAdId,\n    AskId,\n    AttachmentId,\n    CommentId,\n    ISODateString,\n    InviteId,\n    PostId,\n    ProjectId,\n    RelationshipId,\n    UserId,\n} from \"./ids\";\nimport { StorageBlock, ViewBlock } from \"./post-blocks\";\nimport { PostStateEnum } from \"./posts\";\nimport { ProjectFlag, WireProjectModel } from \"./projects\";\n\n// Type data needed for posts on the client\nexport const WirePostContentCommon = z.object({\n    postId: PostId,\n    headline: z.string(),\n    publishedAt: z.string().optional(),\n    filename: z.string(),\n    transparentShareOfPostId: PostId.nullable(),\n    shareOfPostId: PostId.nullable(),\n    state: PostStateEnum,\n    numComments: z.number(),\n    cws: z.string().array(),\n    tags: z.string().array(),\n    hasCohostPlus: z.boolean(),\n    pinned: z.boolean(),\n    commentsLocked: z.boolean(),\n    sharesLocked: z.boolean(),\n});\nexport type WirePostContentCommon = z.infer<typeof WirePostContentCommon>;\n\nexport const WirePostModel = WirePostContentCommon.extend({\n    adultContent: z.boolean(),\n    shareOfPostId: PostId.nullable(),\n    updatedAt: z.string(),\n    blocks: StorageBlock.array(),\n    attachments: z\n        .object({ attachmentId: AttachmentId, filename: z.string() })\n        .array(),\n});\nexport type WirePostModel = z.infer<typeof WirePostModel>;\n\nexport const WirePostModelModeratorExtensions = WirePostModel.extend({\n    adultContentOverride: z.boolean(),\n    projectId: ProjectId,\n});\nexport type WirePostModelModeratorExtensions = z.infer<\n    typeof WirePostModelModeratorExtensions\n>;\n\nexport const Permission = z.enum([\n    // allow the user to grant all permissions to any user\n    \"grant_all_permissions\",\n\n    // allow the user to access the moderator UI + view unpublished posts by\n    // projects they don't edit + grant the read-only and suspended permissions\n    \"moderator\",\n\n    // prevent the user from doing most things\n    \"read_only\",\n\n    // prevent the user from logging in\n    // the inconsistency here is deliberate to avoid breaking existing suspended users\n    \"suspended\",\n\n    // prevent the user from creating new projects\n    // only used in instances of extreme username hording\n    \"no_new_projects\",\n\n    // prevent the user from creating new artist alley listings. used in\n    // instances of extreme artist alley spam or repeated content violations\n    \"no_artist_alley\",\n]);\nexport type Permission = z.infer<typeof Permission>;\n\n// double declaration required due to a typescript limitation with recursive types\n// see: https://github.com/colinhacks/zod#recursive-types\ntype WireCommentViewModelInternal = {\n    comment: {\n        commentId: CommentId;\n        postedAtISO: string;\n        deleted: boolean;\n        body: string;\n        children: WireCommentViewModelInternal[];\n        postId: PostId;\n        inReplyTo: CommentId | null;\n        hasCohostPlus: boolean;\n        hidden: boolean;\n    };\n    canInteract: AccessResult;\n    canEdit: AccessResult;\n    canHide: AccessResult;\n    poster?: WireProjectModel;\n};\n\nexport const WireNotificationCommentViewModel = z.object({\n    canInteract: AccessResultEnum,\n    canEdit: AccessResultEnum,\n    canHide: AccessResultEnum,\n    comment: z.object({\n        body: z.string(),\n        children: z.tuple([]),\n        commentId: CommentId,\n        deleted: z.boolean(),\n        postId: PostId,\n        postedAtISO: z.string(),\n        inReplyTo: CommentId.nullable(),\n        hasCohostPlus: z.boolean(),\n        hidden: z.boolean(),\n    }),\n    poster: z.object({\n        projectId: ProjectId,\n    }),\n});\nexport type WireNotificationCommentViewModel = z.infer<\n    typeof WireNotificationCommentViewModel\n>;\n\nexport const WireCommentViewModel: z.ZodType<WireCommentViewModelInternal> =\n    z.lazy(() =>\n        z.object({\n            comment: z.object({\n                commentId: CommentId,\n                postedAtISO: ISODateString,\n                deleted: z.boolean(),\n                body: z.string(),\n                children: WireCommentViewModel.array(),\n                postId: PostId,\n                inReplyTo: CommentId.nullable(),\n                hasCohostPlus: z.boolean(),\n                hidden: z.boolean(),\n            }),\n            canInteract: AccessResultEnum,\n            canEdit: AccessResultEnum,\n            canHide: AccessResultEnum,\n            poster: WireProjectModel.optional(),\n        })\n    );\n\nexport type WireCommentViewModel = z.infer<typeof WireCommentViewModel>;\n\nexport const WireRenderedPostContent = z.object({\n    initial: z.string(),\n    expanded: z.string().optional(),\n});\n\nexport type WireRenderedPostContent = z.infer<typeof WireRenderedPostContent>;\n\nexport const LimitedVisibilityReason = z.enum([\n    \"none\",\n    \"log-in-first\",\n    \"deleted\",\n    \"unpublished\",\n    \"adult-content\",\n    \"blocked\",\n]);\nexport type LimitedVisibilityReason = z.infer<typeof LimitedVisibilityReason>;\n\n// rationale for building the post AST this way: originally, the entire post\n// shared one AST; this doesn't suffice when attachments can move around.  the\n// natural way to break the AST down then is per-block, but an inline HTML tag\n// can span multiple blocks, so we need to build spans of contiguous markdown\n// blocks as a unit or else HTML's tag auto-insertion rules kick in.\nexport const PostASTMap = z.object({\n    spans: z.array(\n        z.object({\n            startIndex: z.number(),\n            endIndex: z.number(),\n            ast: z.string(),\n        })\n    ),\n    readMoreIndex: z.number().nullable(),\n});\nexport type PostASTMap = z.infer<typeof PostASTMap>;\n\n// double declaration required due to a typescript limitation with recursive types\n// see: https://github.com/colinhacks/zod#recursive-types\ntype WirePostViewModelInternal = WirePostContentCommon & {\n    blocks: ViewBlock[];\n\n    plainTextBody: string;\n\n    postingProject: WireProjectModel;\n    shareTree: WirePostViewModelInternal[];\n    numSharedComments: number;\n    relatedProjects: WireProjectModel[];\n    singlePostPageUrl: string;\n    effectiveAdultContent: boolean;\n    isEditor: boolean;\n    hasAnyContributorMuted: boolean;\n    contributorBlockIncomingOrOutgoing: boolean;\n    postEditUrl: string;\n    isLiked: boolean;\n    canShare: boolean;\n    canPublish: boolean;\n    limitedVisibilityReason: LimitedVisibilityReason;\n    astMap: PostASTMap;\n\n    responseToAskId: AskId | null;\n};\n\nexport const WirePostViewModel: z.ZodType<WirePostViewModelInternal> = z.lazy(\n    () =>\n        WirePostContentCommon.extend({\n            blocks: ViewBlock.array(),\n            plainTextBody: z.string(),\n            postingProject: WireProjectModel,\n            shareTree: WirePostViewModel.array(),\n            numSharedComments: z.number(),\n            relatedProjects: WireProjectModel.array(),\n            singlePostPageUrl: z.string().url(),\n            effectiveAdultContent: z.boolean(),\n            isEditor: z.boolean(),\n            hasAnyContributorMuted: z.boolean(),\n            contributorBlockIncomingOrOutgoing: z.boolean(),\n            postEditUrl: z.string().url(),\n            isLiked: z.boolean(),\n            canShare: z.boolean(),\n            canPublish: z.boolean(),\n            limitedVisibilityReason: LimitedVisibilityReason,\n            astMap: PostASTMap,\n            responseToAskId: AskId.nullable(),\n        })\n);\nexport type WirePostViewModel = z.infer<typeof WirePostViewModel>;\n\nexport type WireInviteModel = {\n    inviteId: InviteId;\n    userActivationsRemaining: number;\n    createdAt: string;\n    owningUserId: UserId;\n};\n\nexport const WireUserModel = z.object({\n    userId: UserId,\n    email: z.string(),\n    emailVerified: z.boolean(),\n    collapseAdultContent: z.boolean(),\n    isAdult: z.boolean(),\n    twoFactorEnabled: z.boolean(),\n});\n\nexport type WireUserModel = z.infer<typeof WireUserModel>;\n\n//#region Notifications\nexport const WireNotificationType = z.enum([\n    \"like\",\n    \"comment\",\n    \"share\",\n    \"follow\",\n    \"groupedLike\",\n    \"groupedFollow\",\n    \"groupedShare\",\n]);\nexport type WireNotificationType = z.infer<typeof WireNotificationType>;\n\nconst BaseWireNotification = z.object({\n    type: WireNotificationType,\n    createdAt: z.string(),\n    fromProjectId: ProjectId,\n});\n\nconst BaseWireGroupNotification = z.object({\n    type: WireNotificationType,\n    createdAt: z.string(),\n    fromProjectIds: ProjectId.array(),\n    oldestCreatedAt: z.string(),\n});\n\nconst WirePostNotificationCommon = BaseWireNotification.extend({\n    toPostId: PostId,\n});\n\nconst WireGroupPostNotificationCommon = BaseWireGroupNotification.extend({\n    toPostId: PostId,\n});\n\nexport const WireLikeNotification = WirePostNotificationCommon.extend({\n    type: z.literal(\"like\"),\n    relationshipId: RelationshipId,\n});\nexport type WireLikeNotification = z.infer<typeof WireLikeNotification>;\n\nexport const WireGroupedLikeNotification =\n    WireGroupPostNotificationCommon.extend({\n        type: z.literal(\"groupedLike\"),\n        relationshipIds: RelationshipId.array(),\n    });\nexport type WireGroupedLikeNotification = z.infer<\n    typeof WireGroupedLikeNotification\n>;\n\nexport const WireGroupedFollowNotification = BaseWireGroupNotification.extend({\n    type: z.literal(\"groupedFollow\"),\n});\nexport type WireGroupedFollowNotification = z.infer<\n    typeof WireGroupedFollowNotification\n>;\n\nexport const WireGroupedShareNotification =\n    WireGroupPostNotificationCommon.extend({\n        type: z.literal(\"groupedShare\"),\n        transparentShare: z.boolean(),\n        sharePostIds: PostId.array(),\n    });\nexport type WireGroupedShareNotification = z.infer<\n    typeof WireGroupedShareNotification\n>;\n\nexport const WireCommentNotification = WirePostNotificationCommon.extend({\n    type: z.literal(\"comment\"),\n    commentId: CommentId,\n    inReplyTo: CommentId.nullable(),\n});\nexport type WireCommentNotification = z.infer<typeof WireCommentNotification>;\n\nexport const WireShareNotification = WirePostNotificationCommon.extend({\n    type: z.literal(\"share\"),\n    sharePostId: PostId,\n    transparentShare: z.boolean(),\n});\nexport type WireShareNotification = z.infer<typeof WireShareNotification>;\n\nexport const WireFollowNotification = BaseWireNotification.extend({\n    type: z.literal(\"follow\"),\n});\nexport type WireFollowNotification = z.infer<typeof WireFollowNotification>;\n\n// we don't cache group notifications, so we need a separate type that excludes\n// them for redis operations.\nexport const WireUngroupedNotification = z.discriminatedUnion(\"type\", [\n    WireLikeNotification,\n    WireCommentNotification,\n    WireShareNotification,\n    WireFollowNotification,\n]);\nexport type WireUngroupedNotification = z.infer<\n    typeof WireUngroupedNotification\n>;\n\nexport const WireGroupedNotification = z.union([\n    WireGroupedLikeNotification,\n    WireGroupedFollowNotification,\n    WireGroupedShareNotification,\n]);\nexport type WireGroupedNotification = z.infer<typeof WireGroupedNotification>;\n\nexport const WireNotification = z.union([\n    WireUngroupedNotification,\n    WireGroupedNotification,\n]);\n\nexport type WireNotification = z.infer<typeof WireNotification>;\n//#endregion\n\n//#region audit logs\nexport const AuditLogType = z.enum([\n    \"edit_comment\",\n    \"delete_comment\",\n    \"edit_post\",\n    \"edit_project_ugc\",\n    \"edit_project_mod_flags\",\n    \"grant_permission\",\n    \"revoke_permission\",\n    \"add_editor\",\n    \"remove_editor\",\n    \"edit_project_flags\",\n    \"edit_user\",\n    \"2fa_login_failed\",\n    \"2fa_reset\",\n    \"2fa_reset_failed\",\n    \"artist_alley_approved\",\n    \"artist_alley_rejected\",\n    \"artist_alley_mod_edited\",\n]);\nexport type AuditLogType = z.infer<typeof AuditLogType>;\n\nconst BaseWireAuditLogBody = z.object({\n    entryId: z.string(),\n    loggedAt: z.string(),\n});\n\nconst TwoFactorAuditLogBody = BaseWireAuditLogBody.extend({\n    userId: UserId,\n});\n\nconst PermissionWireAuditLogBody = BaseWireAuditLogBody.extend({\n    userId: UserId,\n    permission: Permission,\n    changedBy: UserId,\n    reason: z.string(),\n});\n\nconst EditorshipWireAuditLogBody = BaseWireAuditLogBody.extend({\n    projectId: ProjectId,\n    userId: UserId,\n    changedBy: UserId,\n    reason: z.string(),\n});\n\nconst EditProjectModFlagsAuditLogBody = BaseWireAuditLogBody.extend({\n    projectId: ProjectId,\n    oldAdultContent: z.boolean(),\n    oldAdultContentOverride: z.boolean(),\n    newAdultContent: z.boolean(),\n    newAdultContentOverride: z.boolean(),\n    changedBy: UserId,\n    reason: z.string(),\n});\n\nconst EditProjectFlagsAuditLogBody = BaseWireAuditLogBody.extend({\n    projectId: ProjectId,\n    changedBy: UserId,\n    reason: z.string(),\n    oldFlags: ProjectFlag.array(),\n    newFlags: ProjectFlag.array(),\n});\n\nconst EditUserAuditLogBody = BaseWireAuditLogBody.extend({\n    userId: UserId,\n    oldEmail: z.string(),\n    newEmail: z.string(),\n    oldPendingEmail: z.string().nullable(),\n    newPendingEmail: z.string().nullable(),\n    oldUsername: z.string(),\n    newUsername: z.string(),\n});\n\nconst EditPostAuditLogBody = BaseWireAuditLogBody.extend({\n    postId: PostId,\n    oldHeadline: z.string(),\n    newHeadline: z.string(),\n    oldBlocks: StorageBlock.array(),\n    newBlocks: StorageBlock.array(),\n    oldState: PostStateEnum,\n    newState: PostStateEnum,\n    oldAdultContent: z.boolean().optional(), // types added later, missing from old audit logs\n    newAdultContent: z.boolean().optional(),\n    oldAdultContentOverride: z.boolean().optional(),\n    newAdultContentOverride: z.boolean().optional(),\n    oldCws: z.string().array().optional(),\n    newCws: z.string().array().optional(),\n    oldCommentsLocked: z.boolean().optional(),\n    newCommentsLocked: z.boolean().optional(),\n});\n\nexport const WireAuditLogEntryTypes = {\n    edit_comment: BaseWireAuditLogBody.extend({\n        logType: z.literal(\"edit_comment\"),\n    }),\n    delete_comment: BaseWireAuditLogBody.extend({\n        logType: z.literal(\"delete_comment\"),\n    }),\n    grant_permission: PermissionWireAuditLogBody.extend({\n        logType: z.literal(\"grant_permission\"),\n    }),\n    revoke_permission: PermissionWireAuditLogBody.extend({\n        logType: z.literal(\"revoke_permission\"),\n    }),\n    edit_post: EditPostAuditLogBody.extend({\n        logType: z.literal(\"edit_post\"),\n    }),\n    edit_project_ugc: BaseWireAuditLogBody.extend({\n        logType: z.literal(\"edit_project_ugc\"),\n    }),\n    edit_project_mod_flags: EditProjectModFlagsAuditLogBody.extend({\n        logType: z.literal(\"edit_project_mod_flags\"),\n    }),\n    add_editor: EditorshipWireAuditLogBody.extend({\n        logType: z.literal(\"add_editor\"),\n    }),\n    remove_editor: EditorshipWireAuditLogBody.extend({\n        logType: z.literal(\"remove_editor\"),\n    }),\n    edit_project_flags: EditProjectFlagsAuditLogBody.extend({\n        logType: z.literal(\"edit_project_flags\"),\n    }),\n    edit_user: EditUserAuditLogBody.extend({\n        logType: z.literal(\"edit_user\"),\n    }),\n    \"2fa_login_failed\": TwoFactorAuditLogBody.extend({\n        logType: z.literal(\"2fa_login_failed\"),\n    }),\n    \"2fa_reset\": TwoFactorAuditLogBody.extend({\n        logType: z.literal(\"2fa_reset\"),\n    }),\n    \"2fa_reset_failed\": TwoFactorAuditLogBody.extend({\n        logType: z.literal(\"2fa_reset_failed\"),\n    }),\n    artist_alley_approved: BaseWireAuditLogBody.extend({\n        logType: z.literal(\"artist_alley_approved\"),\n        listingId: ArtistAlleyAdId,\n        changedBy: UserId,\n    }),\n    artist_alley_rejected: BaseWireAuditLogBody.extend({\n        logType: z.literal(\"artist_alley_rejected\"),\n        listingId: ArtistAlleyAdId,\n        changedBy: UserId,\n        rejectionReason: z.string(),\n    }),\n    artist_alley_mod_edited: BaseWireAuditLogBody.extend({\n        logType: z.literal(\"artist_alley_mod_edited\"),\n        listingId: ArtistAlleyAdId,\n        changedBy: UserId,\n    }),\n} as const;\n\nexport type WireAuditLogEntryTypes = {\n    [t in keyof typeof AuditLogType.enum]: z.infer<\n        (typeof WireAuditLogEntryTypes)[t]\n    >;\n};\n\nexport const WireAuditLogEntry = z.discriminatedUnion(\"logType\", [\n    WireAuditLogEntryTypes.edit_comment,\n    WireAuditLogEntryTypes.delete_comment,\n    WireAuditLogEntryTypes.grant_permission,\n    WireAuditLogEntryTypes.revoke_permission,\n    WireAuditLogEntryTypes.edit_post,\n    WireAuditLogEntryTypes.edit_project_ugc,\n    WireAuditLogEntryTypes.add_editor,\n    WireAuditLogEntryTypes.remove_editor,\n]);\n\nexport type WireAuditLogEntry = z.infer<typeof WireAuditLogEntry>;\n//#endregion audit logs\n\nexport const SubscriptionStatus = z.enum([\n    \"active\",\n    \"past_due\",\n    \"unpaid\",\n    \"canceled\",\n    \"incomplete\",\n    \"incomplete_expired\",\n    \"trialing\",\n]);\nexport type SubscriptionStatus = z.infer<typeof SubscriptionStatus>;\n\nexport const WireSubscription = z.object({\n    expirationDate: ISODateString,\n    status: SubscriptionStatus,\n});\nexport type WireSubscription = z.infer<typeof WireSubscription>;\n\nexport const WirePostComposerSettings = z.object({\n    defaultAdultContent: z.boolean(),\n    editingPost: WirePostViewModel.optional(),\n    // everything below this point is currently unsupported but that may change\n    defaultCws: z.string().array(),\n    defaultTags: z.string().array(),\n});\n\nexport const FollowedProjectFeed = z.object({\n    projects: z.array(\n        z.object({\n            project: WireProjectModel,\n            projectPinned: z.boolean(),\n            latestPost: WirePostViewModel.nullable(),\n        })\n    ),\n    nextCursor: z.number().nullable(),\n});\nexport type FollowedProjectFeed = z.infer<typeof FollowedProjectFeed>;\n\nexport const FollowedProjectFeedSortOrder = z.enum([\n    \"recently-posted\",\n    \"followed-asc\",\n    \"followed-desc\",\n    \"alpha-asc\",\n    \"alpha-desc\",\n]);\nexport type FollowedProjectFeedSortOrder = z.infer<\n    typeof FollowedProjectFeedSortOrder\n>;\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","ActivateUserForm","userId","navigate","useNavigate","handleSubmit","useForm","activateUserMutation","trpc","onSubmit","async","mutateAsync","InfoBox","level","type","BanUserForm","register","banUserMutation","values","banReason","then","required","SIXTEEN_YEARS_AGO","DateTime","minus","years","BirthdateEditForm","user","birthdate","formState","defaultValues","substring","mutateBirthdate","date","max","toISODate","isSubmitting","isSubmitSuccessful","ManagePermissionsForm","permissions","registerGrant","handleSubmitGrant","registerRevoke","handleSubmitRevoke","ungrantedPermissions","Permission","p","indexOf","reqData","data","action","axios","sitemap","toString","window","location","reload","value","map","permission","key","id","htmlFor","PurgeUserForm","email","watch","purgeUserMutation","hasActiveSubscription","suspense","disabled","confirmed","Reset2FAButton","reset2FAMutation","onClick","ManageUser","auditLog","userLookup","isActivated","moderationUserData","editedProjects","noSelfProject","projects","some","project","isSelfProject","showBirthdateEditForm","setShowBirthdateEditForm","useState","recreateSelfProject","utils","emailVerified","emailVerifyCanceled","twoFactorEnabled","isAdult","colSpan","stripeCustomerId","href","target","rel","lastActivityTime","projectId","projectHandle","handle","BasicButton","buttonSize","buttonColor","moderation","listEditedProjects","invalidate","entry","entryId","logType","loggedAt","changedBy","reason","WirePostContentCommon","postId","PostId","headline","publishedAt","filename","transparentShareOfPostId","shareOfPostId","state","PostStateEnum","numComments","cws","array","tags","hasCohostPlus","pinned","commentsLocked","sharesLocked","extend","adultContent","updatedAt","blocks","StorageBlock","attachments","attachmentId","AttachmentId","adultContentOverride","ProjectId","WireNotificationCommentViewModel","canInteract","AccessResultEnum","canEdit","canHide","comment","body","commentId","CommentId","deleted","postedAtISO","inReplyTo","hidden","poster","WireCommentViewModel","ISODateString","WireProjectModel","LimitedVisibilityReason","initial","expanded","PostASTMap","spans","startIndex","endIndex","ast","readMoreIndex","nullable","WirePostViewModel","ViewBlock","plainTextBody","postingProject","shareTree","numSharedComments","relatedProjects","singlePostPageUrl","url","effectiveAdultContent","isEditor","hasAnyContributorMuted","contributorBlockIncomingOrOutgoing","postEditUrl","isLiked","canShare","canPublish","limitedVisibilityReason","astMap","responseToAskId","AskId","WireNotificationType","UserId","collapseAdultContent","BaseWireNotification","createdAt","fromProjectId","BaseWireGroupNotification","fromProjectIds","oldestCreatedAt","WirePostNotificationCommon","toPostId","WireGroupPostNotificationCommon","WireLikeNotification","relationshipId","RelationshipId","WireGroupedLikeNotification","relationshipIds","WireGroupedFollowNotification","WireGroupedShareNotification","transparentShare","sharePostIds","WireCommentNotification","WireShareNotification","sharePostId","WireFollowNotification","WireUngroupedNotification","WireGroupedNotification","WireNotification","BaseWireAuditLogBody","TwoFactorAuditLogBody","PermissionWireAuditLogBody","EditorshipWireAuditLogBody","EditProjectModFlagsAuditLogBody","oldAdultContent","oldAdultContentOverride","newAdultContent","newAdultContentOverride","EditProjectFlagsAuditLogBody","oldFlags","ProjectFlag","newFlags","EditUserAuditLogBody","oldEmail","newEmail","oldPendingEmail","newPendingEmail","oldUsername","newUsername","EditPostAuditLogBody","oldHeadline","newHeadline","oldBlocks","newBlocks","oldState","newState","oldCws","newCws","oldCommentsLocked","newCommentsLocked","WireAuditLogEntryTypes","edit_comment","delete_comment","grant_permission","revoke_permission","edit_post","edit_project_ugc","edit_project_mod_flags","add_editor","remove_editor","edit_project_flags","edit_user","artist_alley_approved","listingId","ArtistAlleyAdId","artist_alley_rejected","rejectionReason","artist_alley_mod_edited","SubscriptionStatus","expirationDate","status","defaultAdultContent","editingPost","defaultCws","defaultTags","projectPinned","latestPost","nextCursor"],"sourceRoot":""}