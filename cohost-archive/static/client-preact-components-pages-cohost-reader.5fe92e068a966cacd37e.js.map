{"version":3,"file":"client-preact-components-pages-cohost-reader.5fe92e068a966cacd37e.js","mappings":"qOAaO,MAAMA,EAA0CC,IACnD,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAASH,EAAMI,UAAW,GAUxD,OACIC,EAAAA,cAACC,EAAAA,EAAM,CACHL,QAASA,EACTM,SARgBC,IACpBN,EAAWM,GACXR,EAAMO,SAASC,IAOXC,UAAWC,GAAAA,CACP,gEACA,CACI,CAACC,EAAAA,IAAoC,UAArBX,EAAMY,WACtB,CAACC,EAAAA,IAAsC,YAArBb,EAAMY,WACxB,yDAAaX,EACb,0DAAeA,KAItBD,EAAMc,MAAM,IAEZb,EACGI,EAAAA,cAACU,EAAAA,EAAS,CAACN,UAAU,QAErBJ,EAAAA,cAACW,EAAAA,EAAS,CAACP,UAAU,W,8HCvCrC,MAAMQ,EAA0D,CAC5DC,GAAI,QACJC,GAAI,QACJC,GAAI,SACJC,GAAI,SACJ,MAAO,U,iHCiBX,MAAMC,EACFtB,IAEA,MAAOuB,EAAYC,IAAiBrB,EAAAA,EAAAA,WAAS,IACtCsB,EAAaC,IAAkBvB,EAAAA,EAAAA,WAAS,IACxCwB,EAAUC,IAAezB,EAAAA,EAAAA,WAAS,IAClC0B,EAAkBC,IAAuB3B,EAAAA,EAAAA,WAAS,IAUlD4B,EAAiBC,IAAsB7B,EAAAA,EAAAA,WAAS,IAEvD8B,EAAAA,EAAAA,YAAU,KACND,GAAmB,KACpB,CAAChC,EAAMkC,gBAEV,MAAMC,GAAuBC,EAAAA,EAAAA,cACxBC,IACON,GAAmBM,IACnBA,EAAKC,SAAS,EAAG,GACjBN,GAAmB,MAG3B,CAACD,IAGCQ,EAAaC,EAAAA,EAAAA,SAAAA,aAAAA,WAAAA,cACbC,EAAeD,EAAAA,EAAAA,SAAAA,aAAAA,aAAAA,cACfE,EAAQF,EAAAA,EAAAA,aAERG,EAAWH,EAAAA,EAAAA,SAAAA,aAAAA,SAAAA,SACb,CACII,UACI5C,EAAMkC,eAAeW,QAAQD,YAAe,OAEpD,CACIE,UAAW9C,EAAMkC,cACjBa,YAAa/C,EAAMkC,eAAec,SA4BpCC,EAAajD,EAAMkC,cACnBgB,EAAAA,GAAAA,OAAAA,QAAAA,eACoB,CACZC,cAAenD,EAAMkC,cAAcW,QAAQO,SAE9CC,WACL,GAEN,OACIhD,EAAAA,cAAA,OAAKI,UAAU,4CACXJ,EAAAA,cAACiD,EAAAA,SAAQ,CAACC,SAAUlD,EAAAA,cAACmD,EAAAA,EAAO,CAAC/C,UAAU,qBAClCT,EAAMkC,cACH7B,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OAAKI,UAAU,uCACXJ,EAAAA,cAACN,EAAAA,EAAY,CACTa,WAAW,QACXE,MAAM,cACNP,SAAWC,GAAUsB,EAAoBtB,GACzCJ,QAASyB,IAGbxB,EAAAA,cAACN,EAAAA,EAAY,CACTa,WAAW,QACXE,MAAM,cACNP,SAAWC,GAAUgB,EAAchB,GACnCJ,QAASmB,IAGblB,EAAAA,cAACN,EAAAA,EAAY,CACTa,WAAW,QACXE,MAAM,eACNP,SAAWC,GAAUkB,EAAelB,GACpCJ,QAASqB,IAGbpB,EAAAA,cAACN,EAAAA,EAAY,CACTa,WAAW,QACXE,MAAM,YACNP,SAAWC,GAAUoB,EAAYpB,GACjCJ,QAASuB,IAGZ3B,EAAMkC,cAAcW,QAAQY,YAAYX,QACrCzC,EAAAA,cAACqD,EAAAA,EAAW,CACRC,GAAG,IACHC,YAAY,SACZhD,WAAW,QACXiD,KAAMX,EAAAA,GAAAA,OAAAA,QAAAA,IACG,CACDC,cACInD,EAAMkC,cAAcW,QACfO,SAEZC,YACR,OAGD,KAEJhD,EAAAA,cAACyD,EAAAA,EAAI,CAACH,GAAG,MAAMlD,UAAU,YACrBJ,EAAAA,cAACyD,EAAAA,EAAAA,OAAW,CAACH,GAAII,EAAAA,WACZ,EAAGC,KAAAA,MACA,MAAMC,EAAeD,EACf,gBACA,GAEN,OACI3D,EAAAA,cAACqD,EAAAA,EAAW,CACRE,YAAY,SACZhD,WAAW,QACXqD,aAAcA,GACjB,aAMb5D,EAAAA,cAACyD,EAAAA,EAAAA,MAAU,CAACrD,UAAU,8IACjBkC,EAASuB,KACN7D,EAAAA,cAACyD,EAAAA,EAAAA,KAAS,KACNzD,EAAAA,cAAC8D,EAAAA,EAAgB,CACbC,SAAUC,EAAAA,EACVC,SAAU3B,EAAS4B,WACnBC,KAAK,4BACLC,QAhG5BC,UACP1E,EAAMkC,sBAELO,EAAakC,YAAY,CAC3B/B,UAAW5C,EAAMkC,cAAcW,QAAQD,kBAErCF,EAAMkC,SAASC,aAAaC,MAAMC,mBAClCrC,EAAMkC,SAASC,aAAalC,SAASoC,WAAW,CAClDnC,UAAW5C,EAAMkC,cAAcW,QAAQD,iBA4FXvC,EAAAA,cAACyD,EAAAA,EAAAA,KAAS,KACNzD,EAAAA,cAAC8D,EAAAA,EAAgB,CACbC,SAAUC,EAAAA,EACVC,SAAU3B,EAAS4B,WACnBC,KAAK,wBACLC,QArH9BC,UACL1E,EAAMkC,sBAELK,EAAWoC,YAAY,CACzB/B,UAAW5C,EAAMkC,cAAcW,QAAQD,kBAErCF,EAAMkC,SAASC,aAAaC,MAAMC,mBAClCrC,EAAMkC,SAASC,aAAalC,SAASoC,WAAW,CAClDnC,UAAW5C,EAAMkC,cAAcW,QAAQD,iBAiHfvC,EAAAA,cAACyD,EAAAA,EAAAA,KAAS,KACNzD,EAAAA,cAAC8D,EAAAA,EAAgB,CACbR,GAAG,IACHS,SAAUY,EAAAA,EACVR,KAAK,gBACLX,KAAMZ,QAM1B5C,EAAAA,cAAA,OACII,UAAU,6CACVwE,IAAK9C,GAEL9B,EAAAA,cAAC6E,EAAAA,EAAwB,CACrB9B,OAAQpD,EAAMkC,cAAcW,QAAQO,OACpCvB,iBAAkBA,EAClBsD,aAAc1D,EACd2D,YAAa7D,EACb8D,UAAW1D,EACX2D,kBAAkB,MAI9B,QAMpBhE,EAAqBiE,YAAc,uBAEnC,Q,8UCjOO,MAAMC,EACTxF,GAEAK,EAAAA,cAAA,MAAAoF,EAAA,CACIC,KAAK,OACLC,MAAM,6BACNC,QAAQ,aACJ5F,GAEJK,EAAAA,cAAA,QACIwF,EAAE,oiBACFH,KAAK,kB,eCcjB,MAAMI,EAAmB,IAAIC,IAA0C,CACnE,CAAC,kBAAmB,qBACpB,CAAC,eAAgB,iCACjB,CAAC,gBAAiB,iCAClB,CAAC,YAAa,wBACd,CAAC,aAAc,0BAGbC,EAMAhG,IACF,MAAM,EAAEiG,IAAMC,EAAAA,EAAAA,MACRC,GAAUC,EAAAA,EAAAA,UAAQ,KACpB,IAAKpG,EAAMqG,WAAY,MAAO,GAE9B,MAAMC,GACFC,EAAAA,EAAAA,IAAkBvG,EAAMqG,WAAY,CAChCG,QAAQ,KACNP,EAAE,0CAA2C,aAEvD,OAAOK,EAAWG,OAAS,GAAKH,EAAWI,MAAM,EAAG,IAAMJ,IAC3D,CAACtG,EAAMqG,WAAYJ,IAEtB,OACI5F,EAAAA,cAAA,UACIsG,KAAK,SACLlG,UAAWC,GAAAA,CACP,CACI,mCAAoCV,EAAM4G,UAE9C,oEAEJnC,QAASzE,EAAMyE,SAEfpE,EAAAA,cAACwG,EAAAA,EAAa,CACVpG,UAAU,yFACVoC,QAAS7C,EAAM6C,QACfiE,QAAQ,IAEZzG,EAAAA,cAAA,OAAKI,UAAU,sGACXJ,EAAAA,cAAA,OAAKI,UAAU,+CACVT,EAAM6C,QAAQ0C,aAEnBlF,EAAAA,cAAA,OAAKI,UAAU,qCAAoC,IAC7CT,EAAM6C,QAAQO,QAEnBpD,EAAMqG,WACHhG,EAAAA,cAAA,OAAKI,UAAU,qCACVT,EAAMqG,WAAWU,YACd1G,EAAAA,cAAA,QAAMI,UAAU,iDACZJ,EAAAA,cAAC2G,EAAAA,EAAiB,CACdC,QAASjH,EAAMqG,WAAWU,YAC1BtG,UAAU,kDACZ,MAGN,KACH0F,GAEL,MAEPnG,EAAMgD,OACH3C,EAAAA,cAACgE,EAAAA,EAAW,CAAC5D,UAAU,uBACvB,OAoKhB,MA7JKT,IACD,MAAM,EAAEiG,IAAMC,EAAAA,EAAAA,OACPgB,EAAmBC,IACtBhH,EAAAA,EAAAA,UAA2B,OACxBiH,EAAWC,IACdlH,EAAAA,EAAAA,UAAuC,oBACpCmH,EAAeC,IAAoBpH,EAAAA,EAAAA,UACtCH,EAAMwH,kBAEJC,EAAYjF,EAAAA,EAAAA,SAAAA,aAAAA,MAAAA,iBACd,CACI4E,UAAAA,EACAM,MAAO,GACPC,gBAAiBL,GAErB,CACIM,UAAU,EACVC,UAAWC,EAAAA,EACXxC,kBAAkB,EAClByC,iBAAmBC,GAAaA,EAASC,iBAAcC,IAMzDC,EAAiB3F,EAAAA,EAAAA,SAAAA,aAAAA,WAAAA,SACnB,CACI4F,UAAWd,GAEf,CAAExE,QAAuB,oBAAdsE,IASTxC,EAAW6C,EAAUvD,KACrBmE,IAAAA,UAAYZ,EAAUvD,KAAKoE,MAAMC,KAAKC,GAAUA,EAAM5D,YACtD,GAEA6D,EAAaxC,EACf,yBACA,6CAGEyC,EACF,8KAEJ,OACIrI,EAAAA,cAAA,OAAKI,UAAU,mIACXJ,EAAAA,cAAA,OAAKI,UAAU,kCAEI,oBAAd2G,EACG/G,EAAAA,cAACqD,EAAAA,EAAW,CACR9C,WAAW,UACXgD,YAAY,oBACZU,SAAUmD,EAAUlD,WACpBE,QA3BAkE,KAGhBpB,EAAiBqB,KAAKC,QAyBN5E,aAAa,YAChB,UAEIkE,EAAejE,KACZ7D,EAAAA,cAACmF,EAAQ,CAAC/E,UAAU,iEACpB,MAER,KAEJJ,EAAAA,cAAA,OAAKI,UAAU,UAAS,KAExBJ,EAAAA,cAACyI,EAAAA,EAAO,CACJtI,MAAO4G,EACP7G,SAAWC,GACP6G,EAAa7G,IAGjBH,EAAAA,cAACyI,EAAAA,EAAAA,OAAc,CAACrI,UAAU,mDACtBJ,EAAAA,cAAA,OACII,UAAWC,GAAAA,CACP,0DACAgI,IAGH5C,EAAiBiD,IAAI3B,IAE1B/G,EAAAA,cAAA,OACII,UAAWC,GAAAA,CACP,yBACAgI,IAGJrI,EAAAA,cAAC2I,EAAAA,EAAe,CAACvI,UAAU,sDAInCJ,EAAAA,cAACyI,EAAAA,EAAAA,QAAe,CAACrI,UAAU,kHACtBwI,MAAMC,KAAKpD,GAAkB,EAAEqD,EAAIC,KAChC/I,EAAAA,cAACyI,EAAAA,EAAAA,OAAc,CACXrI,UAAU,2CACV4I,IAAKF,EACL3I,MAAO2I,GAEP9I,EAAAA,cAAA,cAAS+I,SAO5B3B,EAAU6B,WAAiC,IAApB1E,EAAS6B,OAC7BpG,EAAAA,cAAA,OAAKI,UAAU,eAAegI,GAE9BpI,EAAAA,cAAA,UACKuE,EAAS2D,KAAKgB,GAEPlJ,EAAAA,cAAA,MAAIgJ,IAAKE,EAAK1G,QAAQD,WAClBvC,EAAAA,cAAC2F,EAA2B,CACxBnD,QAAS0G,EAAK1G,QACdG,OAAQuG,EAAKC,cACb5C,SACI2C,EAAK1G,QAAQD,YACbsE,EAEJb,WAAYkD,EAAKlD,WACjB5B,QAASA,KACL0C,EACIoC,EAAK1G,QAAQD,WAEjB5C,EAAMyJ,gBAAgB,CAClB5G,QAAS0G,EAAK1G,QACdG,OAAQuG,EAAKC,sBAQpC/B,EAAUiC,cAAgBjC,EAAUlD,WACjClE,EAAAA,cAAA,MAAII,UAAU,gCACVJ,EAAAA,cAAA,UACII,UAAU,qEACVkG,KAAK,SACLlC,QAASA,IAAMgD,EAAUkC,iBAEzBtJ,EAAAA,cAACuJ,EAAAA,EAAQ,CAACnJ,UAAU,YAAY,cAIxC,Q,WCzLxB,EAhDIT,IAEA,MAAM6J,GAAiBC,EAAAA,EAAAA,MACjBC,GAAoBC,EAAAA,EAAAA,MAC1B/H,EAAAA,EAAAA,YAAU,KACF4H,GACAE,EAAkBE,MAAM,CACpBpH,QAASgH,MAGlB,CAACE,EAAmBF,IAEvB,MAAO3H,EAAegI,IAAoB/J,EAAAA,EAAAA,eAExC+H,GAEIiC,GAAoC,MJrB1CC,EAAAA,EAAAA,GAAU,eAAcnJ,EAAsB,OAAM,IIoCpD,OACIZ,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACgK,EAAAA,GAAM,CAACC,MAAM,cACdjK,EAAAA,cAAA,OAAKI,UAAU,wHACXJ,EAAAA,cAACkK,EAAAA,GAAW,CAACC,YAAY,IACzBnK,EAAAA,cAACoK,EAAuB,CACpBhB,gBAnBSvF,IACjBA,IAASiG,EAETO,SAASC,SAAWzH,EAAAA,GAAAA,OAAAA,QAAAA,eACA,CACZC,cAAee,EAAKrB,QAAQO,SAE/BC,WAEL6G,EAAiBhG,IAWTsD,iBAAkBxH,EAAMwH,mBAE3B2C,EACG9J,EAAAA,cAACiB,EAAoB,CAACY,cAAeA,IACrC,S,4FClCpB,EADmB,cAvBnB,UAA0B,MACxBoI,EAAK,QACLM,KACG5K,GACF6K,GACD,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DpF,MAAO,6BACPD,KAAM,OACNE,QAAS,YACToF,YAAa,IACbC,OAAQ,eACR,cAAe,OACfhG,IAAK4F,EACL,kBAAmBD,GAClB5K,GAAQsK,EAAqB,gBAAoB,QAAS,CAC3DnB,GAAIyB,GACHN,GAAS,KAAmB,gBAAoB,OAAQ,CACzDY,cAAe,QACfC,eAAgB,QAChBtF,EAAG,kC,+BCRP,MAAMuF,EAAsB1K,GAAAA,CACxB,MACA,OACA,iBACA,gBACA,sBACA,0BACA,sBAGS2K,EAAwDA,EACjEC,SAAAA,EACAC,YAAAA,EACAC,UAAAA,GAAY,EACZC,YAAAA,EACAC,eAAAA,KAGIrL,EAAAA,cAAA,OAAKI,UAAU,+BAET+K,EAEE,KADAnL,EAAAA,cAAA,QAAMI,UAAU,wBAAuB,KAE1C6K,EACGjL,EAAAA,cAAA,KAAGwD,KAAMyH,EAAU7G,QAASgH,GACxBpL,EAAAA,cAACsL,EAAAA,GAAO,CAAClL,UAAY,GAAE2K,kBACnB/K,EAAAA,cAACuL,EAAgB,QAGzB,KACJvL,EAAAA,cAAA,QAAMI,UAAU,aAAY,KAC3B8K,EACGlL,EAAAA,cAAA,KAAGwD,KAAM0H,EAAa9G,QAASiH,GAC3BrL,EAAAA,cAACsL,EAAAA,GAAO,CAAClL,UAAW2K,GAChB/K,EAAAA,cAACuL,EAAgB,QAGzB,MAKhB,S,uICxCO,MAAM1G,EASRA,EACD9B,OAAAA,EACAvB,iBAAAA,EACAsD,YAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAwG,qBAAAA,GAAuB,EACvBvG,iBAAAA,GAAmB,EACnBwG,mBAAAA,EAAqB,MAErB,MAAMC,GAAeC,EAAAA,EAAAA,MACdC,EAAeC,IAAmBC,EAAAA,EAAAA,kBAClCC,EAAYC,IAAWC,EAAAA,EAAAA,GAC1B,OACAR,EAAmBzI,YAEjBkJ,EAAOC,SAASJ,GAAc,MAAQ,EAEtCK,EAAejK,EAAAA,EAAAA,MAAAA,aAAAA,SACjB,CACIW,cAAeC,EACfmJ,KAAAA,EACAG,QAAS,CACL7K,iBAAAA,EACAsD,YAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAwG,qBAAAA,IAGR,CACIjE,UAAU,EACVtC,iBAAAA,IAIFoE,GAActD,EAAAA,EAAAA,UAAQ,IAEuB,OAA3CqG,EAAavI,MAAMyI,WAAWC,eACa1E,IAA3CuE,EAAavI,MAAMyI,WAAWC,UAEnC,CAACH,EAAavI,MAAMyI,WAAWC,WAE5BC,GAAkBzG,EAAAA,EAAAA,UAAQ,IAEuB,OAA/CqG,EAAavI,MAAMyI,WAAWG,mBACiB5E,IAA/CuE,EAAavI,MAAMyI,WAAWG,cAEnC,CAACL,EAAavI,MAAMyI,WAAWG,eAE5BA,GAAe1K,EAAAA,EAAAA,cAAY,KAC7B,MAAM2K,EAAkBN,EAAavI,MAAMyI,WAAWG,aAClDC,MAAAA,GACAb,GAAgB,KACZG,EAAQU,EAAgB1J,iBAGjC,CAACoJ,EAAavI,MAAMyI,WAAWG,aAAcT,IAE1CO,GAAWxK,EAAAA,EAAAA,cAAY,KACzB,MAAM4K,EAAcP,EAAavI,MAAMyI,WAAWC,SAC9CI,MAAAA,GACAd,GAAgB,KACZG,EAAQW,EAAY3J,iBAG7B,CAACoJ,EAAavI,MAAMyI,WAAWC,SAAUP,IAEtCY,GAAkB7G,EAAAA,EAAAA,UAAQ,KAC5B,GAAIyG,EAAiB,MAAO,IAAMC,MACnC,CAACD,EAAiBC,IACfI,GAAe9G,EAAAA,EAAAA,UAAQ,KACzB,GAAIyG,EAAiB,MAAO,MAC7B,CAACA,IACEM,GAAc/G,EAAAA,EAAAA,UAAQ,KACxB,GAAIsD,EAAa,MAAO,IAAMkD,MAC/B,CAAClD,EAAakD,IACXQ,GAAWhH,EAAAA,EAAAA,UAAQ,KACrB,GAAIsD,EAAa,MAAO,MACzB,CAACA,IAOJ,OAJAzH,EAAAA,EAAAA,YAAU,KACNoK,EAAQP,EAAmBzI,cAC5B,CAACD,IAGA/C,EAAAA,cAAA,OAAKI,UAAU,kCACVgM,EAAavI,MAAMmJ,MAAM9E,KAAI,CAAC+E,EAAMC,IAE7BlN,EAAAA,cAACmN,EAAAA,EAAe,CACZnE,IAAKiE,EAAKG,OACVC,eAAgBH,EAAQ,EACxBI,cAAc,GAEdtN,EAAAA,cAACuN,EAAAA,EAAW,CACRC,UAAWP,EACXQ,gBAAiB,GACjBtC,WAAW,EACXuC,cAAc,EACdhC,aAAcA,EACdiC,oBAAgB9F,OAKhC7H,EAAAA,cAAA,OAAKI,UAAU,eACXJ,EAAAA,cAACgL,EAAAA,EAAc,CACXG,WAAW,EACXC,YAAawB,EACb3B,SAAU4B,EACV3B,YAAa6B,EACb1B,eAAgByB,Q,qECtI7B,MAAMb,EAAgBA,CAACxH,EAAemJ,KACzC,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,MASxC,MAAO,CAPKF,EAAanF,IAAIjE,IAAUmJ,EACvBI,IACZF,GAAiBG,IACbA,EAAOC,IAAIzJ,EAAOuJ,GACXC,S,kJCT+W,IAAIzI,GAAE,mBAAE,MAAM,SAAS2I,IAAI,IAAIC,GAAE,gBAAE5I,GAAG,GAAO,OAAJ4I,EAAS,CAAC,IAAIxI,EAAE,IAAIyI,MAAM,2EAA2E,MAAMA,MAAMC,mBAAmBD,MAAMC,kBAAkB1I,EAAEuI,GAAGvI,EAAE,OAAOwI,EAAE,SAASG,IAAI,IAAIH,EAAExI,IAAG,cAAE,IAAI,MAAM,CAACwI,EAAEhI,OAAO,EAAEgI,EAAEI,KAAK,UAAK,GAAO,cAAE,IAAI,SAASC,GAAG,IAAIC,GAAE,QAAEC,IAAI/I,GAAEgJ,GAAG,IAAIA,EAAED,KAAI,IAAI/I,GAAEgJ,IAAI,IAAIC,EAAED,EAAEvI,QAAQyI,EAAED,EAAEE,QAAQJ,GAAG,OAAY,IAALG,GAAQD,EAAEG,OAAOF,EAAE,GAAGD,QAAMI,GAAE,cAAE,KAAI,CAAEC,SAASR,EAAES,KAAKV,EAAEU,KAAKC,KAAKX,EAAEW,KAAKzP,MAAM8O,EAAE9O,SAAQ,CAAC+O,EAAED,EAAEU,KAAKV,EAAEW,KAAKX,EAAE9O,QAAQ,OAAO,gBAAgB6F,EAAE6J,SAAS,CAAClP,MAAM8O,GAAGR,EAAEa,YAAW,CAAC1J,KAA6V,IAAI2J,GAAE,SAAhV,SAAWnB,EAAExI,GAAG,IAAI4J,GAAE,UAAK1G,GAAG2F,EAAE,oBAAoBe,IAAIC,QAAQf,GAAE,KAAMO,GAAGb,EAAEO,EAAER,IAAIS,GAAE,OAAEhJ,IAAG,QAAE,IAAI+I,EAAEO,SAAST,IAAG,CAACA,EAAEE,EAAEO,WAAW,IAAIL,EAAE,CAACjK,IAAIgK,KAAKD,EAAEhP,MAAMmJ,GAAG2F,GAAG,OAAOC,IAAI,YAAYG,WAAWA,EAAEa,eAAeb,EAAEzK,SAAS,YAAY6K,UAAUA,EAAE7K,UAAS,QAAE,CAACuL,SAASd,EAAEe,WAAWX,EAAEE,KAAKR,EAAEQ,MAAM,GAAGU,WAA9S,QAA2TT,KAAKT,EAAES,MAAM,aAAqBU,EAAErF,OAAOC,OAAO6E,EAAE,I,sECA9X,IAAIQ,GAAE,mBAAE,MAAMA,EAAE7K,YAAY,eAAe,IAAI8K,EAAE,WAA4/CC,GAAG,SAArgC,SAAYvB,EAAEG,GAAG,IAAIC,GAAE,UAAKhG,GAAGoH,EAAE,qBAAqBpB,IAAIlP,QAAQuQ,EAAEC,eAAezB,GAAE,EAAGzO,SAASmQ,EAAEjB,KAAKR,EAAEzO,MAAMmQ,EAAEC,KAAKC,KAAKhL,GAAGkJ,EAAE9I,GAAE,gBAAEmK,GAAG5B,GAAE,YAAE,MAAMsC,GAAE,OAAEtC,EAAEU,EAAM,OAAJjJ,EAAS,KAAKA,EAAE8K,YAAYtC,EAAEa,IAAG,OAAEkB,EAAEE,EAAE1B,GAAGgC,GAAE,QAAE,IAAO,MAAH1B,OAAQ,EAAOA,GAAGb,KAAIwC,GAAE,QAAEnC,IAAI,IAAG,OAAEA,EAAEoC,eAAe,OAAOpC,EAAEqC,iBAAiBrC,EAAEqC,iBAAiBH,OAAMI,GAAE,QAAEtC,IAAIA,EAAEzF,MAAM,WAASyF,EAAEqC,iBAAiBH,KAAKlC,EAAEzF,MAAM,YAAS,OAAEyF,EAAEoC,kBAAiBtB,GAAE,QAAEd,GAAGA,EAAEqC,mBAAkBE,GAAE,cAAE,KAAI,CAAEpR,QAAQwO,KAAI,CAACA,IAAI6C,EAAE,CAACnI,GAAGoH,EAAEtL,IAAI6L,EAAES,KAAK,SAAS5K,MAAK,OAAEoI,EAAEP,GAAGgD,SAAS,EAAE,eAAe/C,EAAE,kBAAqB,MAAHxI,OAAQ,EAAOA,EAAEwL,WAAW,mBAAsB,MAAHxL,OAAQ,EAAOA,EAAEyL,YAAYjN,QAAQwM,EAAEU,QAAQP,EAAEQ,WAAWhC,GAAGiC,GAAE,SAAI,OAAO,gBAAE,KAAK,IAAIC,EAAE,IAAIhD,EAAiB,OAAdgD,EAAEtD,EAAEuD,cAAe,EAAOD,EAAEE,QAAQ,QAAQlD,QAAO,IAAJE,GAAY6C,EAAEI,iBAAiBnD,EAAE,SAAQ,KAAKQ,EAAEN,QAAM,CAACR,EAAEc,IAAI,gBAAgB,WAAW,KAAQ,MAAHL,GAASR,GAAG,gBAAgB,IAAE,CAACyD,SAAS,eAAY,QAAE,CAACvO,GAAG,QAAQgD,KAAK,WAAWwL,QAAO,EAAGC,UAAS,EAAGxB,KAAKC,EAAE5Q,QAAQwO,EAAEgB,KAAKR,EAAEzO,MAAMmQ,OAAM,QAAE,CAACX,SAASsB,EAAErB,WAAWpK,EAAE2J,KAAK6B,EAAEnB,WAAx+B,SAAs/BT,KAAK,eAA8B4C,EAAGvH,OAAOC,OAAOuF,EAAG,CAACgC,MAA7hD,SAAWvD,GAAG,IAAIlJ,EAAE,IAAIqJ,EAAEC,IAAG,cAAE,OAAOoB,EAAEC,GAAG,KAAKxB,EAAE0B,IAAG,SAAIzB,GAAE,cAAE,KAAI,CAAEsD,OAAOrD,EAAE6B,UAAU5B,EAAEsC,WAAWlB,EAAEmB,YAAY1C,KAAI,CAACE,EAAEC,EAAEoB,EAAEvB,IAAS6B,EAAE9B,EAAE,OAAO,gBAAgB2B,EAAE,CAACjB,KAAK,sBAAsB,gBAAgBe,EAAE,CAACf,KAAK,eAAezP,MAAM,CAAC+P,QAAsB,OAAblK,EAAEoJ,EAAEsD,aAAc,EAAO1M,EAAEsD,GAAG1E,QAAQwB,GAAGiJ,IAA8B,UAA1BjJ,EAAEiL,cAAcsB,SAAmBvM,EAAEkL,iBAAiBjC,EAAEuD,QAAQvD,EAAEwD,MAAM,CAACC,eAAc,QAAS,gBAAgBvC,EAAEV,SAAS,CAAClP,MAAMyO,IAAG,QAAE,CAACe,SAAxS,GAAmTC,WAAWY,EAAEX,WAAWG,EAAEZ,KAAK,qBAAklCmD,MAAM,EAAEC,YAAY","sources":["webpack:///./preact/components/elements/switch-button.tsx","webpack:///./preact/hooks/use-tailwind-breakpoint.ts","webpack:///./preact/components/partials/cohost-reader/feed-pane.tsx","webpack:///./preact/components/icons/solid-egg.tsx","webpack:///./preact/components/partials/cohost-reader/project-list.tsx","webpack:///./preact/components/pages/cohost-reader.tsx","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","webpack:///./preact/components/partials/pagination-eggs.tsx","webpack:///./preact/components/partials/project-page/paginated-profile-post-feed.tsx","webpack:///./preact/hooks/use-query-state.tsx","webpack:///../node_modules/.pnpm/@headlessui+react@1.7.14_zpnidt7m3osuk7shl3s4oenomq/node_modules/@headlessui/react/dist/components/label/label.js","webpack:///../node_modules/.pnpm/@headlessui+react@1.7.14_zpnidt7m3osuk7shl3s4oenomq/node_modules/@headlessui/react/dist/components/switch/switch.js"],"sourcesContent":["import { Switch } from \"@headlessui/react\";\nimport { CheckIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\nimport classNames from \"classnames\";\nimport React, { FunctionComponent, useState } from \"react\";\nimport { ButtonSize, smallClasses, regularClasses } from \"./common-styling\";\n\ntype Props = {\n    label: string;\n    buttonSize: ButtonSize;\n    onChange: (value: boolean) => void;\n    initial?: boolean;\n};\n\nexport const SwitchButton: FunctionComponent<Props> = (props) => {\n    const [checked, setChecked] = useState(props.initial ?? false);\n\n    const offClasses = \"bg-cherry-800 hover:bg-cherry-600 active:bg-cherry-700\";\n    const onClasses = \"bg-cherry-500 hover:bg-cherry-600 active:bg-cherry-700\";\n\n    const handleOnChange = (value: boolean) => {\n        setChecked(value);\n        props.onChange(value);\n    };\n\n    return (\n        <Switch\n            checked={checked}\n            onChange={handleOnChange}\n            className={classNames(\n                \"flex flex-row items-center rounded-lg px-2 py-2 text-notWhite\",\n                {\n                    [smallClasses]: props.buttonSize === \"small\",\n                    [regularClasses]: props.buttonSize === \"regular\",\n                    [onClasses]: checked,\n                    [offClasses]: !checked,\n                }\n            )}\n        >\n            {props.label}\n            &nbsp;\n            {checked ? (\n                <CheckIcon className=\"h-4\" />\n            ) : (\n                <XMarkIcon className=\"h-4\" />\n            )}\n        </Switch>\n    );\n};\n","import { useMedia } from \"react-use\";\n\nexport type BreakpointName = \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\";\n\nconst breakpoints: { [breakpoint in BreakpointName]: string } = {\n    sm: \"640px\",\n    md: \"768px\",\n    lg: \"1024px\",\n    xl: \"1280px\",\n    \"2xl\": \"1536px\",\n};\n\nexport const useTailwindBreakpoint = (breakpoint: BreakpointName) =>\n    useMedia(`(min-width: ${breakpoints[breakpoint]})`, false);\n","import { trpc } from \"@/client/lib/trpc\";\nimport sitemap from \"@/shared/sitemap\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { Menu } from \"@headlessui/react\";\nimport { ArrowRightOnRectangleIcon } from \"@heroicons/react/24/outline\";\nimport React, {\n    Fragment,\n    FunctionComponent,\n    Suspense,\n    useCallback,\n    useEffect,\n    useRef,\n    useState,\n} from \"react\";\nimport { BasicButton } from \"../../elements/basic-button\";\nimport { MeatballMenuItem } from \"../../elements/meatball-menu-item\";\nimport { SwitchButton } from \"../../elements/switch-button\";\nimport { PushpinIcon } from \"../../icons/pushpin\";\nimport { Loading } from \"../../loading\";\nimport { type ReaderProjectData } from \"../../pages/cohost-reader\";\nimport { PaginatedProfilePostFeed } from \"../project-page/paginated-profile-post-feed\";\n\ntype CohostReaderFeedPaneProps = {\n    activeProject: ReaderProjectData | undefined;\n};\n\nconst CohostReaderFeedPane: FunctionComponent<CohostReaderFeedPaneProps> = (\n    props\n) => {\n    const [showShares, setShowShares] = useState(true);\n    const [showReplies, setShowReplies] = useState(true);\n    const [showAsks, setShowAsks] = useState(true);\n    const [pinnedPostsAtTop, setPinnedPostsAtTop] = useState(false);\n\n    // scroll back to the top of the feed pane when the active project changes.\n    //\n    // just using a plain useEffect() triggered on project change, and\n    // a ref to the scrolling pane, doesn't work here because the useEffect()\n    // resolves while the suspense fallback is up and the ref is null.\n    //\n    // use a solution patterned after https://stackoverflow.com/a/60476525 to\n    // \"arm\" a scroll, and then fire it once the ref becomes non-null again\n    const [waitingToScroll, setWaitingToScroll] = useState(false);\n\n    useEffect(() => {\n        setWaitingToScroll(true);\n    }, [props.activeProject]);\n\n    const scrollToTopIfPending = useCallback(\n        (node: HTMLElement | null) => {\n            if (waitingToScroll && node) {\n                node.scrollTo(0, 0);\n                setWaitingToScroll(false);\n            }\n        },\n        [waitingToScroll]\n    );\n\n    const pinProject = trpc.projects.followedFeed.pinProject.useMutation();\n    const unpinProject = trpc.projects.followedFeed.unpinProject.useMutation();\n    const utils = trpc.useContext();\n\n    const isPinned = trpc.projects.followedFeed.isPinned.useQuery(\n        {\n            projectId:\n                props.activeProject?.project.projectId ?? (-99999 as ProjectId),\n        },\n        {\n            enabled: !!props.activeProject,\n            initialData: props.activeProject?.pinned,\n        }\n    );\n\n    const onPin = async () => {\n        if (!props.activeProject) return;\n\n        await pinProject.mutateAsync({\n            projectId: props.activeProject.project.projectId,\n        });\n        await utils.projects.followedFeed.query.invalidate();\n        await utils.projects.followedFeed.isPinned.invalidate({\n            projectId: props.activeProject.project.projectId,\n        });\n    };\n\n    const onUnpin = async () => {\n        if (!props.activeProject) return;\n\n        await unpinProject.mutateAsync({\n            projectId: props.activeProject.project.projectId,\n        });\n        await utils.projects.followedFeed.query.invalidate();\n        await utils.projects.followedFeed.isPinned.invalidate({\n            projectId: props.activeProject.project.projectId,\n        });\n    };\n\n    const profileUrl = props.activeProject\n        ? sitemap.public.project\n              .mainAppProfile({\n                  projectHandle: props.activeProject.project.handle,\n              })\n              .toString()\n        : \"\";\n\n    return (\n        <div className=\"flex flex-grow flex-col [flex-basis:40%]\">\n            <Suspense fallback={<Loading className=\"mx-auto my-auto\" />}>\n                {props.activeProject ? (\n                    <>\n                        <div className=\"flex flex-row justify-end gap-3 p-4\">\n                            <SwitchButton\n                                buttonSize=\"small\"\n                                label=\"pins at top\"\n                                onChange={(value) => setPinnedPostsAtTop(value)}\n                                initial={pinnedPostsAtTop}\n                            />\n\n                            <SwitchButton\n                                buttonSize=\"small\"\n                                label=\"show shares\"\n                                onChange={(value) => setShowShares(value)}\n                                initial={showShares}\n                            />\n\n                            <SwitchButton\n                                buttonSize=\"small\"\n                                label=\"show replies\"\n                                onChange={(value) => setShowReplies(value)}\n                                initial={showReplies}\n                            />\n\n                            <SwitchButton\n                                buttonSize=\"small\"\n                                label=\"show asks\"\n                                onChange={(value) => setShowAsks(value)}\n                                initial={showAsks}\n                            />\n\n                            {props.activeProject.project.askSettings.enabled ? (\n                                <BasicButton\n                                    as=\"a\"\n                                    buttonColor=\"cherry\"\n                                    buttonSize=\"small\"\n                                    href={sitemap.public.project\n                                        .ask({\n                                            projectHandle:\n                                                props.activeProject.project\n                                                    .handle,\n                                        })\n                                        .toString()}\n                                >\n                                    ask\n                                </BasicButton>\n                            ) : null}\n\n                            <Menu as=\"div\" className=\"relative\">\n                                <Menu.Button as={Fragment}>\n                                    {({ open }) => {\n                                        const extraClasses = open\n                                            ? \"bg-cherry-700\"\n                                            : \"\";\n\n                                        return (\n                                            <BasicButton\n                                                buttonColor=\"cherry\"\n                                                buttonSize=\"small\"\n                                                extraClasses={extraClasses}\n                                            >\n                                                manage\n                                            </BasicButton>\n                                        );\n                                    }}\n                                </Menu.Button>\n                                <Menu.Items className=\"cohost-shadow-dark absolute right-0 top-12 z-30 flex min-w-max flex-col gap-3 rounded-lg bg-notWhite p-3 text-notBlack focus:!outline-none\">\n                                    {isPinned.data ? (\n                                        <Menu.Item>\n                                            <MeatballMenuItem\n                                                ItemIcon={PushpinIcon}\n                                                disabled={isPinned.isFetching}\n                                                text=\"unpin from following view\"\n                                                onClick={onUnpin}\n                                            />\n                                        </Menu.Item>\n                                    ) : (\n                                        <Menu.Item>\n                                            <MeatballMenuItem\n                                                ItemIcon={PushpinIcon}\n                                                disabled={isPinned.isFetching}\n                                                text=\"pin to following view\"\n                                                onClick={onPin}\n                                            />\n                                        </Menu.Item>\n                                    )}\n                                    <Menu.Item>\n                                        <MeatballMenuItem\n                                            as=\"a\"\n                                            ItemIcon={ArrowRightOnRectangleIcon}\n                                            text=\"go to profile\"\n                                            href={profileUrl}\n                                        />\n                                    </Menu.Item>\n                                </Menu.Items>\n                            </Menu>\n                        </div>\n                        <div\n                            className=\"flex flex-col items-center overflow-y-auto\"\n                            ref={scrollToTopIfPending}\n                        >\n                            <PaginatedProfilePostFeed\n                                handle={props.activeProject.project.handle}\n                                pinnedPostsAtTop={pinnedPostsAtTop}\n                                hideReplies={!showReplies}\n                                hideShares={!showShares}\n                                hideAsks={!showAsks}\n                                keepPreviousData={false}\n                            />\n                        </div>\n                    </>\n                ) : null}\n            </Suspense>\n        </div>\n    );\n};\n\nCohostReaderFeedPane.displayName = \"CohostReaderFeedPane\";\n\nexport default CohostReaderFeedPane;\n","import React, { FunctionComponent } from \"react\";\n\nexport const SolidEgg: FunctionComponent<React.SVGAttributes<SVGElement>> = (\n    props\n) => (\n    <svg\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 50 37\"\n        {...props}\n    >\n        <path\n            d=\"M29.9375 34.712c-4.5219 1.3518-8.8029 1.9644-12.843 1.8377-4.0401-.1267-7.50633-1.0808-10.39884-2.8624-2.89253-1.7814-4.8862-4.5046-5.981084-8.1695-1.101144-3.6858-.929664-7.062.514464-10.1285 1.44415-3.0666 3.82337-5.75117 7.13767-8.05372C11.681 5.03302 15.5992 3.2058 20.1211 1.85394 24.6221.508325 28.8858-.104798 32.9123.014595 36.9387.133964 40.4019 1.07761 43.3017 2.8455c2.8999 1.76792 4.8972 4.48429 5.9921 8.1491 1.0949 3.6649.9166 7.0374-.5349 10.1176-1.4514 3.0802-3.826 5.7804-7.1235 8.1008-3.2976 2.3204-7.1969 4.1534-11.6979 5.499Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n","import { renderPostSummary } from \"@/client/lib/markdown/post-rendering\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { FriendlyTimestamp } from \"@/client/preact/components/friendly-timestamp\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport {\n    FollowedProjectFeedSortOrder,\n    WirePostViewModel,\n} from \"@/shared/types/wire-models\";\nimport { Listbox } from \"@headlessui/react\";\nimport { PlusIcon } from \"@heroicons/react/24/outline\";\nimport { ChevronDownIcon } from \"@heroicons/react/24/solid\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\nimport { default as React, FunctionComponent, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { BasicButton } from \"../../elements/basic-button\";\nimport { PushpinIcon } from \"../../icons/pushpin\";\nimport { SolidEgg } from \"../../icons/solid-egg\";\nimport { type ReaderProjectData } from \"../../pages/cohost-reader\";\nimport { ProjectAvatar } from \"../project-avatar\";\n\ntype CohostReaderProjectListProps = {\n    activateProject: (project: ReaderProjectData) => void;\n    initialTimestamp: number;\n};\n\nconst sortOrderOptions = new Map<FollowedProjectFeedSortOrder, string>([\n    [\"recently-posted\", \"sort by last post\"],\n    [\"followed-asc\", \"sort by follow date (old\\u2013new)\"],\n    [\"followed-desc\", \"sort by follow date (new\\u2013old)\"],\n    [\"alpha-asc\", \"sort by handle (A\\u2013Z)\"],\n    [\"alpha-desc\", \"sort by handle (Z\\u2013A)\"],\n]);\n\nconst CohostReaderProjectListItem: FunctionComponent<{\n    project: WireProjectModel;\n    pinned: boolean;\n    selected: boolean;\n    latestPost: WirePostViewModel | null;\n    onClick: () => void;\n}> = (props) => {\n    const { t } = useTranslation();\n    const summary = useMemo(() => {\n        if (!props.latestPost) return \"\";\n\n        const rawSummary =\n            renderPostSummary(props.latestPost, {\n                myPost: false,\n            }) || t(\"client:notifications.empty-post-summary\", \"[no text]\");\n\n        return rawSummary.length > 60 ? rawSummary.slice(0, 60) : rawSummary;\n    }, [props.latestPost, t]);\n\n    return (\n        <button\n            type=\"button\"\n            className={classNames(\n                {\n                    \"bg-longan-300 dark:bg-cherry-700\": props.selected,\n                },\n                \"flex w-full flex-row items-center gap-1 py-3 pl-3 pr-1 text-left\"\n            )}\n            onClick={props.onClick}\n        >\n            <ProjectAvatar\n                className=\"cohost-shadow-light dark:cohost-shadow-dark mx-[0.75rem] block h-[3.75rem] w-[3.75rem]\"\n                project={props.project}\n                noLink={true}\n            />\n            <div className=\"items-left flex flex-1 flex-col overflow-hidden whitespace-nowrap text-notBlack dark:text-notWhite\">\n                <div className=\"overflow-hidden overflow-ellipsis font-bold\">\n                    {props.project.displayName}\n                </div>\n                <div className=\"overflow-hidden overflow-ellipsis\">\n                    @{props.project.handle}\n                </div>\n                {props.latestPost ? (\n                    <div className=\"overflow-hidden overflow-ellipsis\">\n                        {props.latestPost.publishedAt ? (\n                            <span className=\"font-bold text-cherry-600 dark:text-mango-400\">\n                                <FriendlyTimestamp\n                                    dateISO={props.latestPost.publishedAt}\n                                    className=\"font-bold text-cherry-600 dark:text-mango-400\"\n                                />\n                                :&nbsp;\n                            </span>\n                        ) : null}\n                        {summary}\n                    </div>\n                ) : null}\n            </div>\n            {props.pinned ? (\n                <PushpinIcon className=\"h-6 w-6 self-start\" />\n            ) : null}\n        </button>\n    );\n};\n\nconst CohostReaderProjectList: FunctionComponent<\n    CohostReaderProjectListProps\n> = (props) => {\n    const { t } = useTranslation();\n    const [selectedProjectId, setSelectedProjectId] =\n        useState<ProjectId | null>(null);\n    const [sortOrder, setSortOrder] =\n        useState<FollowedProjectFeedSortOrder>(\"recently-posted\");\n    const [asOfTimestamp, setAsOfTimestamp] = useState<number>(\n        props.initialTimestamp\n    );\n    const feedQuery = trpc.projects.followedFeed.query.useInfiniteQuery(\n        {\n            sortOrder,\n            limit: 20,\n            beforeTimestamp: asOfTimestamp,\n        },\n        {\n            suspense: true,\n            staleTime: Infinity,\n            keepPreviousData: true,\n            getNextPageParam: (lastPage) => lastPage.nextCursor ?? undefined,\n        }\n    );\n\n    // only need to check for live updates if the feed is in recently posted\n    // mode\n    const feedHasUpdated = trpc.projects.followedFeed.hasUpdated.useQuery(\n        {\n            timestamp: asOfTimestamp,\n        },\n        { enabled: sortOrder === \"recently-posted\" }\n    );\n\n    const refreshList = () => {\n        // changing this parameter automatically invalidates the feedQuery +\n        // feedHasUpdated queries, so no need to do that\n        setAsOfTimestamp(Date.now());\n    };\n\n    const projects = feedQuery.data\n        ? _.concat(...feedQuery.data.pages.map((group) => group.projects))\n        : [];\n\n    const emptyLabel = t(\n        \"client:following.empty\",\n        \"You're not currently following any pages.\"\n    );\n\n    const dropDownClasses =\n        \"bg-longan-300 dark:bg-cherry-700 group-hover:bg-longan-400 ui-open:bg-longan-500 dark:group-hover:bg-cherry-600 dark:ui-open:bg-cherry-600 text-notBlack dark:text-notWhite\";\n\n    return (\n        <div className=\"relative flex w-full flex-grow flex-col overflow-y-auto bg-notWhite [flex-basis:20%] [scrollbar-gutter:stable] dark:bg-notBlack\">\n            <div className=\"flex flex-row items-center p-4\">\n                {/* only show the refresh button if the user is in recently posted mode */}\n                {sortOrder === \"recently-posted\" ? (\n                    <BasicButton\n                        buttonSize=\"regular\"\n                        buttonColor=\"theme-sensitive-1\"\n                        disabled={feedQuery.isFetching}\n                        onClick={refreshList}\n                        extraClasses=\"relative\"\n                    >\n                        refresh\n                        {feedHasUpdated.data ? (\n                            <SolidEgg className=\"absolute -right-1 -top-1 h-4 w-4 text-cherry dark:text-mango\" />\n                        ) : null}\n                    </BasicButton>\n                ) : null}\n\n                <div className=\"flex-1\">&nbsp;</div>\n\n                <Listbox\n                    value={sortOrder}\n                    onChange={(value) =>\n                        setSortOrder(value as FollowedProjectFeedSortOrder)\n                    }\n                >\n                    <Listbox.Button className=\"group flex flex-row items-center gap-1 self-end\">\n                        <div\n                            className={classNames(\n                                \"flex h-10 flex-row items-center gap-3 rounded-l-lg px-2\",\n                                dropDownClasses\n                            )}\n                        >\n                            {sortOrderOptions.get(sortOrder)}\n                        </div>\n                        <div\n                            className={classNames(\n                                \"block rounded-r-lg p-2\",\n                                dropDownClasses\n                            )}\n                        >\n                            <ChevronDownIcon className=\"h-6 w-6 transition-transform ui-open:rotate-180\" />\n                        </div>\n                    </Listbox.Button>\n\n                    <Listbox.Options className=\"cohost-shadow-light dark:cohost-shadow-dark absolute right-4 top-16 w-fit rounded-lg bg-notWhite text-notBlack\">\n                        {Array.from(sortOrderOptions, ([id, uiText]) => (\n                            <Listbox.Option\n                                className=\"rounded-lg px-2 py-1 hover:bg-longan-300\"\n                                key={id}\n                                value={id}\n                            >\n                                <button>{uiText}</button>\n                            </Listbox.Option>\n                        ))}\n                    </Listbox.Options>\n                </Listbox>\n            </div>\n\n            {feedQuery.isSuccess && projects.length === 0 ? (\n                <div className=\"text-center\">{emptyLabel}</div>\n            ) : (\n                <ul>\n                    {projects.map((item) => {\n                        return (\n                            <li key={item.project.projectId}>\n                                <CohostReaderProjectListItem\n                                    project={item.project}\n                                    pinned={item.projectPinned}\n                                    selected={\n                                        item.project.projectId ===\n                                        selectedProjectId\n                                    }\n                                    latestPost={item.latestPost}\n                                    onClick={() => {\n                                        setSelectedProjectId(\n                                            item.project.projectId\n                                        );\n                                        props.activateProject({\n                                            project: item.project,\n                                            pinned: item.projectPinned,\n                                        });\n                                    }}\n                                />\n                            </li>\n                        );\n                    })}\n\n                    {feedQuery.hasNextPage && !feedQuery.isFetching ? (\n                        <li className=\"flex flex-row justify-center\">\n                            <button\n                                className=\"flex flex-row gap-3 p-3 font-bold text-notBlack dark:text-notWhite\"\n                                type=\"button\"\n                                onClick={() => feedQuery.fetchNextPage()}\n                            >\n                                <PlusIcon className=\"h-6 w-6\" />\n                                load more\n                            </button>\n                        </li>\n                    ) : null}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default CohostReaderProjectList;\n","import sitemap from \"@/shared/sitemap\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useTranslation } from \"react-i18next\";\nimport { useCurrentProject } from \"../../hooks/data-loaders\";\nimport { useTailwindBreakpoint } from \"../../hooks/use-tailwind-breakpoint\";\nimport { useModalPostComposer } from \"../modal-post-composer-context\";\nimport CohostReaderFeedPane from \"../partials/cohost-reader/feed-pane\";\nimport CohostReaderProjectList from \"../partials/cohost-reader/project-list\";\nimport { SidebarMenu } from \"../sidebar-menu\";\n\nexport type ReaderProjectData = {\n    project: WireProjectModel;\n    pinned: boolean;\n};\n\nconst CohostReaderPage: FunctionComponent<{ initialTimestamp: number }> = (\n    props\n) => {\n    const currentProject = useCurrentProject();\n    const modalPostComposer = useModalPostComposer();\n    useEffect(() => {\n        if (currentProject) {\n            modalPostComposer.setup({\n                project: currentProject,\n            });\n        }\n    }, [modalPostComposer, currentProject]);\n\n    const [activeProject, setActiveProject] = useState<\n        ReaderProjectData | undefined\n    >(undefined);\n\n    const isTwoColumn = useTailwindBreakpoint(\"lg\");\n\n    const activateProject = (data: ReaderProjectData | undefined) => {\n        if (data && !isTwoColumn) {\n            // can't see the feed pane!  navigate \"the hard way\"\n            document.location = sitemap.public.project\n                .mainAppProfile({\n                    projectHandle: data.project.handle,\n                })\n                .toString();\n        } else {\n            setActiveProject(data);\n        }\n    };\n\n    return (\n        <>\n            <Helmet title=\"following\" />\n            <div className=\"styled-scrollbars-light dark:styled-scrollbars-dark container mx-auto flex w-full flex-row [height:calc(100vh-4rem)]\">\n                <SidebarMenu narrowMode={true} />\n                <CohostReaderProjectList\n                    activateProject={activateProject}\n                    initialTimestamp={props.initialTimestamp}\n                />\n                {isTwoColumn ? (\n                    <CohostReaderFeedPane activeProject={activeProject} />\n                ) : null}\n            </div>\n        </>\n    );\n};\n\nexport default CohostReaderPage;\n","import * as React from \"react\";\n\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 4.5l7.5 7.5-7.5 7.5\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import { ChevronRightIcon } from \"@heroicons/react/24/outline\";\nimport classNames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { IconEgg } from \"../icons/text-egg\";\n\nexport interface PaginationEggProps {\n    backLink: string | undefined;\n    forwardLink: string | undefined;\n    condensed?: boolean | undefined;\n    backOnClick?: React.MouseEventHandler | undefined;\n    forwardOnClick?: React.MouseEventHandler | undefined;\n}\n\nconst paginationEggStyles = classNames(\n    \"h-8\",\n    \"pr-3\",\n    \"fill-secondary\",\n    \"text-notWhite\",\n    \"cohost-shadow-light\",\n    \"dark:cohost-shadow-dark\",\n    \"dark:text-notBlack\"\n);\n\nexport const PaginationEggs: FunctionComponent<PaginationEggProps> = ({\n    backLink,\n    forwardLink,\n    condensed = false,\n    backOnClick,\n    forwardOnClick,\n}) => {\n    return (\n        <div className=\"mb-12 flex flex-row gap-x-6\">\n            {/* to take up the space occupied by the avatar column */}\n            {!condensed ? (\n                <span className=\"hidden w-16 lg:block\">&nbsp;</span>\n            ) : null}\n            {backLink ? (\n                <a href={backLink} onClick={backOnClick}>\n                    <IconEgg className={`${paginationEggStyles} scale-x-[-1]`}>\n                        <ChevronRightIcon />\n                    </IconEgg>\n                </a>\n            ) : null}\n            <span className=\"flex-grow\">&nbsp;</span>\n            {forwardLink ? (\n                <a href={forwardLink} onClick={forwardOnClick}>\n                    <IconEgg className={paginationEggStyles}>\n                        <ChevronRightIcon />\n                    </IconEgg>\n                </a>\n            ) : null}\n        </div>\n    );\n};\n\nexport default PaginationEggs;\n","import { trpc } from \"@/client/lib/trpc\";\nimport { useDisplayPrefs } from \"@/client/preact/hooks/use-display-prefs\";\nimport { useQueryState } from \"@/client/preact/hooks/use-query-state\";\nimport { ProjectHandle } from \"@/shared/types/ids\";\nimport React, {\n    FunctionComponent,\n    useCallback,\n    useEffect,\n    useMemo,\n    useTransition,\n} from \"react\";\nimport RenderIfVisible from \"react-render-if-visible\";\nimport { PostPreview } from \"../../posts/post-preview\";\nimport PaginationEggs from \"../pagination-eggs\";\n\nexport const PaginatedProfilePostFeed: FunctionComponent<{\n    handle: ProjectHandle;\n    viewingOnProjectPage?: boolean;\n    keepPreviousData?: boolean;\n    pinnedPostsAtTop: boolean;\n    hideReplies: boolean;\n    hideShares: boolean;\n    hideAsks: boolean;\n    startingPageNumber?: number;\n}> = ({\n    handle,\n    pinnedPostsAtTop,\n    hideReplies,\n    hideShares,\n    hideAsks,\n    viewingOnProjectPage = false,\n    keepPreviousData = true,\n    startingPageNumber = 0,\n}) => {\n    const displayPrefs = useDisplayPrefs();\n    const [_inTransition, startTransition] = useTransition();\n    const [pageString, setPage] = useQueryState(\n        \"page\",\n        startingPageNumber.toString()\n    );\n    const page = parseInt(pageString ?? \"0\") || 0;\n\n    const fetchedPosts = trpc.posts.profilePosts.useQuery(\n        {\n            projectHandle: handle,\n            page,\n            options: {\n                pinnedPostsAtTop,\n                hideReplies,\n                hideShares,\n                hideAsks,\n                viewingOnProjectPage,\n            },\n        },\n        {\n            suspense: true,\n            keepPreviousData,\n        }\n    );\n\n    const hasNextPage = useMemo(() => {\n        return (\n            fetchedPosts.data?.pagination.nextPage !== null &&\n            fetchedPosts.data?.pagination.nextPage !== undefined\n        );\n    }, [fetchedPosts.data?.pagination.nextPage]);\n\n    const hasPreviousPage = useMemo(() => {\n        return (\n            fetchedPosts.data?.pagination.previousPage !== null &&\n            fetchedPosts.data?.pagination.previousPage !== undefined\n        );\n    }, [fetchedPosts.data?.pagination.previousPage]);\n\n    const previousPage = useCallback(() => {\n        const previousPageNum = fetchedPosts.data?.pagination.previousPage;\n        if (previousPageNum !== null && previousPageNum !== undefined) {\n            startTransition(() => {\n                setPage(previousPageNum.toString());\n            });\n        }\n    }, [fetchedPosts.data?.pagination.previousPage, setPage]);\n\n    const nextPage = useCallback(() => {\n        const nextPageNum = fetchedPosts.data?.pagination.nextPage;\n        if (nextPageNum !== null && nextPageNum !== undefined) {\n            startTransition(() => {\n                setPage(nextPageNum.toString());\n            });\n        }\n    }, [fetchedPosts.data?.pagination.nextPage, setPage]);\n\n    const onClickPrevious = useMemo(() => {\n        if (hasPreviousPage) return () => previousPage();\n    }, [hasPreviousPage, previousPage]);\n    const previousHref = useMemo(() => {\n        if (hasPreviousPage) return \"#\";\n    }, [hasPreviousPage]);\n    const onClickNext = useMemo(() => {\n        if (hasNextPage) return () => nextPage();\n    }, [hasNextPage, nextPage]);\n    const nextHref = useMemo(() => {\n        if (hasNextPage) return \"#\";\n    }, [hasNextPage]);\n\n    // for cohost reader: reset to the top of pagination if we switch projects\n    useEffect(() => {\n        setPage(startingPageNumber.toString());\n    }, [handle]);\n\n    return (\n        <div className=\"mt-4 flex w-fit flex-col gap-4\">\n            {fetchedPosts.data?.posts.map((post, index) => {\n                return (\n                    <RenderIfVisible\n                        key={post.postId}\n                        initialVisible={index < 4}\n                        stayRendered={true}\n                    >\n                        <PostPreview\n                            viewModel={post}\n                            highlightedTags={[]}\n                            condensed={true}\n                            skipCollapse={false}\n                            displayPrefs={displayPrefs}\n                            commentThreads={undefined}\n                        />\n                    </RenderIfVisible>\n                );\n            })}\n            <div className=\"max-w-prose\">\n                <PaginationEggs\n                    condensed={true}\n                    backOnClick={onClickPrevious}\n                    backLink={previousHref}\n                    forwardLink={nextHref}\n                    forwardOnClick={onClickNext}\n                />\n            </div>\n        </div>\n    );\n};\n","import { useSearchParams } from \"react-router-dom\";\n\nexport const useQueryState = (query: string, defaultValue?: string) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const val = searchParams.get(query) ?? defaultValue;\n    const setVal = (newVal: string) => {\n        setSearchParams((params) => {\n            params.set(query, newVal);\n            return params;\n        });\n    };\n    return [val, setVal] as const;\n};\n","import c,{createContext as m,useContext as L,useMemo as f,useState as b}from\"react\";import{useId as T}from'../../hooks/use-id.js';import{forwardRefWithAs as E,render as g}from'../../utils/render.js';import{useIsoMorphicEffect as x}from'../../hooks/use-iso-morphic-effect.js';import{useSyncRefs as P}from'../../hooks/use-sync-refs.js';import{useEvent as y}from'../../hooks/use-event.js';let d=m(null);function u(){let o=L(d);if(o===null){let t=new Error(\"You used a <Label /> component, but it is not inside a relevant parent.\");throw Error.captureStackTrace&&Error.captureStackTrace(t,u),t}return o}function H(){let[o,t]=b([]);return[o.length>0?o.join(\" \"):void 0,f(()=>function(e){let s=y(r=>(t(l=>[...l,r]),()=>t(l=>{let n=l.slice(),p=n.indexOf(r);return p!==-1&&n.splice(p,1),n}))),a=f(()=>({register:s,slot:e.slot,name:e.name,props:e.props}),[s,e.slot,e.name,e.props]);return c.createElement(d.Provider,{value:a},e.children)},[t])]}let A=\"label\";function h(o,t){let i=T(),{id:e=`headlessui-label-${i}`,passive:s=!1,...a}=o,r=u(),l=P(t);x(()=>r.register(e),[e,r.register]);let n={ref:l,...r.props,id:e};return s&&(\"onClick\"in n&&(delete n.htmlFor,delete n.onClick),\"onClick\"in a&&delete a.onClick),g({ourProps:n,theirProps:a,slot:r.slot||{},defaultTag:A,name:r.name||\"Label\"})}let v=E(h),M=Object.assign(v,{});export{M as Label,H as useLabels};\n","import i,{Fragment as x,createContext as A,useContext as H,useMemo as E,useRef as F,useState as M,useEffect as _}from\"react\";import{forwardRefWithAs as U,render as P,compact as K}from'../../utils/render.js';import{useId as B}from'../../hooks/use-id.js';import{Keys as g}from'../keyboard.js';import{isDisabledReactIssue7711 as I}from'../../utils/bugs.js';import{Label as O,useLabels as W}from'../label/label.js';import{Description as N,useDescriptions as J}from'../description/description.js';import{useResolveButtonType as X}from'../../hooks/use-resolve-button-type.js';import{useSyncRefs as j}from'../../hooks/use-sync-refs.js';import{Hidden as $,Features as q}from'../../internal/hidden.js';import{attemptSubmit as z}from'../../utils/form.js';import{useEvent as m}from'../../hooks/use-event.js';import{useControllable as Q}from'../../hooks/use-controllable.js';import{useDisposables as V}from'../../hooks/use-disposables.js';let y=A(null);y.displayName=\"GroupContext\";let Y=x;function Z(s){var d;let[n,p]=M(null),[c,f]=W(),[r,h]=J(),l=E(()=>({switch:n,setSwitch:p,labelledby:c,describedby:r}),[n,p,c,r]),T={},b=s;return i.createElement(h,{name:\"Switch.Description\"},i.createElement(f,{name:\"Switch.Label\",props:{htmlFor:(d=l.switch)==null?void 0:d.id,onClick(t){n&&(t.currentTarget.tagName===\"LABEL\"&&t.preventDefault(),n.click(),n.focus({preventScroll:!0}))}}},i.createElement(y.Provider,{value:l},P({ourProps:T,theirProps:b,defaultTag:Y,name:\"Switch.Group\"}))))}let ee=\"button\";function te(s,n){let p=B(),{id:c=`headlessui-switch-${p}`,checked:f,defaultChecked:r=!1,onChange:h,name:l,value:T,form:b,...d}=s,t=H(y),u=F(null),D=j(u,n,t===null?null:t.setSwitch),[o,a]=Q(f,h,r),S=m(()=>a==null?void 0:a(!o)),C=m(e=>{if(I(e.currentTarget))return e.preventDefault();e.preventDefault(),S()}),L=m(e=>{e.key===g.Space?(e.preventDefault(),S()):e.key===g.Enter&&z(e.currentTarget)}),v=m(e=>e.preventDefault()),G=E(()=>({checked:o}),[o]),R={id:c,ref:D,role:\"switch\",type:X(s,u),tabIndex:0,\"aria-checked\":o,\"aria-labelledby\":t==null?void 0:t.labelledby,\"aria-describedby\":t==null?void 0:t.describedby,onClick:C,onKeyUp:L,onKeyPress:v},k=V();return _(()=>{var w;let e=(w=u.current)==null?void 0:w.closest(\"form\");e&&r!==void 0&&k.addEventListener(e,\"reset\",()=>{a(r)})},[u,a]),i.createElement(i.Fragment,null,l!=null&&o&&i.createElement($,{features:q.Hidden,...K({as:\"input\",type:\"checkbox\",hidden:!0,readOnly:!0,form:b,checked:o,name:l,value:T})}),P({ourProps:R,theirProps:d,slot:G,defaultTag:ee,name:\"Switch\"}))}let ne=U(te),re=Z,Ge=Object.assign(ne,{Group:re,Label:O,Description:N});export{Ge as Switch};\n"],"names":["SwitchButton","props","checked","setChecked","useState","initial","React","Switch","onChange","value","className","classNames","smallClasses","buttonSize","regularClasses","label","CheckIcon","XMarkIcon","breakpoints","sm","md","lg","xl","CohostReaderFeedPane","showShares","setShowShares","showReplies","setShowReplies","showAsks","setShowAsks","pinnedPostsAtTop","setPinnedPostsAtTop","waitingToScroll","setWaitingToScroll","useEffect","activeProject","scrollToTopIfPending","useCallback","node","scrollTo","pinProject","trpc","unpinProject","utils","isPinned","projectId","project","enabled","initialData","pinned","profileUrl","sitemap","projectHandle","handle","toString","Suspense","fallback","Loading","askSettings","BasicButton","as","buttonColor","href","Menu","Fragment","open","extraClasses","data","MeatballMenuItem","ItemIcon","PushpinIcon","disabled","isFetching","text","onClick","async","mutateAsync","projects","followedFeed","query","invalidate","ArrowRightOnRectangleIcon","ref","PaginatedProfilePostFeed","hideReplies","hideShares","hideAsks","keepPreviousData","displayName","SolidEgg","_extends","fill","xmlns","viewBox","d","sortOrderOptions","Map","CohostReaderProjectListItem","t","useTranslation","summary","useMemo","latestPost","rawSummary","renderPostSummary","myPost","length","slice","type","selected","ProjectAvatar","noLink","publishedAt","FriendlyTimestamp","dateISO","selectedProjectId","setSelectedProjectId","sortOrder","setSortOrder","asOfTimestamp","setAsOfTimestamp","initialTimestamp","feedQuery","limit","beforeTimestamp","suspense","staleTime","Infinity","getNextPageParam","lastPage","nextCursor","undefined","feedHasUpdated","timestamp","_","pages","map","group","emptyLabel","dropDownClasses","refreshList","Date","now","Listbox","get","ChevronDownIcon","Array","from","id","uiText","key","isSuccess","item","projectPinned","activateProject","hasNextPage","fetchNextPage","PlusIcon","currentProject","useCurrentProject","modalPostComposer","useModalPostComposer","setup","setActiveProject","isTwoColumn","useMedia","Helmet","title","SidebarMenu","narrowMode","CohostReaderProjectList","document","location","titleId","svgRef","Object","assign","strokeWidth","stroke","strokeLinecap","strokeLinejoin","paginationEggStyles","PaginationEggs","backLink","forwardLink","condensed","backOnClick","forwardOnClick","IconEgg","ChevronRightIcon","viewingOnProjectPage","startingPageNumber","displayPrefs","useDisplayPrefs","_inTransition","startTransition","useTransition","pageString","setPage","useQueryState","page","parseInt","fetchedPosts","options","pagination","nextPage","hasPreviousPage","previousPage","previousPageNum","nextPageNum","onClickPrevious","previousHref","onClickNext","nextHref","posts","post","index","RenderIfVisible","postId","initialVisible","stayRendered","PostPreview","viewModel","highlightedTags","skipCollapse","commentThreads","defaultValue","searchParams","setSearchParams","useSearchParams","newVal","params","set","u","o","Error","captureStackTrace","H","join","e","s","r","l","n","p","indexOf","splice","a","register","slot","name","Provider","children","v","i","passive","htmlFor","ourProps","theirProps","defaultTag","M","y","Y","ne","c","f","defaultChecked","h","T","form","b","D","setSwitch","S","C","currentTarget","preventDefault","L","G","R","role","tabIndex","labelledby","describedby","onKeyUp","onKeyPress","k","w","current","closest","addEventListener","features","hidden","readOnly","Ge","Group","switch","tagName","click","focus","preventScroll","Label","Description"],"sourceRoot":""}