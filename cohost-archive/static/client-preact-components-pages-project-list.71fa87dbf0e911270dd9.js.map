{"version":3,"file":"client-preact-components-pages-project-list.71fa87dbf0e911270dd9.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/pages/follow-requests-context.ts","webpack:///./preact/components/pages/project-list.tsx","webpack:///../shared/types/relationships.ts","webpack:///./preact/components/partials/follow-button.tsx","webpack:///./preact/components/partials/follow-request-buttons.tsx","webpack:///./preact/components/partials/project-card.tsx"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import { ProjectId } from \"@/shared/types/ids\";\nimport { createContext } from \"react\";\n\nexport type Actions = \"accept\" | \"decline\";\nexport type OnAction = (projectId: ProjectId, action: Actions) => void;\n\nexport const FollowRequestsContext = createContext<{\n    onAction: OnAction;\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n}>({ onAction: () => {} });\n","import { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent } from \"react\";\nimport { AuthnButton } from \"../partials/authn-button\";\nimport { ProjectCard } from \"../partials/project-card\";\nimport { SidebarMenu } from \"../sidebar-menu\";\n\ntype ProjectListPageProps = {\n    projects: WireProjectModel[];\n    headerLabel: string;\n    emptyLabel: string;\n    loadMore?: () => void;\n    isLastPage?: boolean;\n};\n\nexport const ProjectListPage: FunctionComponent<ProjectListPageProps> = ({\n    projects,\n    headerLabel,\n    emptyLabel,\n    loadMore,\n    isLastPage,\n}) => {\n    return (\n        <div className=\"container mx-auto mb-16 mt-16 grid w-full grid-cols-1 gap-16 lg:grid-cols-4\">\n            <SidebarMenu />\n            <div\n                // FIXME: theme forced to light here because we haven't rethemed the rest of the site yet\n                data-theme=\"light\"\n                className=\"co-themed-box cohost-shadow-light dark:cohost-shadow-dark col-span-2 mx-auto w-full max-w-prose rounded-lg bg-notWhite p-3 text-notBlack\"\n            >\n                <h1 className=\"text-2xl font-bold\">{headerLabel}</h1>\n                <div className=\"mt-6 flex flex-col gap-4\">\n                    {projects.length ? (\n                        projects.map((project) => (\n                            <ProjectCard\n                                key={project.projectId}\n                                project={project}\n                            />\n                        ))\n                    ) : (\n                        <p>{emptyLabel}</p>\n                    )}\n                </div>\n                {loadMore ? (\n                    <AuthnButton\n                        disabled={isLastPage}\n                        onClick={loadMore}\n                        className=\"mt-8\"\n                    >\n                        load more\n                    </AuthnButton>\n                ) : null}\n            </div>\n        </div>\n    );\n};\n\nexport default ProjectListPage;\n","import { z } from \"zod\";\n\n// actual values don't matter, but higher-numbered following states cover up\n// lower-numbered ones\nexport enum FollowingState {\n    NotFollowing = 0,\n    FollowRequested = 1,\n    Following = 2,\n}\n\nexport const FollowingStateEnum = z.nativeEnum(FollowingState);\nexport type FollowingStateEnum = z.infer<typeof FollowingStateEnum>;\n","import { trpc } from \"@/client/lib/trpc\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { ProjectPrivacy } from \"@/shared/types/projects\";\nimport {\n    FollowingState,\n    FollowingStateEnum,\n} from \"@/shared/types/relationships\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport { UseTRPCMutationOptions } from \"@trpc/react-query/dist/shared\";\nimport React, {\n    FunctionComponent,\n    Suspense,\n    useCallback,\n    useState,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport {\n    Button,\n    SharedProps as ButtonProps,\n    LinkButton,\n} from \"../elements/button\";\nimport sitemap from \"@/shared/sitemap\";\nimport { useReqMutableStore } from \"../../providers/req-mutable-store\";\nimport { SimpleModalDialog } from \"@/client/preact/components/elements/simple-modal-dialog\";\n\ntype FollowButtonProps = {\n    project: WireProjectModel;\n    onFollow?: (newFollowingState: FollowingState) => void;\n    color: ButtonProps[\"color\"];\n};\n\nexport const FollowButton: FunctionComponent<FollowButtonProps> = (props) => {\n    return (\n        <Suspense>\n            <FollowButtonInner {...props} />\n        </Suspense>\n    );\n};\n\nconst FollowButtonInner: FunctionComponent<FollowButtonProps> = ({\n    project,\n    onFollow,\n    color,\n}) => {\n    const userInfo = useUserInfo();\n    const utils = trpc.useContext();\n    const followingStateQuery = trpc.projects.followingState.useQuery(\n        { projectHandle: project.handle },\n        { suspense: true }\n    );\n    const reqStore = useReqMutableStore();\n    const ssrUrl = reqStore.get(\"ssrUrl\");\n\n    // big ol boilerplate to generate the optimistic update callbacks. this can\n    // _probably_ be cleaned up somewhat, but doing so would require a bunch of\n    // type finangaling that likely isn't worth doing in a component we never\n    // actually touch.\n    const createMutationCallbacks = useCallback(\n        (\n            optimisticState: FollowingState\n        ): UseTRPCMutationOptions<\n            {\n                fromProjectId: ProjectId;\n                toProjectId: ProjectId;\n            },\n            unknown,\n            {\n                followingState: FollowingStateEnum;\n            },\n            {\n                previousState?: {\n                    readerToProject: FollowingState;\n                };\n            }\n        > => {\n            return {\n                onMutate: async () => {\n                    // cancel any pending requests so they don't overwrite our\n                    // optimistic update\n                    await utils.projects.followingState.cancel({\n                        projectHandle: project.handle,\n                    });\n\n                    // snapshot the previous value\n                    const previousState = utils.projects.followingState.getData(\n                        {\n                            projectHandle: project.handle,\n                        }\n                    );\n\n                    // optimistic update\n                    // cancel follow request -> not following\n                    utils.projects.followingState.setData(\n                        { projectHandle: project.handle },\n                        {\n                            readerToProject: optimisticState,\n                        }\n                    );\n\n                    return { previousState };\n                },\n                onError: (err, params, context) => {\n                    // mutation failed, reset back to the previous state\n                    utils.projects.followingState.setData(\n                        { projectHandle: project.handle },\n                        context?.previousState\n                    );\n                },\n                onSettled: async () => {\n                    // refetch so we know we're For Sure accurate\n                    await utils.projects.followingState.invalidate({\n                        projectHandle: project.handle,\n                    });\n                },\n                onSuccess: (result) => {\n                    if (onFollow) {\n                        onFollow(result.followingState);\n                    }\n                },\n            };\n        },\n        [onFollow, project.handle, utils.projects.followingState]\n    );\n\n    const followRequestMutation =\n        trpc.relationships.createFollowRequest.useMutation({\n            ...createMutationCallbacks(\n                project.privacy === ProjectPrivacy.Private\n                    ? FollowingState.FollowRequested\n                    : FollowingState.Following\n            ),\n        });\n    const unfollowMutation = trpc.relationships.unfollow.useMutation({\n        ...createMutationCallbacks(FollowingState.NotFollowing),\n    });\n    const cancelFollowRequestMutation =\n        trpc.relationships.declineOrCancelFollowRequest.useMutation({\n            ...createMutationCallbacks(FollowingState.NotFollowing),\n        });\n\n    const { t } = useTranslation();\n    const followingState = followingStateQuery.data?.readerToProject ?? null;\n\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n\n    const onClickFollow = useCallback(async () => {\n        if (!userInfo.projectId) return;\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        switch (followingState) {\n            case FollowingState.FollowRequested:\n                // pending request; cancel follow request\n                await cancelFollowRequestMutation.mutateAsync(mutateArgs);\n                break;\n            case FollowingState.NotFollowing:\n                // not following; follow\n                await followRequestMutation.mutateAsync(mutateArgs);\n                break;\n            case FollowingState.Following:\n                // following; unfollow.  this causes a confirmation dialog box.\n                setIsConfirmOpen(true);\n                break;\n            case null:\n                // following state is only null when we don't know what we're\n                // doing or user is logged out. just exit out.\n                return;\n        }\n    }, [\n        cancelFollowRequestMutation,\n        followRequestMutation,\n        followingState,\n        project.projectId,\n        userInfo.projectId,\n    ]);\n\n    const onConfirmUnfollow = useCallback(async () => {\n        if (!userInfo.projectId) return;\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        await unfollowMutation.mutateAsync(mutateArgs);\n        setIsConfirmOpen(false);\n    }, [project.projectId, userInfo.projectId, unfollowMutation]);\n\n    let followButtonText = \"unknown\";\n\n    if (!userInfo.loggedIn) {\n        followButtonText = t(\"common:login\");\n    } else if (followingState === FollowingState.Following) {\n        followButtonText = t(\"client:page.unfollow-button\", \"unfollow\");\n    } else if (followingState === FollowingState.NotFollowing) {\n        if (project.privacy === ProjectPrivacy.Private) {\n            followButtonText = t(\n                \"client:page.follow-request-button\",\n                \"send follow request\"\n            );\n        } else {\n            followButtonText = t(\"client:page.follow-button\", \"follow\");\n        }\n    } else if (followingState === FollowingState.FollowRequested) {\n        followButtonText = t(\n            \"client:page.cancel-follow-request-button\",\n            \"cancel follow request\"\n        );\n    } else {\n        return null;\n    }\n\n    if (!userInfo.loggedIn) {\n        return (\n            <LinkButton\n                buttonStyle=\"pill\"\n                color={color}\n                href={sitemap.public.login({ originalUrl: ssrUrl }).toString()}\n            >\n                {followButtonText}\n            </LinkButton>\n        );\n    }\n\n    return (\n        <>\n            <SimpleModalDialog\n                isOpen={isConfirmOpen}\n                title={t(\n                    \"client:unfollow-page.confirm-title\",\n                    \"Unfollow this page?\"\n                )}\n                body={t(\n                    \"client:unfollow-page.confirm-body\",\n                    \"Are you sure you want to unfollow this page?\"\n                )}\n                confirm={{ label: t(\"common:unfollow\", \"unfollow\") }}\n                cancel={{ label: t(\"common:cancel\", \"cancel\") }}\n                onConfirm={onConfirmUnfollow}\n                onCancel={() => setIsConfirmOpen(false)}\n            />\n            <Button buttonStyle=\"pill\" color={color} onClick={onClickFollow}>\n                {followButtonText}\n            </Button>\n        </>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport {\n    type Actions,\n    FollowRequestsContext,\n} from \"@/client/preact/components/pages/follow-requests-context\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent, useCallback, useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport { Button } from \"../elements/button\";\n\ntype FollowRequestButtonsProps = {\n    requester: WireProjectModel;\n};\n\nexport const FollowRequestButtons: FunctionComponent<\n    FollowRequestButtonsProps\n> = ({ requester }) => {\n    const { t } = useTranslation();\n    const userInfo = useUserInfo();\n    const { onAction } = useContext(FollowRequestsContext);\n    const utils = trpc.useContext();\n\n    const createRequestMutationArgs = (action: Actions) => {\n        return {\n            onSettled: async () => {\n                onAction(requester.projectId, action);\n                await utils.relationships.countFollowRequests.invalidate();\n                await utils.posts.profilePosts.invalidate();\n            },\n        };\n    };\n\n    const acceptRequestMutation =\n        trpc.relationships.acceptFollowRequest.useMutation(\n            createRequestMutationArgs(\"accept\")\n        );\n    const onClickAccept = useCallback(async () => {\n        if (!userInfo.projectId) return;\n\n        await acceptRequestMutation.mutateAsync({\n            fromProjectId: requester.projectId,\n            toProjectId: userInfo.projectId,\n        });\n    }, [acceptRequestMutation, requester.projectId, userInfo.projectId]);\n\n    const declineRequestMutation =\n        trpc.relationships.declineOrCancelFollowRequest.useMutation(\n            createRequestMutationArgs(\"decline\")\n        );\n\n    const onClickDecline = useCallback(async () => {\n        if (!userInfo.projectId) return;\n\n        await declineRequestMutation.mutateAsync({\n            fromProjectId: requester.projectId,\n            toProjectId: userInfo.projectId,\n        });\n    }, [declineRequestMutation, requester.projectId, userInfo.projectId]);\n\n    return (\n        <div className=\"flex flex-row justify-center gap-2\">\n            <Button buttonStyle=\"pill\" color=\"green\" onClick={onClickAccept}>\n                {t(\n                    \"server:relationships.accept-follow-request-button-text-short\",\n                    \"accept\"\n                )}\n            </Button>\n            <Button buttonStyle=\"pill\" color=\"red\" onClick={onClickDecline}>\n                {t(\n                    \"server:relationships.decline-follow-request-button-text-short\",\n                    \"decline\"\n                )}\n            </Button>\n        </div>\n    );\n};\n","import { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent } from \"react\";\nimport { ProjectReference } from \"../project-reference\";\nimport { FollowButton } from \"./follow-button\";\nimport { FollowRequestButtons } from \"./follow-request-buttons\";\nimport { ProjectAvatar } from \"./project-avatar\";\n\ntype ProjectCardProps = {\n    project: WireProjectModel;\n    isFollowRequest?: boolean;\n};\n\nexport const ProjectCard: FunctionComponent<ProjectCardProps> = ({\n    project,\n    isFollowRequest = false,\n}) => {\n    return (\n        <div className=\"flex flex-row items-center gap-1\">\n            <ProjectAvatar project={project} />\n            <div className=\"min-w-0 flex-shrink justify-center gap-0 lg:flex-row\">\n                <div className=\"items-left flex flex-shrink flex-row gap-1 lg:flex-col\">\n                    <ProjectReference project={project} />\n                </div>\n                <p>{project.dek}</p>\n            </div>\n            <div className=\"flex-grow\" />\n            {isFollowRequest ? (\n                <FollowRequestButtons requester={project} />\n            ) : (\n                <FollowButton project={project} color=\"cherry\" />\n            )}\n        </div>\n    );\n};\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","FollowRequestsContext","createContext","onAction","ProjectListPage","projects","headerLabel","emptyLabel","loadMore","isLastPage","SidebarMenu","length","map","project","ProjectCard","key","projectId","AuthnButton","disabled","onClick","FollowingState","FollowButton","Suspense","FollowButtonInner","onFollow","userInfo","useUserInfo","utils","trpc","followingStateQuery","projectHandle","handle","suspense","ssrUrl","useReqMutableStore","get","createMutationCallbacks","useCallback","optimisticState","onMutate","async","followingState","cancel","previousState","getData","setData","readerToProject","onError","err","params","context","onSettled","invalidate","onSuccess","result","followRequestMutation","privacy","ProjectPrivacy","FollowRequested","Following","unfollowMutation","NotFollowing","cancelFollowRequestMutation","t","useTranslation","data","isConfirmOpen","setIsConfirmOpen","useState","onClickFollow","mutateArgs","fromProjectId","toProjectId","mutateAsync","onConfirmUnfollow","followButtonText","loggedIn","SimpleModalDialog","isOpen","title","body","confirm","label","onConfirm","onCancel","href","sitemap","originalUrl","toString","FollowRequestButtons","requester","useContext","createRequestMutationArgs","action","relationships","countFollowRequests","posts","profilePosts","acceptRequestMutation","onClickAccept","declineRequestMutation","onClickDecline","isFollowRequest","ProjectAvatar","ProjectReference","dek"],"sourceRoot":""}