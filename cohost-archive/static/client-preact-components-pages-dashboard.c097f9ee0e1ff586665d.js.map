{"version":3,"file":"client-preact-components-pages-dashboard.c097f9ee0e1ff586665d.js","mappings":"qcAIO,MAAMA,EAAcC,EAAAA,EAAAA,KAAO,CAAC,OAAQ,YAAa,UAG3CC,EAAcD,EAAAA,EAAAA,KAAO,CAC9B,SACA,aACA,QACA,YACA,MACA,QACA,SACA,YACA,gBACA,gBAWEE,GAPqBF,EAAAA,EAAAA,OAAS,CAChCG,YAAaJ,EACbK,MAAOH,EACPI,UAAWL,EAAAA,EAAAA,SAAWM,aAIPC,GAAAA,CAAW,cAAe,wBAMvCC,EAAcD,GAAAA,CAChB,gBACA,YACA,eACA,YAGEE,EAAmBF,GAAAA,CAAW,SAAU,cAExCG,EAAoBH,GAAAA,CACtB,OACA,OACA,eACA,iBACA,aACA,OACA,WAGEI,EAAgBJ,GAAAA,CAClB,gBACA,kBACA,cACA,uBACA,2BACA,2BACA,6BACA,uBACA,oBACAL,GAEEU,EAAoBL,GAAAA,CACtB,oBACA,sBACA,kBACA,2BACA,+BACA,+BACA,iCACA,2BACA,wBACAL,GAGEW,EAAaN,GAAAA,CACf,aACA,eACA,WACA,oBACA,wBACA,wBACA,0BACA,oBACAL,GAGEY,EAAeP,GAAAA,CACjB,eACA,iBACA,aACA,sBACA,0BACA,0BACA,4BACA,sBACAL,GAEEa,EAAeR,GAAAA,CACjB,eACA,iBACA,aACA,cACA,uBAEES,EAAkBT,GAAAA,CACpB,kBACA,oBACA,gBACA,yBACA,sBACAL,GAGEe,EAAgBV,GAAAA,CAClB,gBACA,cACA,gBACA,kBACA,mBAGEW,EAAmBX,GAAAA,CACrB,eACA,gBACA,qBACA,0BAGEY,EAA2BZ,GAAAA,CAC7B,gBACA,YACA,0BACA,2BACA,8BAGEa,EAAyBb,GAAAA,CAC3B,WACA,oBACA,kBACA,uBAGEc,EAAiBC,GACnBf,GAAAA,CACI,eACA,eACA,OACA,OACA,YACAe,EAAMjB,UACN,CACI,CAACG,GAAoC,SAAtBc,EAAMnB,YACrB,CAACM,GAAyC,cAAtBa,EAAMnB,YAC1B,CAACO,GAA0C,UAAtBY,EAAMnB,YAC3B,CAACQ,GAAgC,WAAhBW,EAAMlB,MACvB,CAACQ,GAAoC,eAAhBU,EAAMlB,MAC3B,CAACW,GAA+B,UAAhBO,EAAMlB,MACtB,CAACY,GAAkC,cAAhBM,EAAMlB,MACzB,CAACS,GAA6B,QAAhBS,EAAMlB,MACpB,CAACa,GAAgC,WAAhBK,EAAMlB,MACvB,CAACU,GAA+B,UAAhBQ,EAAMlB,MACtB,CAACc,GAAmC,cAAhBI,EAAMlB,MAC1B,CAACe,GAA2C,kBAAhBG,EAAMlB,MAClC,CAACgB,GAAyC,gBAAhBE,EAAMlB,QAI/BmB,EAKTC,EAAAA,YAAiB,EAAGrB,YAAAA,EAAaC,MAAAA,EAAOC,UAAAA,KAAciB,GAASG,KAC/D,MAAMC,EAAUL,EAAc,CAC1BlB,YAAAA,EACAC,MAAAA,EACAC,UAAAA,KACGiB,IAEP,OACIE,EAAAA,cAAA,SAAAG,EAAA,GAAYL,EAAK,CAAEjB,UAAWqB,EAASD,IAAKA,IACvCH,EAAMM,aAInBL,EAAOM,YAAc,SAEd,MAAMC,EAKTN,EAAAA,YAAiB,EAAGrB,YAAAA,EAAaC,MAAAA,KAAUkB,GAASG,KACpD,MAAMC,EAAUL,EAAc,CAAElB,YAAAA,EAAaC,MAAAA,KAAUkB,IACvD,OACIE,EAAAA,cAAA,IAAAG,EAAA,GAAOL,EAAK,CAAEjB,UAAWqB,EAASD,IAAKA,IAClCH,EAAMM,aAInBE,EAAWD,YAAc,c,iRClMlB,MAAME,EAETA,EAAGC,QAAAA,EAASC,YAAAA,MACZ,MAAMC,GAAeC,EAAAA,EAAAA,KAGfC,GAAoBC,EAAAA,EAAAA,UAAQ,KAC9B,IAAIC,EAWJ,OARIA,EAD0B,OAA1BN,EAAQO,cACSC,IAAAA,OACbR,EAAQS,OACPC,GAASA,EAAKC,WAAaX,EAAQO,gBAGvBP,EAAQS,OAGtBG,EAAAA,EAAAA,IAAqBN,EAAgB,CACxCO,iBAAkB,OAClBC,eAAe,EACfC,sBAAuBb,EAAaa,0BAEzC,CACCf,EAAQO,cACRP,EAAQS,MACRP,EAAaa,wBAGjB,OACIvB,EAAAA,cAAA,OAAKnB,UAAY,mCACbmB,EAAAA,cAAA,OAAKnB,UAAU,wCACV+B,GAEsB,OAA1BJ,EAAQO,cACLf,EAAAA,cAAA,KACInB,UAAU,oFACV2C,KAAMf,EACNgB,OAAO,SACPC,IAAI,cACP,aAGD,OC9BVC,EAAuCA,KACzC,MACMC,EAjBNC,EAAAA,EAAAA,MAAAA,eAAAA,SACI,CACIC,cAAe,QACfC,QAAS,iBAEb,CACIC,UAAU,EAEVC,iBAAiB,EACjBC,gBAAgB,EAChBC,oBAAoB,EACpBC,sBAAsB,IAMQC,MAAMC,MAAM,GAClD,OAAOV,EACH5B,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,SAAG,sBAEHA,EAAAA,cAAA,OAAKnB,UAAU,sBACV+C,EAAiBW,SACdvC,EAAAA,cAAA,MAAInB,UAAU,oDACVmB,EAAAA,cAAA,KACIwB,KAAMI,EAAiBY,kBACvB3D,UAAU,mBAET+C,EAAiBW,WAG1B,KACHX,EAAiBa,YACdzC,EAAAA,cAAA,KACIwB,KAAMI,EAAiBY,kBACvB3D,UAAU,8DAEVmB,EAAAA,cAAC0C,EAAAA,EAAmB,CAChB7D,UAAU,qBACV8D,QAASf,EAAiBa,eAGlC,MAERzC,EAAAA,cAACO,EAAmB,CAChBE,YAAamB,EAAiBY,kBAAkBI,WAChDpC,QAASoB,EAAiBiB,UAIlC7C,EAAAA,cAAA,SAAG,kGAEiC,IAChCA,EAAAA,cAAA,KACIwB,KAAMsB,EAAAA,GAAAA,OAAAA,QAAAA,eACc,CACZhB,cAAe,UAElBc,WACL/D,UAAU,gCAGNiE,EAAAA,GAAAA,OAAAA,QAAAA,eAAsC,CAClChB,cAAe,UAChBiB,YAOVC,EAAkCA,IAEvChD,EAAAA,cAAA,WACInB,UAAY,kFAEZmB,EAAAA,cAAA,OAAKnB,UAAU,yCACXmB,EAAAA,cAACiD,EAAAA,EAAS,CAACpE,UAAU,wCACrBmB,EAAAA,cAAA,MAAInB,UAAU,0DAAyD,sBAK3EmB,EAAAA,cAAA,SAAG,kGAEiC,IAChCA,EAAAA,cAAA,KACInB,UAAU,8DACV2C,KAAK,gFACR,oBAEI,IAAI,uEAEF,IACPxB,EAAAA,cAAA,KACInB,UAAU,8DACV2C,KAAK,iFACR,+BAKLxB,EAAAA,cAAA,MAAInB,UAAU,4BAEdmB,EAAAA,cAACkD,EAAAA,SAAQ,CAACC,SAAUnD,EAAAA,cAAA,SAAG,eACnBA,EAAAA,cAAC2B,EAAiB,Q,0BCvG3B,MAAMyB,EAAwDA,EACjEC,QAAAA,EACAC,cAAAA,MAEA,MAAM5C,GAAeC,EAAAA,EAAAA,KACf4C,EAAQ1B,EAAAA,EAAAA,aAER2B,EAAuB3B,EAAAA,EAAAA,MAAAA,aAAAA,cACvB4B,GAA0BC,EAAAA,EAAAA,cAAYC,UACxC,UACUH,EAAqBI,YAAY,IAChClD,EACHmD,2BAA2B,UAEzBN,EAAMO,MAAMpD,aAAaqD,aACjC,MAAOC,GACLC,QAAQC,MAAMF,MAEnB,CAACtD,EAAc6C,EAAOC,IAEzB,OAAO9C,EAAamD,0BAA4B,KAC5C7D,EAAAA,cAAA,OAAKnB,UAAU,gDACXmB,EAAAA,cAAA,OAAKnB,UAAU,qBACfmB,EAAAA,cAAA,OAAKnB,UAAU,0HACXmB,EAAAA,cAAA,OAAKnB,UAAU,qBACXmB,EAAAA,cAAA,MAAInB,UAAU,sBACTwE,EACK,qBACA,2BAEVrD,EAAAA,cAAA,KAAGnB,UAAU,SAAQ,uFAEc,IAC/BmB,EAAAA,cAAA,KACIwB,KAAMsB,EAAAA,GAAAA,OAAAA,KACI,CACFf,QAAS,sBAEZa,YACR,sBAEI,IAAI,kFAEkB,IAC3B5C,EAAAA,cAAA,KAAGwB,KAAMsB,EAAAA,GAAAA,OAAAA,SAAwBF,YAAY,UAAW,IAAI,4JAMpE5C,EAAAA,cAAA,OAAKnB,UAAU,6BACVyE,EAAca,KAAKC,GAChBpE,EAAAA,cAACqE,EAAAA,EAAW,CACRC,IAAKF,EAAQG,UACbH,QAASA,OAIrBpE,EAAAA,cAAA,OAAKnB,UAAU,+DACXmB,EAAAA,cAAA,UACInB,UAAY,8NAEZ2F,QAASA,IAAMf,IACfgB,KAAK,UACR,e,eC3CrB,MAAMC,EAAW,6BAOJC,EAA+CA,EACxDC,MAAOC,EACPvB,cAAAA,EACAc,QAAAA,EACAU,aAAAA,MAEA,MAAMpE,GAAeC,EAAAA,EAAAA,MAGdoE,EAAuBC,KAFbC,EAAAA,EAAAA,OAGbC,EAAAA,EAAAA,UAA6B,QAE1BN,EAAOO,IAAYD,EAAAA,EAAAA,UACtB,IAAIE,IACAP,EAAaV,KAAKkB,GAAS,CAACA,EAAKC,OAAQ,CAAED,KAAAA,EAAME,WAAW,QAG9DC,GAAcC,EAAAA,EAAAA,WAEpBC,EAAAA,EAAAA,YAAU,KACNF,EAAYG,QAAU,IAAIC,YAAYlB,KACvC,IAEH,MAAMmB,GAAsBhF,EAAAA,EAAAA,UACxB,IACI,IAAI+D,EAAMkB,UAAUC,QAAO,CAACC,EAAOC,KAC/B,IAAKA,EAAIZ,KAAK5C,YAAa,OAAOuD,EAElC,MAAME,EAAmB,IAAIC,KACzBF,EAAIZ,KAAK5C,aACX2D,UAEF,OAAOF,EAAmBF,EAAQE,EAAmBF,IACtDG,KAAKE,QACZ,CAACzB,IAGC0B,GAAU5C,EAAAA,EAAAA,cACX6C,IACG,IAAKA,EAAS9D,YAAa,OAM3B,GACI,IAAI0D,KAAKI,EAAS9D,aAAa2D,UAAYP,EAE3C,OAGJ,MAAMW,EAAc5B,EAAM6B,IAAIF,EAASjB,QAEvCH,EACI,IAAIC,IACAR,EAAM8B,IAAIH,EAASjB,OAAQ,CACvBD,KAAMkB,EACNhB,YAAWiB,GAAcA,EAAYjB,gBAKrD,CAACX,EAAOO,EAAUU,IAGhBc,GAAajD,EAAAA,EAAAA,cACd4B,IACGH,GAAUP,IACDA,EAAMgC,OAAOtB,IACdrB,QAAQ4C,KAAM,sBAAqBvB,eAGhC,IAAIF,IAAIR,QAGvB,CAACO,IAaC2B,GAAejG,EAAAA,EAAAA,UACjB,IACI,IAAI+D,EAAMkB,UACLiB,QAAQd,GAAQA,EAAIV,YACpByB,MACG,CAACC,EAAMC,IACH,IAAIf,KAAKe,EAAK7B,KAAK5C,aAAe,GAAG2D,UACrC,IAAID,KAAKc,EAAK5B,KAAK5C,aAAe,GAAG2D,YAE5CjC,KAAK8B,GAAQA,EAAIZ,QAC1B,CAACT,IAGCuC,GAAkBtG,EAAAA,EAAAA,UACpB,IAAM,IAAI+D,EAAMkB,UAAUiB,QAAQd,IAASA,EAAIV,YAAW6B,QAC1D,CAACxC,IAGCyC,GAAgB3D,EAAAA,EAAAA,cACjBM,IACG,MAAM3B,EAAOiF,KAAKC,MAAMvD,EAAE3B,MAEtBA,EAAKmF,OACLrC,EAAS,IAAIC,KAGjB,IAAK,MAAMmB,KAAYlE,EAAKoF,IACxBnB,EAAQC,GAGZ,IAAK,MAAMjB,KAAUjD,EAAKqF,OACtBf,EAAWrB,KAGnB,CAACgB,EAASK,KAGdjB,EAAAA,EAAAA,YAAU,KACNF,EAAYG,SAASgC,iBAAiB,UAAWN,GAE1C,IACH7B,EAAYG,SAASiC,oBAAoB,UAAWP,KACzD,CAACA,IAEJ,MAAMQ,GAAoBC,EAAAA,EAAAA,KAc1B,OAbApC,EAAAA,EAAAA,YAAU,KACNmC,EAAkBE,MAAM,CACpB3D,QAAAA,MAEL,CAACyD,EAAmBzD,KAEvBsB,EAAAA,EAAAA,YAAU,KAEN,MAAMsC,EAAwBjD,GAAuBkD,cAAgB,EAErEC,OAAOC,SAAS,GAAIH,KACrB,CAACjD,GAAuBkD,eAGvBjI,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACoI,EAAAA,GAAM,CAACC,MAAM,SACdrI,EAAAA,cAAA,QAAMnB,UAAU,mBACZmB,EAAAA,cAAA,OAAKnB,UAAU,4DACXmB,EAAAA,cAACsI,EAAAA,GAAW,MACZtI,EAAAA,cAAA,WACIuI,GAAG,iBACH,gBAAe7D,EACf7F,UAAU,0CAEVmB,EAAAA,cAAA,OAAKnB,UAAU,mCAEXmB,EAAAA,cAAA,QAAMnB,UAAU,8BAChBmB,EAAAA,cAACwI,EAAAA,EAAc,CACXC,KAAM,CACF,CACIC,MAAO,eACPlH,KAAMsB,EAAAA,GAAAA,OAAAA,YAEDF,WACL+F,QAAQ,GAEZ,CACID,MAAO,kBACPlH,KAAMsB,EAAAA,GAAAA,OAAAA,oBAEDF,gBAMrB5C,EAAAA,cAAA,OAAKnB,UAAU,wBACVsI,EAAkB,EACfnH,EAAAA,cAAA,UACInB,UAAU,mGACV2F,QAzGDoE,KAC3B,MAAMC,EAAyC,IAAIzD,IAEnD,IAAK,MAAMa,KAAOrB,EAAMkB,SACpB+C,EAASnC,IAAIT,EAAIZ,KAAKC,OAAQ,CAAED,KAAMY,EAAIZ,KAAME,WAAW,IAG/DJ,EAAS0D,IAmGmB5I,IAAK+E,GAELhF,EAAAA,cAAC8I,EAAAA,GAAO,CAACjK,UAAU,uCACdsI,GACK,uCAGd,KAEHL,EAAaM,OACRN,EAAa3C,KAAI,CAACkB,EAAM0D,IACpB/I,EAAAA,cAACgJ,EAAAA,EAAe,CACZ1E,IAAKe,EAAKC,OACV2D,eAAgBF,EAAQ,EACxBG,cAAc,GAEdlJ,EAAAA,cAACmJ,EAAAA,EAAW,CACRC,UAAW/D,EACXgE,gBAAiB,GACjB3I,aAAcA,OAI1B,KACJA,EAAamD,0BAKX,KAJA7D,EAAAA,cAACoD,EAAgB,CACbC,SAAUyD,EAAaM,OACvB9D,cAAeA,IAGvBtD,EAAAA,cAACsJ,EAAAA,EAAc,CACXC,cAAUC,EACVC,YAAa3G,EAAAA,GAAAA,OAAAA,UACE,CAAEgC,aAAAA,EAAc4E,UAAW,IACrC9G,eAIjB5C,EAAAA,cAACgD,EAAY,UAOjC2B,EAAUtE,YAAc,YACxB,S,iFCxQO,MAAMsJ,GAAwBC,E,SAAAA,eAGlC,CAAEC,SAAUA,U,0FCLR,IAAKC,EAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,+BAAdA,EAAAA,EAAc,qCAAdA,EAAAA,EAAc,yBAAdA,EAAc,KAMQtL,EAAAA,EAAAA,WAAasL,G,+ECsBxC,MAAMC,EAAsDjK,GAE3DE,EAAAA,cAACkD,EAAAA,SAAQ,KACLlD,EAAAA,cAACgK,EAAsBlK,IAK7BkK,EAA0DA,EAC5D5F,QAAAA,EACA6F,SAAAA,EACArL,MAAAA,MAEA,MAAMsL,GAAWjF,EAAAA,EAAAA,MACX1B,EAAQ1B,EAAAA,EAAAA,aACRsI,EAAsBtI,EAAAA,EAAAA,SAAAA,eAAAA,SACxB,CAAEC,cAAesC,EAAQgG,QACzB,CAAEpI,UAAU,IAGVqI,GADWC,EAAAA,EAAAA,MACO7D,IAAI,UAMtB8D,GAA0B7G,EAAAA,EAAAA,cAExB8G,IAgBO,CACHC,SAAU9G,gBAGAJ,EAAMmH,SAASC,eAAeC,OAAO,CACvC9I,cAAesC,EAAQgG,SAI3B,MAAMS,EAAgBtH,EAAMmH,SAASC,eAAeG,QAChD,CACIhJ,cAAesC,EAAQgG,SAa/B,OAPA7G,EAAMmH,SAASC,eAAeI,QAC1B,CAAEjJ,cAAesC,EAAQgG,QACzB,CACIY,gBAAiBR,IAIlB,CAAEK,cAAAA,IAEbI,QAASA,CAACC,EAAKC,EAAQC,KAEnB7H,EAAMmH,SAASC,eAAeI,QAC1B,CAAEjJ,cAAesC,EAAQgG,QACzBgB,GAASP,gBAGjBQ,UAAW1H,gBAEDJ,EAAMmH,SAASC,eAAe5G,WAAW,CAC3CjC,cAAesC,EAAQgG,UAG/BkB,UAAYC,IACJtB,GACAA,EAASsB,EAAOZ,oBAKhC,CAACV,EAAU7F,EAAQgG,OAAQ7G,EAAMmH,SAASC,iBAGxCa,EACF3J,EAAAA,EAAAA,cAAAA,oBAAAA,YAAmD,IAC5C0I,EACCnG,EAAQqH,UAAYC,EAAAA,GAAAA,QACd5B,EAAe6B,gBACf7B,EAAe8B,aAG3BC,EAAmBhK,EAAAA,EAAAA,cAAAA,SAAAA,YAAwC,IAC1D0I,EAAwBT,EAAegC,gBAExCC,EACFlK,EAAAA,EAAAA,cAAAA,6BAAAA,YAA4D,IACrD0I,EAAwBT,EAAegC,iBAG5C,EAAEE,IAAMC,EAAAA,EAAAA,MACRtB,EAAiBR,EAAoB9H,MAAM2I,iBAAmB,MAE7DkB,EAAeC,IAAoBjH,EAAAA,EAAAA,WAAS,GAE7CkH,GAAgB1I,EAAAA,EAAAA,cAAYC,UAC9B,IAAKuG,EAAS3F,UAAW,OACzB,MAAM8H,EAAa,CACfC,cAAepC,EAAS3F,UACxBgI,YAAanI,EAAQG,WAGzB,OAAQoG,GACJ,KAAKb,EAAe6B,sBAEVI,EAA4BnI,YAAYyI,GAC9C,MACJ,KAAKvC,EAAegC,mBAEVN,EAAsB5H,YAAYyI,GACxC,MACJ,KAAKvC,EAAe8B,UAEhBO,GAAiB,GACjB,MACJ,KAAK,KAGD,UAET,CACCJ,EACAP,EACAb,EACAvG,EAAQG,UACR2F,EAAS3F,YAGPiI,GAAoB9I,EAAAA,EAAAA,cAAYC,UAClC,IAAKuG,EAAS3F,UAAW,OACzB,MAAM8H,EAAa,CACfC,cAAepC,EAAS3F,UACxBgI,YAAanI,EAAQG,iBAGnBsH,EAAiBjI,YAAYyI,GACnCF,GAAiB,KAClB,CAAC/H,EAAQG,UAAW2F,EAAS3F,UAAWsH,IAE3C,IAAIY,EAAmB,UAEvB,GAAKvC,EAASwC,SAEP,GAAI/B,IAAmBb,EAAe8B,UACzCa,EAAmBT,EAAE,8BAA+B,iBACjD,GAAIrB,IAAmBb,EAAegC,aAErCW,EADArI,EAAQqH,UAAYC,EAAAA,GAAAA,QACDM,EACf,oCACA,uBAGeA,EAAE,4BAA6B,cAEnD,IAAIrB,IAAmBb,EAAe6B,gBAMzC,OAAO,KALPc,EAAmBT,EACf,2CACA,8BAfJS,EAAmBT,EAAE,gBAqBzB,OAAK9B,EAASwC,SAaV1M,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAC2M,EAAAA,EAAiB,CACdC,OAAQV,EACR7D,MAAO2D,EACH,qCACA,uBAEJa,KAAMb,EACF,oCACA,gDAEJc,QAAS,CAAEpE,MAAOsD,EAAE,kBAAmB,aACvCpB,OAAQ,CAAElC,MAAOsD,EAAE,gBAAiB,WACpCe,UAAWP,EACXQ,SAAUA,IAAMb,GAAiB,KAErCnM,EAAAA,cAACD,EAAAA,GAAM,CAACpB,YAAY,OAAOC,MAAOA,EAAO4F,QAAS4H,GAC7CK,IA5BLzM,EAAAA,cAACM,EAAAA,GAAU,CACP3B,YAAY,OACZC,MAAOA,EACP4C,KAAMsB,EAAAA,GAAAA,OAAAA,MAAqB,CAAEmK,YAAa5C,IAAUzH,YAEnD6J,K,4FCnMjB,EADmB,cAvBnB,UAA0B,MACxBpE,EAAK,QACL6E,KACGpN,GACFqN,GACD,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACfzN,IAAKkN,EACL,kBAAmBD,GAClBpN,GAAQuI,EAAqB,gBAAoB,QAAS,CAC3DE,GAAI2E,GACH7E,GAAS,KAAmB,gBAAoB,OAAQ,CACzDsF,cAAe,QACfC,eAAgB,QAChBC,EAAG,kC,+BCRP,MAAMC,EAAsBC,GAAAA,CACxB,MACA,OACA,iBACA,gBACA,sBACA,0BACA,sBAGSzE,EAAwDA,EACjEC,SAAAA,EACAE,YAAAA,EACAuE,UAAAA,GAAY,EACZC,YAAAA,EACAC,eAAAA,KAGIlO,EAAAA,cAAA,OAAKnB,UAAU,+BAETmP,EAEE,KADAhO,EAAAA,cAAA,QAAMnB,UAAU,wBAAuB,KAE1C0K,EACGvJ,EAAAA,cAAA,KAAGwB,KAAM+H,EAAU/E,QAASyJ,GACxBjO,EAAAA,cAACmO,EAAAA,GAAO,CAACtP,UAAY,GAAEiP,kBACnB9N,EAAAA,cAACoO,EAAgB,QAGzB,KACJpO,EAAAA,cAAA,QAAMnB,UAAU,aAAY,KAC3B4K,EACGzJ,EAAAA,cAAA,KAAGwB,KAAMiI,EAAajF,QAAS0J,GAC3BlO,EAAAA,cAACmO,EAAAA,GAAO,CAACtP,UAAWiP,GAChB9N,EAAAA,cAACoO,EAAgB,QAGzB,MAKhB,S,gJCxCO,MAAMC,EAETA,EAAGC,UAAAA,MACH,MAAM,EAAEtC,IAAMC,EAAAA,EAAAA,MACR/B,GAAWjF,EAAAA,EAAAA,OACX,SAAE4E,IAAa0E,EAAAA,EAAAA,YAAW5E,EAAAA,uBAC1BpG,EAAQ1B,EAAAA,EAAAA,aAER2M,EAA6BC,IACxB,CACHpD,UAAW1H,UACPkG,EAASyE,EAAU/J,UAAWkK,SACxBlL,EAAMmL,cAAcC,oBAAoB5K,mBACxCR,EAAMqB,MAAMgK,aAAa7K,gBAKrC8K,EACFhN,EAAAA,EAAAA,cAAAA,oBAAAA,YACI2M,EAA0B,WAE5BM,GAAgBpL,EAAAA,EAAAA,cAAYC,UACzBuG,EAAS3F,iBAERsK,EAAsBjL,YAAY,CACpC0I,cAAegC,EAAU/J,UACzBgI,YAAarC,EAAS3F,cAE3B,CAACsK,EAAuBP,EAAU/J,UAAW2F,EAAS3F,YAEnDwK,EACFlN,EAAAA,EAAAA,cAAAA,6BAAAA,YACI2M,EAA0B,YAG5BQ,GAAiBtL,EAAAA,EAAAA,cAAYC,UAC1BuG,EAAS3F,iBAERwK,EAAuBnL,YAAY,CACrC0I,cAAegC,EAAU/J,UACzBgI,YAAarC,EAAS3F,cAE3B,CAACwK,EAAwBT,EAAU/J,UAAW2F,EAAS3F,YAE1D,OACIvE,EAAAA,cAAA,OAAKnB,UAAU,sCACXmB,EAAAA,cAACD,EAAAA,GAAM,CAACpB,YAAY,OAAOC,MAAM,QAAQ4F,QAASsK,GAC7C9C,EACG,+DACA,WAGRhM,EAAAA,cAACD,EAAAA,GAAM,CAACpB,YAAY,OAAOC,MAAM,MAAM4F,QAASwK,GAC3ChD,EACG,gEACA,c,eC3Db,MAAM3H,EAAmDA,EAC5DD,QAAAA,EACA6K,gBAAAA,GAAkB,KAGdjP,EAAAA,cAAA,OAAKnB,UAAU,oCACXmB,EAAAA,cAACkP,EAAAA,EAAa,CAAC9K,QAASA,IACxBpE,EAAAA,cAAA,OAAKnB,UAAU,wDACXmB,EAAAA,cAAA,OAAKnB,UAAU,0DACXmB,EAAAA,cAACmP,EAAAA,EAAgB,CAAC/K,QAASA,KAE/BpE,EAAAA,cAAA,SAAIoE,EAAQgL,MAEhBpP,EAAAA,cAAA,OAAKnB,UAAU,cACdoQ,EACGjP,EAAAA,cAACqO,EAAoB,CAACC,UAAWlK,IAEjCpE,EAAAA,cAAC+J,EAAAA,EAAY,CAAC3F,QAASA,EAASxF,MAAM,a,qEC3B/C,MAAM4J,EAMRA,EAAGC,KAAAA,KAEAzI,EAAAA,cAAA,MAAInB,UAAU,8IACT4J,EAAKtE,KAAKkL,GACPrP,EAAAA,cAAA,MACIsE,IAAM,GAAE+K,EAAI3G,SAAS2G,EAAI7N,OACzB3C,UAAY,wGACRwQ,EAAI1G,OACE,gHACA,0CAGV3I,EAAAA,cAAA,KAAGwB,KAAM6N,EAAI7N,MAAO6N,EAAI3G,Y,sGCHrC,MAAMhG,EAETA,EACAC,QAAAA,EACA2M,KAAAA,EACAzQ,UAAAA,EAAY,+DAEZ,MAAM6B,GAAeC,EAAAA,EAAAA,MACd4O,EAASC,IAActK,EAAAA,EAAAA,UAASuK,EAAAA,GAAAA,QAAiB9M,GAAS+M,SAC3DC,EAAgBjP,EAAakP,gBApB3B,IADSC,EAsBCN,GApBbO,QAAQ,SACRC,eAAeN,EAAAA,GAAAA,cAAsBO,EAAAA,EAAAA,IAAaH,GAAU,KAoB3DN,EAAQQ,eAAeN,EAAAA,GAAAA,uBAvBjC,IAAqBI,EA6BjB,OAJAnK,EAAAA,EAAAA,YAAU,KACN8J,GAAY7J,GAAYA,EAAQsK,cACjC,IAGCjQ,EAAAA,cAAA,QAAM6P,SAAUN,EAAQW,QAASrR,UAAWA,GACvCyQ,EACGtP,EAAAA,cAAA,KAAGwB,KAAM8N,EAAK1M,WAAY/D,UAAU,mBAC/B8Q,GAGLA","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/partials/cohost-corner-content.tsx","webpack:///./preact/components/partials/cohost-corner.tsx","webpack:///./preact/components/partials/suggested-follows.tsx","webpack:///./preact/components/pages/dashboard.tsx","webpack:///./preact/components/pages/follow-requests-context.ts","webpack:///../shared/types/relationships.ts","webpack:///./preact/components/partials/follow-button.tsx","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","webpack:///./preact/components/partials/pagination-eggs.tsx","webpack:///./preact/components/partials/follow-request-buttons.tsx","webpack:///./preact/components/partials/project-card.tsx","webpack:///./preact/components/partials/timeline-switch.tsx","webpack:///./preact/components/unfriendly-timestamp.tsx"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import { PostASTMap } from \"@/shared/types/wire-models\";\nimport React, { FunctionComponent, useMemo } from \"react\";\nimport { useDisplayPrefs } from \"../../hooks/use-display-prefs\";\nimport _ from \"lodash\";\nimport { renderReactFromSpans } from \"@/client/lib/markdown/post-rendering\";\n\ntype CohostCornerContentProps = {\n    readMoreUrl: string;\n    postAst: PostASTMap;\n};\n\nexport const CohostCornerContent: FunctionComponent<\n    CohostCornerContentProps\n> = ({ postAst, readMoreUrl }) => {\n    const displayPrefs = useDisplayPrefs();\n    // render the post above the fold\n    // cohost corner is immune to post ages and cohost plus\n    const renderedAboveFold = useMemo(() => {\n        let spansAboveFold: PostASTMap[\"spans\"];\n\n        if (postAst.readMoreIndex !== null) {\n            spansAboveFold = _.filter(\n                postAst.spans,\n                (span) => span.startIndex < postAst.readMoreIndex!\n            );\n        } else {\n            spansAboveFold = postAst.spans;\n        }\n\n        return renderReactFromSpans(spansAboveFold, {\n            renderingContext: \"post\",\n            disableEmbeds: true,\n            externalLinksInNewTab: displayPrefs.externalLinksInNewTab,\n        });\n    }, [\n        postAst.readMoreIndex,\n        postAst.spans,\n        displayPrefs.externalLinksInNewTab,\n    ]);\n\n    return (\n        <div className={`relative w-full overflow-hidden`}>\n            <div className=\"prose prose-sidebar text-sidebarText\">\n                {renderedAboveFold}\n            </div>\n            {postAst.readMoreIndex !== null ? (\n                <a\n                    className=\"inline-block cursor-pointer text-sm font-bold text-sidebarAccent  hover:underline\"\n                    href={readMoreUrl}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    read more\n                </a>\n            ) : null}\n        </div>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport sitemap from \"@/shared/sitemap\";\nimport { ProjectHandle } from \"@/shared/types/ids\";\nimport React, { FunctionComponent, Suspense } from \"react\";\nimport { CohostEgg } from \"../icons/cohost-egg\";\nimport { UnfriendlyTimestamp } from \"../unfriendly-timestamp\";\nimport { CohostCornerContent } from \"./cohost-corner-content\";\n\nconst useCohostCorner = () =>\n    trpc.posts.getPostsTagged.useQuery(\n        {\n            projectHandle: \"staff\" as ProjectHandle,\n            tagSlug: \"cohost corner\",\n        },\n        {\n            suspense: true,\n            // never refetch this shit\n            refetchInterval: false,\n            refetchOnMount: false,\n            refetchOnReconnect: false,\n            refetchOnWindowFocus: false,\n        }\n    );\n\nconst CohostCornerInner: FunctionComponent = () => {\n    const cohostCorner = useCohostCorner();\n    const cohostCornerPost = cohostCorner.data?.items[0];\n    return cohostCornerPost ? (\n        <>\n            <p>Latest staff post:</p>\n\n            <div className=\"mb-4 flex flex-col\">\n                {cohostCornerPost.headline ? (\n                    <h1 className=\"font-atkinson text-lg font-bold text-sidebarText\">\n                        <a\n                            href={cohostCornerPost.singlePostPageUrl}\n                            className=\"hover:underline\"\n                        >\n                            {cohostCornerPost.headline}\n                        </a>\n                    </h1>\n                ) : null}\n                {cohostCornerPost.publishedAt ? (\n                    <a\n                        href={cohostCornerPost.singlePostPageUrl}\n                        className=\"block flex-none text-sm text-sidebarAccent hover:underline\"\n                    >\n                        <UnfriendlyTimestamp\n                            className=\"text-sidebarAccent\" // actually needs to be included here as well\n                            dateISO={cohostCornerPost.publishedAt}\n                        />\n                    </a>\n                ) : null}\n            </div>\n            <CohostCornerContent\n                readMoreUrl={cohostCornerPost.singlePostPageUrl.toString()}\n                postAst={cohostCornerPost.astMap}\n            />\n        </>\n    ) : (\n        <p>\n            We weren't able to load the cohost corner at this time. You can\n            check out the latest from us at{\" \"}\n            <a\n                href={sitemap.public.project\n                    .mainAppProfile({\n                        projectHandle: \"staff\" as ProjectHandle,\n                    })\n                    .toString()}\n                className=\"font-bold text-sidebarAccent\"\n            >\n                {\n                    sitemap.public.project.mainAppProfile({\n                        projectHandle: \"staff\" as ProjectHandle,\n                    }).hostname\n                }\n            </a>\n        </p>\n    );\n};\n\nexport const CohostCorner: FunctionComponent = () => {\n    return (\n        <section\n            className={`h-fit rounded-lg border border-sidebarAccent bg-sidebarBg p-3 text-sidebarText`}\n        >\n            <div className=\"mb-4 flex flex-row items-center gap-2\">\n                <CohostEgg className=\"inline-block h-6 text-sidebarAccent\" />\n                <h1 className=\"font-league text-xl font-normal uppercase leading-none\">\n                    the cohost corner\n                </h1>\n            </div>\n\n            <p>\n                Curious if something is on our roadmap? Wondering if we know of\n                any workarounds to a bug? Check{\" \"}\n                <a\n                    className=\"cursor-pointer font-bold text-sidebarAccent hover:underline\"\n                    href=\"https://help.antisoftware.club/support/discussions/forums/62000112866/recent\"\n                >\n                    the bug tracker.\n                </a>{\" \"}\n                Want a new feature? Upvote an existing suggestion or add your\n                own on{\" \"}\n                <a\n                    className=\"cursor-pointer font-bold text-sidebarAccent hover:underline\"\n                    href=\"https://help.antisoftware.club/support/discussions/forums/62000112864/popular\"\n                >\n                    the feature request forum.\n                </a>\n            </p>\n\n            <hr className=\"my-2 text-sidebarAccent\" />\n\n            <Suspense fallback={<p>loading...</p>}>\n                <CohostCornerInner />\n            </Suspense>\n        </section>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport sitemap from \"@/shared/sitemap\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent, useCallback } from \"react\";\nimport { ProjectCard } from \"./project-card\";\nimport { useDisplayPrefs } from \"../../hooks/use-display-prefs\";\n\ntype SuggestedFollows = {\n    noPosts: boolean;\n    staffProjects: WireProjectModel[];\n};\n\nexport const SuggestedFollows: FunctionComponent<SuggestedFollows> = ({\n    noPosts,\n    staffProjects,\n}) => {\n    const displayPrefs = useDisplayPrefs();\n    const utils = trpc.useContext();\n\n    const userSettingsMutation = trpc.login.userSettings.useMutation();\n    const dismissSuggestedFollows = useCallback(async () => {\n        try {\n            await userSettingsMutation.mutateAsync({\n                ...displayPrefs,\n                suggestedFollowsDismissed: true,\n            });\n            await utils.users.displayPrefs.invalidate();\n        } catch (e) {\n            console.error(e);\n        }\n    }, [displayPrefs, utils, userSettingsMutation]);\n\n    return displayPrefs.suggestedFollowsDismissed ? null : (\n        <div className=\"grid gap-x-6 gap-y-2 lg:grid-cols-[4rem_1fr]\">\n            <div className=\"flex-0 h-16 w-16\" />\n            <div className=\"cohost-shadow-light dark:cohost-shadow-dark w-full overflow-x-auto rounded-lg bg-notWhite text-notBlack lg:max-w-prose\">\n                <div className=\" bg-mango-100 p-3\">\n                    <h1 className=\"text-2xl font-bold\">\n                        {noPosts\n                            ? \"No posts here yet!\"\n                            : \"Looking for more posts?\"}\n                    </h1>\n                    <p className=\"prose\">\n                        If you're looking for some pages to follow, new users\n                        make introductory posts in the{\" \"}\n                        <a\n                            href={sitemap.public\n                                .tags({\n                                    tagSlug: \"welcome to cohost\",\n                                })\n                                .toString()}\n                        >\n                            #welcome to cohost\n                        </a>{\" \"}\n                        tag. You're encouraged to post an introduction there\n                        yourself! You can also use{\" \"}\n                        <a href={sitemap.public.search().toString()}>search</a>{\" \"}\n                        to find people through tags that interest you and locate\n                        people that you know on other sites. We also recommend\n                        the hardworking people who make cohost:\n                    </p>\n                </div>\n                <div className=\"flex flex-col gap-y-3 p-3\">\n                    {staffProjects.map((project) => (\n                        <ProjectCard\n                            key={project.projectId}\n                            project={project}\n                        />\n                    ))}\n                </div>\n                <div className=\"flex flex-row items-center justify-center self-stretch pb-3\">\n                    <button\n                        className={`flex h-10 cursor-pointer items-center rounded-lg bg-foreground px-3 py-2\n                                leading-none tracking-wider text-text hover:bg-foreground-600 active:bg-foreground-600 disabled:bg-foreground-200`}\n                        onClick={() => dismissSuggestedFollows()}\n                        type=\"button\"\n                    >\n                        dismiss\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { useModalPostComposer } from \"@/client/preact/components/modal-post-composer-context\";\nimport { PostPreview } from \"@/client/preact/components/posts/post-preview\";\nimport { SidebarMenu } from \"@/client/preact/components/sidebar-menu\";\nimport { useUserInfo } from \"@/client/preact/providers/user-info-provider\";\nimport sitemap from \"@/shared/sitemap\";\nimport { PostId } from \"@/shared/types/ids\";\nimport { DashboardWireFormat } from \"@/shared/types/live-dashboard\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport { WirePostViewModel } from \"@/shared/types/wire-models\";\nimport React, {\n    FunctionComponent,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport RenderIfVisible from \"react-render-if-visible\";\nimport { useDisplayPrefs } from \"../../hooks/use-display-prefs\";\nimport { TextEgg } from \"../icons/text-egg\";\nimport { CohostCorner } from \"../partials/cohost-corner\";\nimport { PaginationEggs } from \"../partials/pagination-eggs\";\nimport { SuggestedFollows } from \"../partials/suggested-follows\";\nimport { TimelineSwitch } from \"../partials/timeline-switch\";\n\nexport interface DashboardProps {\n    posts: WirePostViewModel[];\n    project: WireProjectModel;\n    staffProjects: WireProjectModel[];\n    refTimestamp: number;\n}\n\nconst ENDPOINT = \"/rc/dashboard/event-stream\";\n\ntype PostDisplayData = {\n    post: WirePostViewModel;\n    displayed: boolean;\n};\n\nexport const Dashboard: FunctionComponent<DashboardProps> = ({\n    posts: initialPosts,\n    staffProjects,\n    project,\n    refTimestamp,\n}) => {\n    const displayPrefs = useDisplayPrefs();\n    const userInfo = useUserInfo();\n\n    const [hiddenPostCountButton, setHiddenPostCountButton] =\n        useState<HTMLElement | null>(null);\n\n    const [posts, setPosts] = useState(\n        new Map<PostId, PostDisplayData>(\n            initialPosts.map((post) => [post.postId, { post, displayed: true }])\n        )\n    );\n    const eventSource = useRef<EventSource>();\n\n    useEffect(() => {\n        eventSource.current = new EventSource(ENDPOINT);\n    }, []);\n\n    const oldestPostTimestamp = useMemo(\n        () =>\n            [...posts.values()].reduce((accum, pdd) => {\n                if (!pdd.post.publishedAt) return accum;\n\n                const thisPDDTimestamp = new Date(\n                    pdd.post.publishedAt\n                ).getTime();\n\n                return thisPDDTimestamp < accum ? thisPDDTimestamp : accum;\n            }, Date.now()),\n        [posts]\n    );\n\n    const addPost = useCallback(\n        (postData: WirePostViewModel) => {\n            if (!postData.publishedAt) return;\n\n            // we get add-post notifications for edits of posts on the TL\n            // regardless of when they were originally posted; to reduce the\n            // ghost post issue, silently drop add-post notifications if the\n            // post is older than the oldest visible post\n            if (\n                new Date(postData.publishedAt).getTime() < oldestPostTimestamp\n            ) {\n                return;\n            }\n\n            const existingPDD = posts.get(postData.postId);\n\n            setPosts(\n                new Map(\n                    posts.set(postData.postId, {\n                        post: postData,\n                        displayed: existingPDD ? existingPDD.displayed : false,\n                    })\n                )\n            );\n        },\n        [posts, setPosts, oldestPostTimestamp]\n    );\n\n    const removePost = useCallback(\n        (postId: PostId) => {\n            setPosts((posts) => {\n                if (!posts.delete(postId)) {\n                    console.warn(`couldn't find post ${postId} to delete`);\n                }\n\n                return new Map(posts);\n            });\n        },\n        [setPosts]\n    );\n\n    const handleShowPostsClicked = () => {\n        const newPosts: Map<PostId, PostDisplayData> = new Map();\n\n        for (const pdd of posts.values()) {\n            newPosts.set(pdd.post.postId, { post: pdd.post, displayed: true });\n        }\n\n        setPosts(newPosts);\n    };\n\n    const postTimeline = useMemo(\n        () =>\n            [...posts.values()]\n                .filter((pdd) => pdd.displayed)\n                .sort(\n                    (pdd1, pdd2) =>\n                        new Date(pdd2.post.publishedAt ?? 0).getTime() -\n                        new Date(pdd1.post.publishedAt ?? 0).getTime()\n                )\n                .map((pdd) => pdd.post),\n        [posts]\n    );\n\n    const hiddenPostCount = useMemo(\n        () => [...posts.values()].filter((pdd) => !pdd.displayed).length,\n        [posts]\n    );\n\n    const handleMessage = useCallback(\n        (e: MessageEvent<string>) => {\n            const data = JSON.parse(e.data) as DashboardWireFormat;\n\n            if (data.clear) {\n                setPosts(new Map());\n            }\n\n            for (const postData of data.add) {\n                addPost(postData);\n            }\n\n            for (const postId of data.remove) {\n                removePost(postId);\n            }\n        },\n        [addPost, removePost]\n    );\n\n    useEffect(() => {\n        eventSource.current?.addEventListener(\"message\", handleMessage);\n\n        return () =>\n            eventSource.current?.removeEventListener(\"message\", handleMessage);\n    }, [handleMessage]);\n\n    const modalPostComposer = useModalPostComposer();\n    useEffect(() => {\n        modalPostComposer.setup({\n            project,\n        });\n    }, [modalPostComposer, project]);\n\n    useEffect(() => {\n        // maintain relative scroll position when the \"load post\" button is added\n        const hiddenPostCountHeight = hiddenPostCountButton?.offsetHeight ?? 0;\n\n        window.scrollBy(0, -hiddenPostCountHeight);\n    }, [hiddenPostCountButton?.offsetHeight]);\n\n    return (\n        <>\n            <Helmet title=\"home\" />\n            <main className=\"w-full lg:pt-16\">\n                <div className=\"container mx-auto grid grid-cols-1 gap-16 lg:grid-cols-4\">\n                    <SidebarMenu />\n                    <section\n                        id=\"live-dashboard\"\n                        data-endpoint={ENDPOINT}\n                        className=\"col-span-1 flex flex-col lg:col-span-2\"\n                    >\n                        <div className=\"mb-2 flex flex-row items-center\">\n                            {/* avatar spacer on desktop */}\n                            <span className=\"hidden w-[5.5em] lg:block\" />\n                            <TimelineSwitch\n                                tabs={[\n                                    {\n                                        label: \"latest posts\",\n                                        href: sitemap.public\n                                            .dashboard()\n                                            .toString(),\n                                        active: true,\n                                    },\n                                    {\n                                        label: \"bookmarked tags\",\n                                        href: sitemap.public\n                                            .bookmarkedTagFeed()\n                                            .toString(),\n                                    },\n                                ]}\n                            />\n                        </div>\n\n                        <div className=\"flex flex-col gap-12\">\n                            {hiddenPostCount > 0 ? (\n                                <button\n                                    className=\"cohost-shadow-light flex w-full flex-row items-center rounded-lg bg-longan-300 p-3 text-notBlack\"\n                                    onClick={handleShowPostsClicked}\n                                    ref={setHiddenPostCountButton}\n                                >\n                                    <TextEgg className=\"mr-3 w-10 fill-cherry text-notWhite\">\n                                        {hiddenPostCount}\n                                    </TextEgg>\n                                    new posts! click here to view them.\n                                </button>\n                            ) : null}\n\n                            {postTimeline.length\n                                ? postTimeline.map((post, index) => (\n                                      <RenderIfVisible\n                                          key={post.postId}\n                                          initialVisible={index < 4}\n                                          stayRendered={true}\n                                      >\n                                          <PostPreview\n                                              viewModel={post}\n                                              highlightedTags={[]}\n                                              displayPrefs={displayPrefs}\n                                          />\n                                      </RenderIfVisible>\n                                  ))\n                                : null}\n                            {!displayPrefs.suggestedFollowsDismissed ? (\n                                <SuggestedFollows\n                                    noPosts={!postTimeline.length}\n                                    staffProjects={staffProjects}\n                                />\n                            ) : null}\n                            <PaginationEggs\n                                backLink={undefined}\n                                forwardLink={sitemap.public\n                                    .dashboard({ refTimestamp, skipPosts: 0 })\n                                    .toString()}\n                            />\n                        </div>\n                    </section>\n                    <CohostCorner />\n                </div>\n            </main>\n        </>\n    );\n};\n\nDashboard.displayName = \"dashboard\";\nexport default Dashboard;\n","import { ProjectId } from \"@/shared/types/ids\";\nimport { createContext } from \"react\";\n\nexport type Actions = \"accept\" | \"decline\";\nexport type OnAction = (projectId: ProjectId, action: Actions) => void;\n\nexport const FollowRequestsContext = createContext<{\n    onAction: OnAction;\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n}>({ onAction: () => {} });\n","import { z } from \"zod\";\n\n// actual values don't matter, but higher-numbered following states cover up\n// lower-numbered ones\nexport enum FollowingState {\n    NotFollowing = 0,\n    FollowRequested = 1,\n    Following = 2,\n}\n\nexport const FollowingStateEnum = z.nativeEnum(FollowingState);\nexport type FollowingStateEnum = z.infer<typeof FollowingStateEnum>;\n","import { trpc } from \"@/client/lib/trpc\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { ProjectPrivacy } from \"@/shared/types/projects\";\nimport {\n    FollowingState,\n    FollowingStateEnum,\n} from \"@/shared/types/relationships\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport { UseTRPCMutationOptions } from \"@trpc/react-query/dist/shared\";\nimport React, {\n    FunctionComponent,\n    Suspense,\n    useCallback,\n    useState,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport {\n    Button,\n    SharedProps as ButtonProps,\n    LinkButton,\n} from \"../elements/button\";\nimport sitemap from \"@/shared/sitemap\";\nimport { useReqMutableStore } from \"../../providers/req-mutable-store\";\nimport { SimpleModalDialog } from \"@/client/preact/components/elements/simple-modal-dialog\";\n\ntype FollowButtonProps = {\n    project: WireProjectModel;\n    onFollow?: (newFollowingState: FollowingState) => void;\n    color: ButtonProps[\"color\"];\n};\n\nexport const FollowButton: FunctionComponent<FollowButtonProps> = (props) => {\n    return (\n        <Suspense>\n            <FollowButtonInner {...props} />\n        </Suspense>\n    );\n};\n\nconst FollowButtonInner: FunctionComponent<FollowButtonProps> = ({\n    project,\n    onFollow,\n    color,\n}) => {\n    const userInfo = useUserInfo();\n    const utils = trpc.useContext();\n    const followingStateQuery = trpc.projects.followingState.useQuery(\n        { projectHandle: project.handle },\n        { suspense: true }\n    );\n    const reqStore = useReqMutableStore();\n    const ssrUrl = reqStore.get(\"ssrUrl\");\n\n    // big ol boilerplate to generate the optimistic update callbacks. this can\n    // _probably_ be cleaned up somewhat, but doing so would require a bunch of\n    // type finangaling that likely isn't worth doing in a component we never\n    // actually touch.\n    const createMutationCallbacks = useCallback(\n        (\n            optimisticState: FollowingState\n        ): UseTRPCMutationOptions<\n            {\n                fromProjectId: ProjectId;\n                toProjectId: ProjectId;\n            },\n            unknown,\n            {\n                followingState: FollowingStateEnum;\n            },\n            {\n                previousState?: {\n                    readerToProject: FollowingState;\n                };\n            }\n        > => {\n            return {\n                onMutate: async () => {\n                    // cancel any pending requests so they don't overwrite our\n                    // optimistic update\n                    await utils.projects.followingState.cancel({\n                        projectHandle: project.handle,\n                    });\n\n                    // snapshot the previous value\n                    const previousState = utils.projects.followingState.getData(\n                        {\n                            projectHandle: project.handle,\n                        }\n                    );\n\n                    // optimistic update\n                    // cancel follow request -> not following\n                    utils.projects.followingState.setData(\n                        { projectHandle: project.handle },\n                        {\n                            readerToProject: optimisticState,\n                        }\n                    );\n\n                    return { previousState };\n                },\n                onError: (err, params, context) => {\n                    // mutation failed, reset back to the previous state\n                    utils.projects.followingState.setData(\n                        { projectHandle: project.handle },\n                        context?.previousState\n                    );\n                },\n                onSettled: async () => {\n                    // refetch so we know we're For Sure accurate\n                    await utils.projects.followingState.invalidate({\n                        projectHandle: project.handle,\n                    });\n                },\n                onSuccess: (result) => {\n                    if (onFollow) {\n                        onFollow(result.followingState);\n                    }\n                },\n            };\n        },\n        [onFollow, project.handle, utils.projects.followingState]\n    );\n\n    const followRequestMutation =\n        trpc.relationships.createFollowRequest.useMutation({\n            ...createMutationCallbacks(\n                project.privacy === ProjectPrivacy.Private\n                    ? FollowingState.FollowRequested\n                    : FollowingState.Following\n            ),\n        });\n    const unfollowMutation = trpc.relationships.unfollow.useMutation({\n        ...createMutationCallbacks(FollowingState.NotFollowing),\n    });\n    const cancelFollowRequestMutation =\n        trpc.relationships.declineOrCancelFollowRequest.useMutation({\n            ...createMutationCallbacks(FollowingState.NotFollowing),\n        });\n\n    const { t } = useTranslation();\n    const followingState = followingStateQuery.data?.readerToProject ?? null;\n\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n\n    const onClickFollow = useCallback(async () => {\n        if (!userInfo.projectId) return;\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        switch (followingState) {\n            case FollowingState.FollowRequested:\n                // pending request; cancel follow request\n                await cancelFollowRequestMutation.mutateAsync(mutateArgs);\n                break;\n            case FollowingState.NotFollowing:\n                // not following; follow\n                await followRequestMutation.mutateAsync(mutateArgs);\n                break;\n            case FollowingState.Following:\n                // following; unfollow.  this causes a confirmation dialog box.\n                setIsConfirmOpen(true);\n                break;\n            case null:\n                // following state is only null when we don't know what we're\n                // doing or user is logged out. just exit out.\n                return;\n        }\n    }, [\n        cancelFollowRequestMutation,\n        followRequestMutation,\n        followingState,\n        project.projectId,\n        userInfo.projectId,\n    ]);\n\n    const onConfirmUnfollow = useCallback(async () => {\n        if (!userInfo.projectId) return;\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        await unfollowMutation.mutateAsync(mutateArgs);\n        setIsConfirmOpen(false);\n    }, [project.projectId, userInfo.projectId, unfollowMutation]);\n\n    let followButtonText = \"unknown\";\n\n    if (!userInfo.loggedIn) {\n        followButtonText = t(\"common:login\");\n    } else if (followingState === FollowingState.Following) {\n        followButtonText = t(\"client:page.unfollow-button\", \"unfollow\");\n    } else if (followingState === FollowingState.NotFollowing) {\n        if (project.privacy === ProjectPrivacy.Private) {\n            followButtonText = t(\n                \"client:page.follow-request-button\",\n                \"send follow request\"\n            );\n        } else {\n            followButtonText = t(\"client:page.follow-button\", \"follow\");\n        }\n    } else if (followingState === FollowingState.FollowRequested) {\n        followButtonText = t(\n            \"client:page.cancel-follow-request-button\",\n            \"cancel follow request\"\n        );\n    } else {\n        return null;\n    }\n\n    if (!userInfo.loggedIn) {\n        return (\n            <LinkButton\n                buttonStyle=\"pill\"\n                color={color}\n                href={sitemap.public.login({ originalUrl: ssrUrl }).toString()}\n            >\n                {followButtonText}\n            </LinkButton>\n        );\n    }\n\n    return (\n        <>\n            <SimpleModalDialog\n                isOpen={isConfirmOpen}\n                title={t(\n                    \"client:unfollow-page.confirm-title\",\n                    \"Unfollow this page?\"\n                )}\n                body={t(\n                    \"client:unfollow-page.confirm-body\",\n                    \"Are you sure you want to unfollow this page?\"\n                )}\n                confirm={{ label: t(\"common:unfollow\", \"unfollow\") }}\n                cancel={{ label: t(\"common:cancel\", \"cancel\") }}\n                onConfirm={onConfirmUnfollow}\n                onCancel={() => setIsConfirmOpen(false)}\n            />\n            <Button buttonStyle=\"pill\" color={color} onClick={onClickFollow}>\n                {followButtonText}\n            </Button>\n        </>\n    );\n};\n","import * as React from \"react\";\n\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 4.5l7.5 7.5-7.5 7.5\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import { ChevronRightIcon } from \"@heroicons/react/24/outline\";\nimport classNames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { IconEgg } from \"../icons/text-egg\";\n\nexport interface PaginationEggProps {\n    backLink: string | undefined;\n    forwardLink: string | undefined;\n    condensed?: boolean | undefined;\n    backOnClick?: React.MouseEventHandler | undefined;\n    forwardOnClick?: React.MouseEventHandler | undefined;\n}\n\nconst paginationEggStyles = classNames(\n    \"h-8\",\n    \"pr-3\",\n    \"fill-secondary\",\n    \"text-notWhite\",\n    \"cohost-shadow-light\",\n    \"dark:cohost-shadow-dark\",\n    \"dark:text-notBlack\"\n);\n\nexport const PaginationEggs: FunctionComponent<PaginationEggProps> = ({\n    backLink,\n    forwardLink,\n    condensed = false,\n    backOnClick,\n    forwardOnClick,\n}) => {\n    return (\n        <div className=\"mb-12 flex flex-row gap-x-6\">\n            {/* to take up the space occupied by the avatar column */}\n            {!condensed ? (\n                <span className=\"hidden w-16 lg:block\">&nbsp;</span>\n            ) : null}\n            {backLink ? (\n                <a href={backLink} onClick={backOnClick}>\n                    <IconEgg className={`${paginationEggStyles} scale-x-[-1]`}>\n                        <ChevronRightIcon />\n                    </IconEgg>\n                </a>\n            ) : null}\n            <span className=\"flex-grow\">&nbsp;</span>\n            {forwardLink ? (\n                <a href={forwardLink} onClick={forwardOnClick}>\n                    <IconEgg className={paginationEggStyles}>\n                        <ChevronRightIcon />\n                    </IconEgg>\n                </a>\n            ) : null}\n        </div>\n    );\n};\n\nexport default PaginationEggs;\n","import { trpc } from \"@/client/lib/trpc\";\nimport {\n    type Actions,\n    FollowRequestsContext,\n} from \"@/client/preact/components/pages/follow-requests-context\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent, useCallback, useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport { Button } from \"../elements/button\";\n\ntype FollowRequestButtonsProps = {\n    requester: WireProjectModel;\n};\n\nexport const FollowRequestButtons: FunctionComponent<\n    FollowRequestButtonsProps\n> = ({ requester }) => {\n    const { t } = useTranslation();\n    const userInfo = useUserInfo();\n    const { onAction } = useContext(FollowRequestsContext);\n    const utils = trpc.useContext();\n\n    const createRequestMutationArgs = (action: Actions) => {\n        return {\n            onSettled: async () => {\n                onAction(requester.projectId, action);\n                await utils.relationships.countFollowRequests.invalidate();\n                await utils.posts.profilePosts.invalidate();\n            },\n        };\n    };\n\n    const acceptRequestMutation =\n        trpc.relationships.acceptFollowRequest.useMutation(\n            createRequestMutationArgs(\"accept\")\n        );\n    const onClickAccept = useCallback(async () => {\n        if (!userInfo.projectId) return;\n\n        await acceptRequestMutation.mutateAsync({\n            fromProjectId: requester.projectId,\n            toProjectId: userInfo.projectId,\n        });\n    }, [acceptRequestMutation, requester.projectId, userInfo.projectId]);\n\n    const declineRequestMutation =\n        trpc.relationships.declineOrCancelFollowRequest.useMutation(\n            createRequestMutationArgs(\"decline\")\n        );\n\n    const onClickDecline = useCallback(async () => {\n        if (!userInfo.projectId) return;\n\n        await declineRequestMutation.mutateAsync({\n            fromProjectId: requester.projectId,\n            toProjectId: userInfo.projectId,\n        });\n    }, [declineRequestMutation, requester.projectId, userInfo.projectId]);\n\n    return (\n        <div className=\"flex flex-row justify-center gap-2\">\n            <Button buttonStyle=\"pill\" color=\"green\" onClick={onClickAccept}>\n                {t(\n                    \"server:relationships.accept-follow-request-button-text-short\",\n                    \"accept\"\n                )}\n            </Button>\n            <Button buttonStyle=\"pill\" color=\"red\" onClick={onClickDecline}>\n                {t(\n                    \"server:relationships.decline-follow-request-button-text-short\",\n                    \"decline\"\n                )}\n            </Button>\n        </div>\n    );\n};\n","import { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent } from \"react\";\nimport { ProjectReference } from \"../project-reference\";\nimport { FollowButton } from \"./follow-button\";\nimport { FollowRequestButtons } from \"./follow-request-buttons\";\nimport { ProjectAvatar } from \"./project-avatar\";\n\ntype ProjectCardProps = {\n    project: WireProjectModel;\n    isFollowRequest?: boolean;\n};\n\nexport const ProjectCard: FunctionComponent<ProjectCardProps> = ({\n    project,\n    isFollowRequest = false,\n}) => {\n    return (\n        <div className=\"flex flex-row items-center gap-1\">\n            <ProjectAvatar project={project} />\n            <div className=\"min-w-0 flex-shrink justify-center gap-0 lg:flex-row\">\n                <div className=\"items-left flex flex-shrink flex-row gap-1 lg:flex-col\">\n                    <ProjectReference project={project} />\n                </div>\n                <p>{project.dek}</p>\n            </div>\n            <div className=\"flex-grow\" />\n            {isFollowRequest ? (\n                <FollowRequestButtons requester={project} />\n            ) : (\n                <FollowButton project={project} color=\"cherry\" />\n            )}\n        </div>\n    );\n};\n","import React, { FunctionComponent } from \"react\";\n\nexport const TimelineSwitch: FunctionComponent<{\n    tabs: {\n        label: string;\n        href: string;\n        active?: boolean;\n    }[];\n}> = ({ tabs }) => {\n    return (\n        <ul className=\"flex w-full flex-row items-center justify-evenly overflow-y-auto whitespace-nowrap bg-foreground-800 text-notWhite lg:w-auto lg:rounded-lg\">\n            {tabs.map((tab) => (\n                <li\n                    key={`${tab.label}-${tab.href}`}\n                    className={`flex-grow px-10 py-2 text-center text-sm lg:first-of-type:rounded-l-lg lg:last-of-type:rounded-r-lg ${\n                        tab.active\n                            ? \"rounded-b-lg bg-foreground font-bold first-of-type:rounded-bl-none last-of-type:rounded-br-none lg:rounded-lg\"\n                            : \"bg-foreground-800 text-foreground-200\"\n                    }`}\n                >\n                    <a href={tab.href}>{tab.label}</a>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport const MultiSwitchButton: FunctionComponent<{\n    tabs: {\n        label: string;\n        onClick: () => void;\n        active?: boolean;\n    }[];\n}> = ({ tabs }) => {\n    return (\n        <ul className=\"flex w-full flex-row items-center justify-evenly overflow-y-auto whitespace-nowrap bg-foreground-800 text-notWhite lg:w-auto lg:rounded-lg\">\n            {tabs.map((tab) => (\n                <li\n                    key={`${tab.label}`}\n                    className={`flex-grow px-10 py-2 text-center text-sm lg:first-of-type:rounded-l-lg lg:last-of-type:rounded-r-lg ${\n                        tab.active\n                            ? \"rounded-b-lg bg-foreground font-bold first-of-type:rounded-bl-none last-of-type:rounded-br-none lg:rounded-lg\"\n                            : \"bg-foreground-800 text-foreground-200\"\n                    }`}\n                >\n                    <button onClick={tab.onClick}>{tab.label}</button>\n                </li>\n            ))}\n        </ul>\n    );\n};\n","import { fromDateTime } from \"@/client/lib/beats\";\nimport { DateTime } from \"luxon\";\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { useDisplayPrefs } from \"../hooks/use-display-prefs\";\n\nfunction beatsFormat(dateTime: DateTime): string {\n    return `${dateTime\n        .setZone(\"UTC+1\")\n        .toLocaleString(DateTime.DATE_MED)} ${fromDateTime(dateTime, true)}`;\n}\n\nexport interface UnfriendlyTimestampProps {\n    dateISO: string;\n    link?: URL;\n    className?: string;\n}\n\nexport const UnfriendlyTimestamp: FunctionComponent<\n    UnfriendlyTimestampProps\n> = ({\n    dateISO,\n    link,\n    className = \"block flex-none text-sm text-gray-500 dark:text-gray-300\",\n}) => {\n    const displayPrefs = useDisplayPrefs();\n    const [luxonDT, setLuxonDT] = useState(DateTime.fromISO(dateISO).toUTC());\n    const timestampText = displayPrefs.beatsTimestamps\n        ? beatsFormat(luxonDT)\n        : luxonDT.toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY);\n\n    useEffect(() => {\n        setLuxonDT((current) => current.toLocal());\n    }, []);\n\n    return (\n        <time dateTime={luxonDT.toISO()} className={className}>\n            {link ? (\n                <a href={link.toString()} className=\"hover:underline\">\n                    {timestampText}\n                </a>\n            ) : (\n                timestampText\n            )}\n        </time>\n    );\n};\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","CohostCornerContent","postAst","readMoreUrl","displayPrefs","useDisplayPrefs","renderedAboveFold","useMemo","spansAboveFold","readMoreIndex","_","spans","span","startIndex","renderReactFromSpans","renderingContext","disableEmbeds","externalLinksInNewTab","href","target","rel","CohostCornerInner","cohostCornerPost","trpc","projectHandle","tagSlug","suspense","refetchInterval","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","data","items","headline","singlePostPageUrl","publishedAt","UnfriendlyTimestamp","dateISO","toString","astMap","sitemap","hostname","CohostCorner","CohostEgg","Suspense","fallback","SuggestedFollows","noPosts","staffProjects","utils","userSettingsMutation","dismissSuggestedFollows","useCallback","async","mutateAsync","suggestedFollowsDismissed","users","invalidate","e","console","error","map","project","ProjectCard","key","projectId","onClick","type","ENDPOINT","Dashboard","posts","initialPosts","refTimestamp","hiddenPostCountButton","setHiddenPostCountButton","useUserInfo","useState","setPosts","Map","post","postId","displayed","eventSource","useRef","useEffect","current","EventSource","oldestPostTimestamp","values","reduce","accum","pdd","thisPDDTimestamp","Date","getTime","now","addPost","postData","existingPDD","get","set","removePost","delete","warn","postTimeline","filter","sort","pdd1","pdd2","hiddenPostCount","length","handleMessage","JSON","parse","clear","add","remove","addEventListener","removeEventListener","modalPostComposer","useModalPostComposer","setup","hiddenPostCountHeight","offsetHeight","window","scrollBy","Helmet","title","SidebarMenu","id","TimelineSwitch","tabs","label","active","handleShowPostsClicked","newPosts","TextEgg","index","RenderIfVisible","initialVisible","stayRendered","PostPreview","viewModel","highlightedTags","PaginationEggs","backLink","undefined","forwardLink","skipPosts","FollowRequestsContext","createContext","onAction","FollowingState","FollowButton","FollowButtonInner","onFollow","userInfo","followingStateQuery","handle","ssrUrl","useReqMutableStore","createMutationCallbacks","optimisticState","onMutate","projects","followingState","cancel","previousState","getData","setData","readerToProject","onError","err","params","context","onSettled","onSuccess","result","followRequestMutation","privacy","ProjectPrivacy","FollowRequested","Following","unfollowMutation","NotFollowing","cancelFollowRequestMutation","t","useTranslation","isConfirmOpen","setIsConfirmOpen","onClickFollow","mutateArgs","fromProjectId","toProjectId","onConfirmUnfollow","followButtonText","loggedIn","SimpleModalDialog","isOpen","body","confirm","onConfirm","onCancel","originalUrl","titleId","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","paginationEggStyles","classNames","condensed","backOnClick","forwardOnClick","IconEgg","ChevronRightIcon","FollowRequestButtons","requester","useContext","createRequestMutationArgs","action","relationships","countFollowRequests","profilePosts","acceptRequestMutation","onClickAccept","declineRequestMutation","onClickDecline","isFollowRequest","ProjectAvatar","ProjectReference","dek","tab","link","luxonDT","setLuxonDT","DateTime","toUTC","timestampText","beatsTimestamps","dateTime","setZone","toLocaleString","fromDateTime","toLocal","toISO"],"sourceRoot":""}