{"version":3,"file":"client-preact-components-pages-moderation-manage-artist-alley-listing.fd03d508a65201bae50b.js","mappings":"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","sources":["webpack:///./preact/components/artist-alley/artist-alley-filter-provider.tsx","webpack:///./preact/components/artist-alley/artist-alley-listing.tsx","webpack:///./preact/components/elements/styled-input.tsx","webpack:///./preact/components/elements/token-multi-select.tsx","webpack:///./preact/components/pages/moderation/manage-artist-alley-listing.tsx"],"sourcesContent":["import { CategoryMatch, SortOrder } from \"@/shared/api-types/artist-alley-v1\";\nimport { ArtistAlleyAdultDisplayMode } from \"@/shared/types/artist-alley\";\nimport React, { useContext } from \"react\";\n\nexport const ArtistAlleyFilterProvider = React.createContext<{\n    adultFilterMode: ArtistAlleyAdultDisplayMode;\n    isAdult: boolean;\n    categories: Set<string>;\n    setAdultFilterMode: (mode: ArtistAlleyAdultDisplayMode) => void;\n    categoryMatch: CategoryMatch;\n    setCategoryMatch: (mode: CategoryMatch) => void;\n    sortOrder: SortOrder;\n    setSortOrder: (order: SortOrder) => void;\n}>({\n    adultFilterMode: \"hide\",\n    isAdult: false,\n    categories: new Set(),\n    setAdultFilterMode: () => {},\n    categoryMatch: \"any\",\n    setCategoryMatch: () => {},\n    sortOrder: \"random\",\n    setSortOrder: () => {},\n});\n\nexport const useArtistAlleyFilters = () => {\n    return useContext(ArtistAlleyFilterProvider);\n};\n","import { renderMarkdownReactNoHTML } from \"@/client/lib/markdown/other-rendering\";\nimport { tw } from \"@/client/lib/tw-tagged-literal\";\nimport sitemap from \"@/shared/sitemap\";\nimport {\n    ArtistAlleyWireAttachment,\n    WireArtistAlley,\n} from \"@/shared/types/artist-alley\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { useContext, useMemo, useState } from \"react\";\nimport { useDynamicTheme } from \"../../hooks/dynamic-theme\";\nimport { useDisplayPrefs } from \"../../hooks/use-display-prefs\";\nimport { useImageOptimizer } from \"../../hooks/use-image-optimizer\";\nimport { BasicButton } from \"../elements/basic-button\";\nimport { PlayPauseButton } from \"../elements/play-pause-button\";\nimport { ProjectAvatar } from \"../partials/project-avatar\";\nimport { useArtistAlleyFilters } from \"./artist-alley-filter-provider\";\nimport { Menu } from \"@headlessui/react\";\nimport {\n    EyeIcon as EyeIconOutline,\n    EyeSlashIcon as EyeSlashIconOutline,\n    ShareIcon,\n    ShieldExclamationIcon as ShieldExclamationIconOutline,\n    TrashIcon as TrashIconOutline,\n} from \"@heroicons/react/24/outline\";\nimport {\n    ArrowUturnLeftIcon,\n    EllipsisHorizontalIcon,\n} from \"@heroicons/react/24/solid\";\nimport { MeatballMenuItem } from \"../elements/meatball-menu-item\";\nimport { ReportingUIContext } from \"@/client/reporting/machine\";\n\nconst ASPECT_RATIO = 300 / 250;\n\nconst ArtistAlleyAttachment: React.FC<{\n    attachment: ArtistAlleyWireAttachment;\n}> = ({ attachment }) => {\n    const displayPrefs = useDisplayPrefs();\n    const [src, setSrc] = useState(\n        displayPrefs.gifsStartPaused\n            ? attachment.previewURL\n            : attachment.fileURL\n    );\n    const [isPlaying, setIsPlaying] = useState(!displayPrefs.gifsStartPaused);\n\n    const srcWithDpr = useImageOptimizer(src, 300, ASPECT_RATIO);\n\n    const handlePause = () => {\n        setIsPlaying(false);\n        setSrc(attachment.previewURL);\n    };\n\n    const handlePlay = () => {\n        setIsPlaying(true);\n        setSrc(attachment.fileURL);\n    };\n\n    return (\n        <div className=\"group relative\">\n            <img\n                src={srcWithDpr(1)}\n                srcSet={`\n                ${srcWithDpr(1)} 1x,\n                ${srcWithDpr(2)} 2x,\n                ${srcWithDpr(3)} 3x,\n            `}\n                alt={attachment.altText}\n                className=\"co-border aspect-[300/250] w-full border-b object-cover\"\n            />\n\n            {attachment.previewURL !== attachment.fileURL && (\n                <PlayPauseButton\n                    isPlaying={isPlaying}\n                    showPlay={attachment.previewURL !== attachment.fileURL}\n                    extraClasses=\"absolute bottom-3 right-3 w-12\"\n                    onPlay={handlePlay}\n                    onPause={handlePause}\n                />\n            )}\n        </div>\n    );\n};\n\nconst ArtistAlleyMeatballMenu: React.FC<{ listing: WireArtistAlley }> = ({\n    listing,\n}) => {\n    const reportingUIContext = useContext(ReportingUIContext);\n\n    return (\n        // explicit height is required to vertically align the\n        // meatballs with the rest of the action buttons\n        <Menu as=\"div\" className=\"relative h-6\">\n            <Menu.Button className=\"co-action-button cursor-pointer text-sm font-bold hover:underline\">\n                <EllipsisHorizontalIcon className=\"h-6 w-6 transition-transform ui-open:rotate-90\" />\n            </Menu.Button>\n\n            <Menu.Items className=\"co-meatball-items absolute right-0 top-8 z-30 flex min-w-max flex-col divide-y rounded-lg p-3  focus:!outline-none\">\n                <Menu.Item>\n                    <MeatballMenuItem\n                        disabled={false}\n                        onClick={() => {\n                            reportingUIContext.send({\n                                type: \"START_REPORT\",\n                                artistAlleyListingId: listing.id,\n                            });\n                        }}\n                        ItemIcon={ShieldExclamationIconOutline}\n                        text=\"report\"\n                    />\n                </Menu.Item>\n            </Menu.Items>\n        </Menu>\n    );\n};\n\nexport const ArtistAlleyListing: React.FC<{\n    listing: WireArtistAlley;\n    project: WireProjectModel;\n}> = ({ listing, project }) => {\n    const rendered = useMemo(() => {\n        return renderMarkdownReactNoHTML(listing.body, new Date(), {\n            disableEmbeds: true,\n            externalLinksInNewTab: true,\n            hasCohostPlus: false,\n            renderingContext: \"artistAlley\",\n        });\n    }, [listing.body]);\n\n    const theme = useDynamicTheme();\n\n    return (\n        <div\n            data-theme={theme.current}\n            className=\"co-themed-box co-artist-alley-listing flex w-full flex-col rounded-lg border\"\n        >\n            <div className=\"co-border flex flex-row items-center gap-2 border-b px-2 py-3\">\n                <ProjectAvatar project={project} className=\"h-8\" />\n                <a\n                    href={sitemap.public.project\n                        .mainAppProfile({ projectHandle: project.handle })\n                        .toString()}\n                >\n                    @{project.handle}\n                </a>\n                <div className=\"flex-1\">&nbsp;</div>\n                {listing.adultContent ? (\n                    <span className=\"co-18-plus rounded-lg p-1 text-xs \">\n                        18+\n                    </span>\n                ) : null}\n                <ArtistAlleyMeatballMenu listing={listing} />\n            </div>\n            {listing.attachment && (\n                <ArtistAlleyAttachment attachment={listing.attachment} />\n            )}\n            <div className=\"co-prose prose p-2\">{rendered}</div>\n\n            <div className=\"mx-2 my-3\">\n                <BasicButton\n                    as=\"a\"\n                    buttonColor=\"\"\n                    buttonSize=\"regular\"\n                    href={listing.cta.link}\n                    extraClasses=\"co-cta-button\"\n                    target=\"_blank\"\n                >\n                    {listing.cta.text}\n                </BasicButton>\n            </div>\n\n            {listing.categories.length > 0 && (\n                <ListingTags tags={listing.categories} />\n            )}\n        </div>\n    );\n};\n\nconst ListingTags: React.FC<{ tags: string[] }> = ({ tags }) => {\n    const { categories } = useArtistAlleyFilters();\n    const filteredTags = tags.filter((tag) => tag != \"\");\n\n    return filteredTags.length ? (\n        <div className=\"w-full max-w-full p-3\">\n            <div\n                className={tw`co-tags relative w-full overflow-y-hidden break-words leading-none`}\n            >\n                <div>\n                    {filteredTags.map((tag) => (\n                        <button\n                            key={tag}\n                            className={`mr-2 inline-block text-sm hover:underline ${\n                                // bold currently filtered tags\n                                categories.has(tag) ? \"font-bold\" : \"\"\n                            }`}\n                            onClick={() => {\n                                categories.has(tag)\n                                    ? categories.delete(tag)\n                                    : categories.add(tag);\n                            }}\n                        >\n                            #{tag}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        </div>\n    ) : null;\n};\n","import { CheckIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\nimport classNames from \"classnames\";\nimport React, {\n    InputHTMLAttributes,\n    useEffect,\n    useMemo,\n    useState,\n} from \"react\";\nimport {\n    FieldValues,\n    useController,\n    UseControllerProps,\n    UseFormTrigger,\n} from \"react-hook-form\";\n\ntype InputStyle = \"light\" | \"dark\" | \"dynamic\";\n\ntype StyledInputProps<T extends FieldValues> = {\n    style?: InputStyle;\n    showValidity?: boolean;\n} & UseControllerProps<T> & { trigger: UseFormTrigger<T> } & Pick<\n        InputHTMLAttributes<HTMLInputElement>,\n        | \"type\"\n        | \"autoComplete\"\n        | \"placeholder\"\n        | \"max\"\n        | \"min\"\n        | \"step\"\n        | \"readOnly\"\n        | \"disabled\"\n    >;\n\nexport const StyledInput = <T extends FieldValues>({\n    style = \"light\",\n    showValidity = true,\n    name,\n    control,\n    rules,\n    trigger,\n    ...props\n}: StyledInputProps<T>) => {\n    const { field, fieldState } = useController<T>({\n        name,\n        control,\n        rules,\n    });\n    const { name: fieldName, onChange } = field;\n\n    // setup our own ref so we can track field value\n    const [directRef, setDirectRef] = useState<HTMLInputElement | null>();\n    useEffect(() => {\n        field.ref(directRef);\n    }, [directRef, field]);\n\n    const {\n        inputStyleClasses,\n        contentDivStyleClasses,\n        validityIconStyleClasses,\n    } = useMemo(() => {\n        switch (style) {\n            case \"light\":\n                return {\n                    inputStyleClasses: `border-gray-600 text-notBlack\n                        placeholder:text-gray-600\n                        focus:border-notBlack disabled:border-gray-300`,\n                    contentDivStyleClasses: `to-notWhite`,\n                    validityIconStyleClasses: `bg-notWhite`,\n                };\n            case \"dynamic\":\n                return {\n                    inputStyleClasses: \"co-styled-input\",\n                    contentDivStyleClasses: \"co-styled-input-content\",\n                    validityIconStyleClasses: \"co-styled-input-validity-icon\",\n                };\n            case \"dark\":\n            default:\n                return {\n                    inputStyleClasses: `border-gray-400 text-notWhite \n                        placeholder:text-gray-400\n                        focus:border-notWhite read-only:bg-gray-700`,\n                    contentDivStyleClasses: `to-notBlack`,\n                    validityIconStyleClasses: `bg-notBlack`,\n                };\n        }\n    }, [style]);\n\n    // manually validate when we don't get an input event\n    // can happen on browser autofill\n    useEffect(() => {\n        if (\n            directRef &&\n            directRef.value &&\n            directRef.value !== props.defaultValue &&\n            directRef.value !== field.value &&\n            !fieldState.isTouched\n        ) {\n            onChange(directRef.value);\n            void trigger(fieldName, { shouldFocus: true });\n        }\n    }, [\n        directRef,\n        field.value,\n        fieldName,\n        fieldState.isTouched,\n        onChange,\n        props.defaultValue,\n        trigger,\n    ]);\n    return (\n        <div className=\"relative\">\n            <input\n                className={classNames(\n                    `\n                        w-full min-w-[15rem] rounded-lg border-2 bg-transparent\n                    `,\n                    inputStyleClasses\n                )}\n                {...props}\n                {...field}\n                ref={setDirectRef}\n            />\n            {showValidity && !props.readOnly && fieldState.isTouched ? (\n                <>\n                    <div\n                        className={classNames(\n                            `\n                                absolute bottom-0 right-9 top-0 my-auto h-6 w-3 \n                                bg-gradient-to-r from-transparent\n                            `,\n                            contentDivStyleClasses\n                        )}\n                    />\n                    {fieldState.invalid ? (\n                        <XMarkIcon\n                            className={classNames(\n                                `\n                                    absolute bottom-0 right-3 top-0 my-auto h-6 \n                                    w-6 text-red\n                                `,\n                                validityIconStyleClasses\n                            )}\n                        />\n                    ) : (\n                        <CheckIcon\n                            className={classNames(\n                                `\n                                    absolute bottom-0 right-3 top-0 my-auto h-6\n                                    w-6 bg-notWhite text-green\n                                `,\n                                validityIconStyleClasses\n                            )}\n                        />\n                    )}\n                </>\n            ) : null}\n        </div>\n    );\n};\n","import { tw } from \"@/client/lib/tw-tagged-literal\";\nimport { HashtagIcon } from \"@heroicons/react/20/solid\";\nimport React from \"react\";\nimport {\n    FieldValues,\n    UseControllerProps,\n    useController,\n} from \"react-hook-form\";\ntype TokenMultiSelectProps<T extends FieldValues> = {\n    options: string[];\n} & UseControllerProps<T>;\n\nexport const TokenMultiSelect = <T extends FieldValues>({\n    options,\n    ...props\n}: TokenMultiSelectProps<T>) => {\n    const { field } = useController<T>(props);\n    const selectedOptions = field.value as string[];\n\n    return (\n        <div className=\"flex flex-row flex-wrap gap-2 px-3 py-2\">\n            {options.map((option) => (\n                <div\n                    key={`selected-token-${option}`}\n                    className=\"group h-max cursor-pointer select-none\"\n                >\n                    {/* this weird nested div thing is to prevent a bug caused by having the default click handler and our removal handler on the same element */}\n                    <button\n                        className={tw`co-token flex items-center justify-start gap-1 rounded-lg px-2 py-1 leading-none ${\n                            selectedOptions.includes(option) ? \"co-active\" : \"\"\n                        }`}\n                        onClick={(e) => {\n                            e.stopPropagation();\n                            selectedOptions.includes(option)\n                                ? field.onChange(\n                                      selectedOptions.filter(\n                                          (o) => o !== option\n                                      )\n                                  )\n                                : field.onChange([...selectedOptions, option]);\n                        }}\n                        type=\"button\"\n                    >\n                        <HashtagIcon className=\"inline-block h-3.5\" />\n                        <span className=\"block\">{option}</span>\n                    </button>\n                </div>\n            ))}\n        </div>\n    );\n};\n","import { ModWireArtistAlley } from \"@/shared/types/artist-alley\";\nimport { WireProjectModelModeratorExtensions } from \"@/shared/types/projects\";\nimport { WireUserModel } from \"@/shared/types/wire-models\";\nimport React, { FunctionComponent, useCallback } from \"react\";\nimport { ArtistAlleyListing } from \"../../artist-alley/artist-alley-listing\";\nimport sitemap from \"@/shared/sitemap\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { ControllableExpandingTextArea } from \"../../expanding-text-area\";\nimport { StyledInput } from \"../../elements/styled-input\";\nimport { TokenMultiSelect } from \"../../elements/token-multi-select\";\nimport { useDynamicTheme } from \"@/client/preact/hooks/dynamic-theme\";\n\ntype ManageArtistAlleyListingPageProps = {\n    project: WireProjectModelModeratorExtensions;\n    user: WireUserModel;\n    listing: ModWireArtistAlley;\n};\n\ntype Inputs = {\n    body: string;\n    adult: boolean;\n    ctaText: string;\n    ctaLink: string;\n    categories: string[];\n};\n\nexport const ManageArtistAlleyListingPage: FunctionComponent<\n    ManageArtistAlleyListingPageProps\n> = ({ project, user, listing }) => {\n    const updateListingMutation =\n        trpc.artistAlley.moderator.updateListing.useMutation();\n    const allCategories = trpc.artistAlley.getCategories.useQuery();\n\n    const {\n        control,\n        register,\n        handleSubmit,\n        trigger,\n        watch,\n        setValue,\n        setError,\n        formState,\n        clearErrors,\n        getValues,\n    } = useForm<Inputs>({\n        defaultValues: {\n            body: listing.body,\n            adult: listing.adultContent,\n            ctaText: listing.cta.text,\n            ctaLink: listing.cta.link,\n            categories: listing.categories,\n        },\n    });\n\n    const onSubmit: SubmitHandler<Inputs> = useCallback(\n        async (data) => {\n            await updateListingMutation.mutateAsync({\n                id: listing.id,\n                body: data.body,\n                adult: data.adult,\n                ctaText: data.ctaText,\n                ctaLink: data.ctaLink,\n                categories: data.categories,\n            });\n\n            location.reload();\n        },\n        [updateListingMutation]\n    );\n\n    const theme = useDynamicTheme();\n\n    return (\n        <div\n            className=\"co-themed-box co-settings container mx-auto mt-12 flex flex-col gap-4 rounded-lg p-3\"\n            data-theme={theme.current}\n        >\n            <h1 className=\"text-4xl font-bold\">manage artist alley listing</h1>\n\n            <div className=\"co-prose prose flex w-full flex-row gap-4 p-3\">\n                <div>\n                    <div className=\"w-[300px] max-w-[300px]\">\n                        <ArtistAlleyListing\n                            listing={listing}\n                            project={project}\n                        />\n                    </div>\n\n                    <div className=\"flex-shrink\">\n                        <ul>\n                            <li>\n                                user: {user.email} (\n                                <a\n                                    href={sitemap.public.moderation\n                                        .manageUser({\n                                            userId: user.userId,\n                                        })\n                                        .toString()}\n                                >\n                                    manage\n                                </a>\n                                )\n                            </li>\n                            <li>\n                                project: {project.handle} (\n                                <a\n                                    href={sitemap.public.moderation\n                                        .manageProject({\n                                            projectHandle: project.handle,\n                                        })\n                                        .toString()}\n                                >\n                                    manage\n                                </a>\n                                )\n                            </li>\n                            <li>listing: {listing.id}</li>\n                            <li>created at: {listing.createdAt}</li>\n                            <li>num weeks: {listing.numWeeks}</li>\n                            <li>status: {listing.status}</li>\n                            <li>\n                                payment status:{\" \"}\n                                <a\n                                    href={`https://dashboard.stripe.com/payments/${listing.stripePaymentIntentId}`}\n                                >\n                                    {listing.paymentStatus}\n                                </a>\n                            </li>\n                            <li>\n                                notes:\n                                <br />\n                                <blockquote>{listing.notes}</blockquote>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div>\n                    <h4 className=\"h4\">edit listing</h4>\n\n                    <form\n                        className=\"flex flex-col gap-4\"\n                        onSubmit={handleSubmit(onSubmit)}\n                    >\n                        <label>\n                            body\n                            <ControllableExpandingTextArea\n                                control={control}\n                                name=\"body\"\n                                minRows={4}\n                                autoComplete=\"off\"\n                                className=\"co-styled-input rounded-lg border-2\"\n                            />\n                        </label>\n\n                        <label>\n                            CTA text\n                            <StyledInput\n                                control={control}\n                                name=\"ctaText\"\n                                trigger={trigger}\n                                type=\"text\"\n                                style=\"dynamic\"\n                            />\n                        </label>\n\n                        <label>\n                            CTA link\n                            <StyledInput\n                                control={control}\n                                name=\"ctaLink\"\n                                trigger={trigger}\n                                type=\"text\"\n                                style=\"dynamic\"\n                            />\n                        </label>\n\n                        <label>\n                            categories\n                            <TokenMultiSelect\n                                control={control}\n                                name=\"categories\"\n                                options={allCategories.data ?? []}\n                            />\n                        </label>\n\n                        <label>\n                            adult content\n                            <input\n                                type=\"checkbox\"\n                                {...register(\"adult\")}\n                                className=\"rounded-checkbox ml-3\"\n                            />\n                        </label>\n\n                        <button\n                            className=\"co-filled-button rounded-lg px-3 py-2.5 font-bold\"\n                            type=\"submit\"\n                            disabled={formState.isSubmitting}\n                        >\n                            submit edits\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nManageArtistAlleyListingPage.displayName =\n    \"moderation/manage-artist-alley-listing\";\nexport default ManageArtistAlleyListingPage;\n"],"names":["ArtistAlleyFilterProvider","React","adultFilterMode","isAdult","categories","Set","setAdultFilterMode","categoryMatch","setCategoryMatch","sortOrder","setSortOrder","useArtistAlleyFilters","useContext","ArtistAlleyAttachment","attachment","displayPrefs","useDisplayPrefs","src","setSrc","useState","gifsStartPaused","previewURL","fileURL","isPlaying","setIsPlaying","srcWithDpr","useImageOptimizer","className","srcSet","alt","altText","PlayPauseButton","showPlay","extraClasses","onPlay","handlePlay","onPause","handlePause","ArtistAlleyMeatballMenu","listing","reportingUIContext","ReportingUIContext","Menu","as","EllipsisHorizontalIcon","MeatballMenuItem","disabled","onClick","send","type","artistAlleyListingId","id","ItemIcon","ShieldExclamationIconOutline","text","ArtistAlleyListing","project","rendered","useMemo","renderMarkdownReactNoHTML","body","Date","disableEmbeds","externalLinksInNewTab","hasCohostPlus","renderingContext","theme","useDynamicTheme","current","ProjectAvatar","href","sitemap","projectHandle","handle","toString","adultContent","BasicButton","buttonColor","buttonSize","cta","link","target","length","ListingTags","tags","filteredTags","filter","tag","tw","map","key","has","delete","add","StyledInput","style","showValidity","name","control","rules","trigger","props","field","fieldState","useController","fieldName","onChange","directRef","setDirectRef","useEffect","ref","inputStyleClasses","contentDivStyleClasses","validityIconStyleClasses","value","defaultValue","isTouched","shouldFocus","_extends","classNames","readOnly","invalid","XMarkIcon","CheckIcon","TokenMultiSelect","options","selectedOptions","option","includes","e","stopPropagation","o","HashtagIcon","ManageArtistAlleyListingPage","user","updateListingMutation","trpc","allCategories","register","handleSubmit","watch","setValue","setError","formState","clearErrors","getValues","useForm","defaultValues","adult","ctaText","ctaLink","onSubmit","useCallback","async","mutateAsync","data","location","reload","email","userId","createdAt","numWeeks","status","stripePaymentIntentId","paymentStatus","notes","ControllableExpandingTextArea","minRows","autoComplete","isSubmitting","displayName"],"sourceRoot":""}