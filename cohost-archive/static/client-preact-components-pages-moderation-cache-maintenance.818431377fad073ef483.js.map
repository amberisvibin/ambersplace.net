{"version":3,"file":"client-preact-components-pages-moderation-cache-maintenance.818431377fad073ef483.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/moderation/maintenance/fill-dashboard-gaps.tsx","webpack:///./preact/components/moderation/maintenance/notifications/rebuild-project-feed.tsx","webpack:///./preact/components/moderation/maintenance/rebuild-eager-posts.tsx","webpack:///./preact/components/moderation/maintenance/rebuild-dashboard-form.tsx","webpack:///./preact/components/pages/moderation/cache-maintenance.tsx","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/outline/esm/ChevronLeftIcon.js"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import { trpc } from \"@/client/lib/trpc\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport loadable from \"@loadable/component\";\nimport React, { FunctionComponent, useCallback } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\n\nconst DevTool = loadable(() => import(\"@hookform/devtools\"), {\n    resolveComponent: (components) => components.DevTool,\n    ssr: false,\n});\n\ntype Inputs = {\n    startDate: Date;\n    endDate: Date;\n    startProjectId: number;\n};\n\nexport const FillDashboardGaps: FunctionComponent = () => {\n    const rebuildNotifications =\n        trpc.moderation.maintenance.dashboard.fillGap.useMutation();\n\n    const onSubmit = useCallback<SubmitHandler<Inputs>>(\n        (values) => {\n            rebuildNotifications.mutate({\n                endDate: values.endDate.toISOString(),\n                startDate: values.startDate.toISOString(),\n                startingProjectId: values.startProjectId as ProjectId,\n            });\n        },\n        [rebuildNotifications]\n    );\n\n    const { register, control, handleSubmit, formState } = useForm<Inputs>({\n        defaultValues: {\n            startProjectId: 0,\n        },\n    });\n\n    return (\n        <form\n            className=\"not-prose flex flex-col gap-4\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <fieldset className=\"flex flex-col gap-2\">\n                <label htmlFor=\"startDate\" className=\"text-lg\">\n                    gap start date (local time)\n                </label>\n                <input\n                    type=\"datetime-local\"\n                    {...register(\"startDate\", {\n                        required: true,\n                        valueAsDate: true,\n                    })}\n                />\n            </fieldset>\n            <fieldset className=\"flex flex-col gap-2\">\n                <label htmlFor=\"endDate\" className=\"text-lg\">\n                    gap end date (local time)\n                </label>\n                <input\n                    type=\"datetime-local\"\n                    {...register(\"endDate\", {\n                        required: true,\n                        valueAsDate: true,\n                    })}\n                />\n            </fieldset>\n            <fieldset className=\"flex flex-col gap-2\">\n                <label htmlFor=\"startProjectId\" className=\"text-lg\">\n                    starting project ID (should be 0 in almost all cases)\n                </label>\n                <input\n                    type=\"number\"\n                    step={1}\n                    min={0}\n                    {...register(\"startProjectId\", {\n                        required: true,\n                        valueAsNumber: true,\n                    })}\n                />\n            </fieldset>\n\n            <div className=\"flex flex-row gap-2\">\n                <Button\n                    type=\"submit\"\n                    buttonStyle=\"pill\"\n                    color=\"cherry\"\n                    className=\"w-fit\"\n                >\n                    start gap fill\n                </Button>\n                {formState.isSubmitSuccessful ? (\n                    <span className=\"text-green\">\n                        Job scheduled successfully!\n                    </span>\n                ) : null}\n            </div>\n\n            {process.env.NODE_ENV !== \"production\" ? (\n                <DevTool control={control} />\n            ) : null}\n        </form>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { useSSR } from \"@/client/preact/hooks/is-server\";\nimport { useProjectSearch } from \"@/client/preact/hooks/search\";\nimport { ProjectHandle } from \"@/shared/types/ids\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, {\n    FunctionComponent,\n    useTransition,\n    useCallback,\n    useId,\n    useState,\n} from \"react\";\nimport Autosuggest, {\n    OnSuggestionsClearRequested,\n    OnSuggestionSelected,\n    RenderSuggestion,\n    RenderSuggestionsContainer,\n    SuggestionsFetchRequested,\n} from \"react-autosuggest\";\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport loadable from \"@loadable/component\";\n\nconst DevTool = loadable(() => import(\"@hookform/devtools\"), {\n    resolveComponent: (components) => components.DevTool,\n    ssr: false,\n});\n\ntype Inputs = {\n    handle: string;\n    priority: boolean;\n};\n\nconst renderSuggestion: RenderSuggestion<WireProjectModel> = (\n    suggestion,\n    { isHighlighted }\n) => (\n    <div\n        className={`${\n            isHighlighted ? \"bg-strawberry-200\" : \"\"\n        } px-3 leading-relaxed`}\n    >\n        {suggestion.handle}\n    </div>\n);\n\nconst renderSuggestionContainer: RenderSuggestionsContainer = ({\n    containerProps,\n    children,\n}) => {\n    const numChildren = React.Children.count(children);\n    if (!numChildren) return null;\n    return (\n        <div\n            {...containerProps}\n            className=\"cohost-shadow-light not-prose cohost-shadow-light dark:cohost-shadow-dark absolute mt-3 w-fit rounded-lg bg-notWhite py-3\"\n        >\n            {children}\n        </div>\n    );\n};\n\nexport const RebuildProjectFeed: FunctionComponent = () => {\n    const [isPending, startTransition] = useTransition();\n    const [searchToken, setSearchToken] = useState<string>(\"\");\n    const { projects } = useProjectSearch(searchToken, { skipMinimum: true });\n    const rebuildNotifications =\n        trpc.moderation.maintenance.notifications.rebuildForProject.useMutation();\n    const idPrefix = useId();\n\n    const { isBrowser } = useSSR();\n\n    const { register, control, setValue, handleSubmit, formState, reset } =\n        useForm<Inputs>({\n            defaultValues: {\n                handle: \"\",\n                priority: false,\n            },\n        });\n\n    const onSuggestionSelected = useCallback<\n        OnSuggestionSelected<WireProjectModel>\n    >(\n        (event, data) => {\n            setValue(\"handle\", data.suggestionValue);\n        },\n        [setValue]\n    );\n\n    const onSuggestionsFetchRequested = useCallback<SuggestionsFetchRequested>(\n        ({ value }) => {\n            startTransition(() => {\n                setSearchToken(value);\n            });\n        },\n        []\n    );\n\n    const onSuggestionsClearRequested =\n        useCallback<OnSuggestionsClearRequested>(() => {\n            startTransition(() => {\n                setSearchToken(\"\");\n            });\n        }, []);\n\n    const onSubmit: SubmitHandler<Inputs> = async (values) => {\n        await rebuildNotifications.mutateAsync({\n            projectHandle: ProjectHandle.parse(values.handle),\n            priority: values.priority,\n        });\n        reset();\n    };\n\n    return (\n        <form\n            className=\"not-prose flex flex-col gap-4\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <fieldset className=\"flex flex-col gap-2\">\n                <label htmlFor={`${idPrefix}-handle`} className=\"text-lg\">\n                    project handle\n                </label>\n                <Controller\n                    control={control}\n                    name=\"handle\"\n                    rules={{\n                        required: \"Handle is required!\",\n                    }}\n                    render={({ field }) => (\n                        <Autosuggest\n                            suggestions={projects ?? []}\n                            getSuggestionValue={(project) => project.handle}\n                            inputProps={{\n                                ...field,\n                                id: `${idPrefix}-handle`,\n                                className: \"focus:border-cherry\",\n                            }}\n                            onSuggestionSelected={onSuggestionSelected}\n                            onSuggestionsFetchRequested={\n                                onSuggestionsFetchRequested\n                            }\n                            onSuggestionsClearRequested={\n                                onSuggestionsClearRequested\n                            }\n                            renderSuggestion={renderSuggestion}\n                            renderSuggestionsContainer={\n                                renderSuggestionContainer\n                            }\n                        />\n                    )}\n                />\n            </fieldset>\n            <fieldset className=\"flex flex-col gap-2\">\n                <div className=\"flex flex-row items-center gap-2\">\n                    <label htmlFor={`${idPrefix}-priority`} className=\"text-lg\">\n                        run immediately?\n                    </label>\n                    <input\n                        type=\"checkbox\"\n                        className=\"bg-notWhite text-cherry\"\n                        {...register(\"priority\")}\n                        id={`${idPrefix}-priority`}\n                    />\n                </div>\n                <span className=\"text-sm italic\">\n                    creates the rebuild job with priority 1. use sparingly.\n                </span>\n            </fieldset>\n            <div className=\"flex flex-row gap-2\">\n                <Button\n                    type=\"submit\"\n                    buttonStyle=\"pill\"\n                    color=\"cherry\"\n                    className=\"w-fit\"\n                >\n                    rebuild\n                </Button>\n                {formState.isSubmitSuccessful ? (\n                    <span className=\"text-green\">Submitted successfully!</span>\n                ) : null}\n            </div>\n\n            {isBrowser && process.env.NODE_ENV !== \"production\" ? (\n                <DevTool control={control} />\n            ) : null}\n        </form>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport { PostId } from \"@/shared/types/ids\";\nimport React, { FunctionComponent, useCallback } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\n\ntype Inputs = {\n    startAtPostId: number;\n    batchSize: number;\n    rebuildAll: boolean;\n};\n\nexport const RebuildEagerPosts: FunctionComponent = () => {\n    const rebuildEagerPosts =\n        trpc.moderation.maintenance.rebuildEagerPosts.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = async (values) => {\n        await rebuildEagerPosts.mutateAsync({\n            startAtPostId: values.startAtPostId as PostId,\n            batchSize: values.batchSize,\n            rebuildAll: values.rebuildAll,\n        });\n    };\n\n    const { register, handleSubmit, formState } = useForm<Inputs>({\n        defaultValues: {\n            startAtPostId: 1,\n            batchSize: 50,\n            rebuildAll: false,\n        },\n    });\n\n    return (\n        <form\n            className=\"not-prose flex flex-col gap-4\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <fieldset className=\"flex flex-col gap-2\">\n                <label className=\"text-lg\">\n                    starting post ID\n                    <input\n                        type=\"number\"\n                        min={1}\n                        {...register(\"startAtPostId\", {\n                            required: true,\n                            valueAsNumber: true,\n                        })}\n                    />\n                </label>\n            </fieldset>\n            <fieldset className=\"flex flex-col gap-2\">\n                <label className=\"text-lg\">\n                    batch size\n                    <input\n                        type=\"number\"\n                        min={1}\n                        max={1000}\n                        {...register(\"batchSize\", {\n                            required: true,\n                            valueAsNumber: true,\n                        })}\n                    />\n                </label>\n            </fieldset>\n            <fieldset className=\"flex flex-col gap-2\">\n                <div className=\"flex flex-row items-center gap-2\">\n                    <label className=\"text-lg\">\n                        rebuild posts older than yesterday?\n                        <input type=\"checkbox\" {...register(\"rebuildAll\")} />\n                    </label>\n                </div>\n            </fieldset>\n            <div className=\"flex flex-row gap-2\">\n                <Button\n                    type=\"submit\"\n                    buttonStyle=\"pill\"\n                    color=\"cherry\"\n                    className=\"w-fit\"\n                >\n                    rebuild\n                </Button>\n                {formState.isSubmitSuccessful ? (\n                    <span className=\"text-green\">Submitted successfully!</span>\n                ) : null}\n            </div>\n        </form>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { DevTool } from \"@hookform/devtools\";\nimport React, { FunctionComponent, useCallback } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\n\ntype Inputs = {\n    projectId: ProjectId;\n};\n\nexport const RebuildDashboardForm: FunctionComponent = () => {\n    const rebuildDashboardMutation =\n        trpc.moderation.maintenance.dashboard.rebuildForProject.useMutation();\n\n    const onSubmit = useCallback<SubmitHandler<Inputs>>(\n        (values) => {\n            rebuildDashboardMutation.mutate({\n                projectId: values.projectId as ProjectId,\n            });\n        },\n        [rebuildDashboardMutation]\n    );\n\n    const { register, control, handleSubmit, formState } = useForm<Inputs>({\n        defaultValues: {\n            projectId: 0 as ProjectId,\n        },\n    });\n\n    return (\n        <form\n            className=\"not-prose flex flex-col gap-4\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <fieldset className=\"flex flex-col gap-2\">\n                <label className=\"text-lg\">\n                    project id:\n                    <input\n                        type=\"number\"\n                        step={1}\n                        min={0}\n                        {...register(\"projectId\", {\n                            required: true,\n                            valueAsNumber: true,\n                        })}\n                    />\n                </label>\n            </fieldset>\n\n            <div className=\"flex flex-row gap-2\">\n                <Button\n                    type=\"submit\"\n                    buttonStyle=\"pill\"\n                    color=\"cherry\"\n                    className=\"w-fit\"\n                >\n                    rebuild\n                </Button>\n                {formState.isSubmitSuccessful ? (\n                    <span className=\"text-green\">\n                        Job scheduled successfully!\n                    </span>\n                ) : null}\n            </div>\n\n            {process.env.NODE_ENV !== \"production\" ? (\n                <DevTool control={control} />\n            ) : null}\n        </form>\n    );\n};\n","import sitemap from \"@/shared/sitemap\";\nimport {\n    ChevronLeftIcon,\n    ExclamationTriangleIcon,\n} from \"@heroicons/react/24/outline\";\nimport React, { FunctionComponent } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { RebuildProjectFeed } from \"../../moderation/maintenance/notifications/rebuild-project-feed\";\nimport { FillDashboardGaps } from \"../../moderation/maintenance/fill-dashboard-gaps\";\nimport { RebuildEagerPosts } from \"../../moderation/maintenance/rebuild-eager-posts\";\nimport { RebuildDashboardForm } from \"../../moderation/maintenance/rebuild-dashboard-form\";\n\nconst CacheMaintenancePage: FunctionComponent = () => {\n    return (\n        <>\n            <Helmet title=\"cache maintenance\" />\n            <div className=\"flex flex-col gap-4 py-4 prose-headings:m-0\">\n                <h1>cache maintenance</h1>\n                <a href={sitemap.public.moderation.home().toString()}>\n                    <ChevronLeftIcon className=\"inline h-6 w-6\" />\n                    back to moderation home\n                </a>\n                <div\n                    className={`mb-2 flex flex-row items-start gap-4\n                    rounded-lg border-2 border-red-700 bg-red-200 p-4\n                    text-notBlack prose-p:my-2`}\n                >\n                    <p className=\"flex-shrink-0\">\n                        <ExclamationTriangleIcon className=\"inline h-6 w-6 text-red-700\" />\n                    </p>\n                    <div>\n                        <p>\n                            WARNING! This page contains potentially destructive\n                            actions! Please refrain from Fucking Around And\n                            Finding Out!\n                        </p>\n                    </div>\n                </div>\n                <hr />\n                <h2>rebuild timeline for individual project</h2>\n                <RebuildDashboardForm />\n                <hr />\n                <h2>rebuild notification feed for individual project</h2>\n                <RebuildProjectFeed />\n                <hr />\n                <h2>fill in gaps in cached dashboards</h2>\n                <FillDashboardGaps />\n                <hr />\n                <h2>\n                    rebuild eager posts (tag search, number of comments, etc.)\n                </h2>\n                <RebuildEagerPosts />\n            </div>\n        </>\n    );\n};\n\nexport default CacheMaintenancePage;\n","import * as React from \"react\";\n\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 19.5L8.25 12l7.5-7.5\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","loadable","resolved","chunkName","isReady","key","resolve","__webpack_modules__","importAsync","requireAsync","then","requireSync","id","__webpack_require__","resolveComponent","components","DevTool","ssr","FillDashboardGaps","rebuildNotifications","trpc","onSubmit","useCallback","values","mutate","endDate","toISOString","startDate","startingProjectId","startProjectId","register","control","handleSubmit","formState","useForm","defaultValues","htmlFor","type","required","valueAsDate","step","min","valueAsNumber","isSubmitSuccessful","renderSuggestion","suggestion","isHighlighted","handle","renderSuggestionContainer","containerProps","RebuildProjectFeed","isPending","startTransition","useTransition","searchToken","setSearchToken","useState","projects","useProjectSearch","skipMinimum","idPrefix","useId","isBrowser","useSSR","setValue","reset","priority","onSuggestionSelected","event","data","suggestionValue","onSuggestionsFetchRequested","value","onSuggestionsClearRequested","async","mutateAsync","projectHandle","ProjectHandle","Controller","name","rules","render","field","Autosuggest","suggestions","getSuggestionValue","project","inputProps","renderSuggestionsContainer","RebuildEagerPosts","rebuildEagerPosts","startAtPostId","batchSize","rebuildAll","max","RebuildDashboardForm","rebuildDashboardMutation","projectId","CacheMaintenancePage","Helmet","title","href","sitemap","toString","ChevronLeftIcon","ExclamationTriangleIcon","ForwardRef","titleId","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}