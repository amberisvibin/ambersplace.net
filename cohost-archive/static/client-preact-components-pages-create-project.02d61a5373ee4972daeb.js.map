{"version":3,"file":"client-preact-components-pages-create-project.02d61a5373ee4972daeb.js","mappings":"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","sources":["webpack:///./preact/components/elements/settings-row.tsx","webpack:///./preact/components/pages/create-project.tsx","webpack:///./preact/components/settings/shared.tsx"],"sourcesContent":["import React, { FunctionComponent, ReactElement, ReactNode } from \"react\";\nimport { InfoBox, InfoBoxLevel } from \"./info-box\";\nimport classNames from \"classnames\";\n\ntype SettingsRowProps = {\n    bigLabel: ReactNode;\n    smallLabel?: string;\n    inputElement: ReactElement<{ id: string }>;\n    infoBoxLevel?: InfoBoxLevel;\n    infoBoxContent?: ReactElement;\n    customDescription?: ReactElement;\n    disabled?: boolean;\n};\n\nexport const SettingsRow: FunctionComponent<SettingsRowProps> = ({\n    bigLabel,\n    smallLabel,\n    inputElement,\n    infoBoxLevel,\n    infoBoxContent,\n    customDescription,\n    disabled,\n}) => {\n    const bigLabelRowSpanClasses = smallLabel ? \"row-span-1\" : \"row-span-2\";\n    const customDescriptionContent = customDescription ?? null;\n\n    return (\n        <div className=\"grid grid-cols-[1fr_min-content] grid-rows-[min-content] items-center gap-2.5 pt-2.5\">\n            <>\n                <label\n                    htmlFor={inputElement.props.id}\n                    className={classNames(\n                        `col-start-1 row-start-1 font-bold`,\n                        bigLabelRowSpanClasses,\n                        { \"text-gray-300\": disabled }\n                    )}\n                >\n                    {bigLabel}\n                </label>\n\n                {smallLabel ? (\n                    <label\n                        htmlFor={inputElement.props.id}\n                        className={classNames(\n                            \"col-start-1 row-start-2 align-middle\",\n                            { \"text-gray-300\": disabled }\n                        )}\n                    >\n                        {smallLabel}\n                    </label>\n                ) : null}\n\n                <div className=\"col-start-2 row-span-2 row-start-1\">\n                    {inputElement}\n                </div>\n\n                {infoBoxLevel ? (\n                    <InfoBox\n                        level={infoBoxLevel}\n                        className=\"col-span-2 col-start-1\"\n                    >\n                        {infoBoxContent}\n                    </InfoBox>\n                ) : (\n                    customDescriptionContent\n                )}\n\n                <hr className=\"col-span-2 col-start-1 w-full border-gray-300\" />\n            </>\n        </div>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport sitemap from \"@/shared/sitemap\";\nimport { ProjectHandle } from \"@/shared/types/ids\";\nimport { ProjectPrivacy } from \"@/shared/types/projects\";\nimport axios from \"axios\";\nimport React, { FunctionComponent, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { SubmitHandler, useForm, Validate } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { InfoBox } from \"../elements/info-box\";\nimport { SettingsRow } from \"../elements/settings-row\";\nimport { AuthnButton } from \"../partials/authn-button\";\nimport { sectionTitleClasses } from \"../settings/shared\";\n\ntype Inputs = {\n    handle: string;\n    adultContent: string;\n    privateProject: string;\n};\n\ntype CreateProjectComponentProps = {\n    canCreate: boolean;\n    isAdult: boolean;\n};\n\nexport const CreateProjectComponent: FunctionComponent<\n    CreateProjectComponentProps\n> = ({ canCreate, isAdult }) => {\n    const { t } = useTranslation();\n    const [submitting, setSubmitting] = useState(false);\n    const [, setFormError] = useState(\"\");\n    const checkHandle = trpc.projects.checkHandle.useMutation();\n    const { register, handleSubmit, control, trigger } = useForm<Inputs>({\n        mode: \"onTouched\",\n    });\n\n    const onSubmit: SubmitHandler<Inputs> = async ({\n        handle,\n        adultContent,\n        privateProject,\n    }) => {\n        setSubmitting(true);\n        setFormError(\"\");\n\n        const params = new URLSearchParams({\n            handle: handle,\n            adultContent: adultContent ? adultContent.toString() : \"false\",\n            privacy: privateProject\n                ? ProjectPrivacy.Private\n                : ProjectPrivacy.Public,\n        });\n\n        try {\n            await axios.post(\n                sitemap.public.apiV1.createProject().toString(),\n                params\n            );\n            location.replace(sitemap.public.project.profileEdit());\n        } catch (e) {\n            setFormError(\"Creating a project failed.\");\n            setSubmitting(false);\n        }\n    };\n\n    const validateHandle: Validate<string> = async (handle: string) => {\n        try {\n            const resp = await checkHandle.mutateAsync({\n                handle: handle as ProjectHandle,\n            });\n\n            return resp.valid === true ? true : resp.reason;\n        } catch (e) {\n            return t(\"common:unknown-error\").toString();\n        }\n    };\n\n    let adultForm: React.ReactNode;\n\n    if (isAdult) {\n        adultForm = (\n            <SettingsRow\n                bigLabel=\"18+ content?\"\n                inputElement={\n                    <input\n                        type=\"checkbox\"\n                        className=\"rounded-checkbox\"\n                        {...register(\"adultContent\")}\n                    />\n                }\n                customDescription={\n                    <div className=\"prose prose-sm\">\n                        <p>\n                            This controls the default 18+ content state for any\n                            post you make. We recommend that pages which mostly\n                            post 18+ content enable this.\n                        </p>\n                        <p>\n                            Please note: even if your page is marked as 18+\n                            content, profile information (avatar and header\n                            image) must be all-ages appropriate! You can read\n                            more in our{\" \"}\n                            <a\n                                href={sitemap.public\n                                    .staticContent({\n                                        slug: \"community-guidelines\",\n                                    })\n                                    .toString()}\n                            >\n                                community guidelines\n                            </a>\n                            .\n                        </p>\n                    </div>\n                }\n            />\n        );\n    } else {\n        adultForm = (\n            <InfoBox level=\"warning\" className=\"prose\">\n                you're under 18, so you can't create an 18+ page, but you can\n                flag individual posts on your pages as 18+ content.\n            </InfoBox>\n        );\n    }\n\n    return (\n        <>\n            <Helmet title=\"create a page\" />\n            <div className=\"container mx-auto mt-16 flex flex-col items-center\">\n                <div className=\"cohost-shadow-light dark:cohost-shadow-dark flex w-full max-w-prose flex-col gap-4 rounded-lg bg-notWhite p-3 text-notBlack\">\n                    <h4 className={sectionTitleClasses}>create a new page</h4>\n\n                    {canCreate ? (\n                        <>\n                            <form\n                                onSubmit={handleSubmit(onSubmit)}\n                                className=\"flex flex-col gap-4\"\n                            >\n                                <SettingsRow\n                                    bigLabel=\"page handle\"\n                                    inputElement={\n                                        <>\n                                            <input\n                                                type=\"text\"\n                                                {...register(\"handle\", {\n                                                    required:\n                                                        \"Handle is required!\",\n                                                    validate: validateHandle,\n                                                })}\n                                            />\n                                        </>\n                                    }\n                                    customDescription={\n                                        <div className=\"prose prose-sm\">\n                                            <p>\n                                                Handles must be at least 3\n                                                characters long, only contain\n                                                letters, numbers, and hyphens\n                                                (\"-\"), and not already be in\n                                                use.\n                                            </p>\n                                        </div>\n                                    }\n                                />\n\n                                {adultForm}\n\n                                <SettingsRow\n                                    bigLabel=\"private page?\"\n                                    inputElement={\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"rounded-checkbox\"\n                                            {...register(\"privateProject\")}\n                                        />\n                                    }\n                                />\n\n                                <InfoBox\n                                    level=\"info\"\n                                    className=\"prose prose-sm\"\n                                >\n                                    Pages can have multiple editors, but we\n                                    haven't built a UI for you to manage the\n                                    editorship of a page yet. If you want to\n                                    co-edit this page with collaborators, please\n                                    e-mail us at support@cohost.org with the\n                                    name of the new page and the name of one of\n                                    your collaborators' pages, and we'll get\n                                    everything sorted out for you.\n                                </InfoBox>\n\n                                <div className=\"flex w-full flex-col font-bold text-notWhite\">\n                                    <AuthnButton\n                                        type=\"submit\"\n                                        disabled={submitting}\n                                    >\n                                        create a new page\n                                    </AuthnButton>\n                                </div>\n                            </form>\n                        </>\n                    ) : (\n                        <div>\n                            sorry, but you can't create new pages until your\n                            account is activated.\n                        </div>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nCreateProjectComponent.displayName = \"create-project\";\nexport default CreateProjectComponent;\n","export const sectionBoxClasses =\n    \"cohost-shadow-light dark:cohost-shadow-dark mx-auto flex max-h-min w-full flex-col gap-4 rounded-lg bg-notWhite text-notBlack px-7 py-8\";\nexport const sectionTitleClasses = \"font-atkinson font-bold text-4xl\";\nexport const buttonRowClasses =\n    \"flex w-full flex-row items-center justify-end gap-4 font-bold text-notWhite\";\nexport const subsectionTitleClasses = \"font-atkinson font-bold text-2xl pt-8\";\n"],"names":["SettingsRow","bigLabel","smallLabel","inputElement","infoBoxLevel","infoBoxContent","customDescription","disabled","bigLabelRowSpanClasses","customDescriptionContent","React","className","htmlFor","props","id","classNames","InfoBox","level","CreateProjectComponent","canCreate","isAdult","t","useTranslation","submitting","setSubmitting","useState","setFormError","checkHandle","trpc","register","handleSubmit","control","trigger","useForm","mode","adultForm","_extends","type","href","sitemap","slug","toString","Helmet","title","sectionTitleClasses","onSubmit","async","handle","adultContent","privateProject","params","URLSearchParams","privacy","ProjectPrivacy","axios","location","replace","e","required","validate","resp","mutateAsync","valid","reason","AuthnButton","displayName","sectionBoxClasses","buttonRowClasses","subsectionTitleClasses"],"sourceRoot":""}