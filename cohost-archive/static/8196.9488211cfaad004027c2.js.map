{"version":3,"file":"8196.9488211cfaad004027c2.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///../shared/types/relationships.ts","webpack:///./preact/components/partials/follow-button.tsx","webpack:///./preact/components/partials/user-note.tsx","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/solid/esm/CheckBadgeIcon.js","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/solid/esm/UserIcon.js","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/solid/esm/LinkIcon.js","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/20/solid/esm/CogIcon.js","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/solid/esm/ChevronUpIcon.js","webpack:///./preact/components/partials/project-page/contact-info-card.tsx","webpack:///./preact/components/partials/profile-view.tsx","webpack:///../shared/util/validate-url.ts"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import { z } from \"zod\";\n\n// actual values don't matter, but higher-numbered following states cover up\n// lower-numbered ones\nexport enum FollowingState {\n    NotFollowing = 0,\n    FollowRequested = 1,\n    Following = 2,\n}\n\nexport const FollowingStateEnum = z.nativeEnum(FollowingState);\nexport type FollowingStateEnum = z.infer<typeof FollowingStateEnum>;\n","import { trpc } from \"@/client/lib/trpc\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { ProjectPrivacy } from \"@/shared/types/projects\";\nimport {\n    FollowingState,\n    FollowingStateEnum,\n} from \"@/shared/types/relationships\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport { UseTRPCMutationOptions } from \"@trpc/react-query/dist/shared\";\nimport React, {\n    FunctionComponent,\n    Suspense,\n    useCallback,\n    useState,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport {\n    Button,\n    SharedProps as ButtonProps,\n    LinkButton,\n} from \"../elements/button\";\nimport sitemap from \"@/shared/sitemap\";\nimport { useReqMutableStore } from \"../../providers/req-mutable-store\";\nimport { SimpleModalDialog } from \"@/client/preact/components/elements/simple-modal-dialog\";\n\ntype FollowButtonProps = {\n    project: WireProjectModel;\n    onFollow?: (newFollowingState: FollowingState) => void;\n    color: ButtonProps[\"color\"];\n};\n\nexport const FollowButton: FunctionComponent<FollowButtonProps> = (props) => {\n    return (\n        <Suspense>\n            <FollowButtonInner {...props} />\n        </Suspense>\n    );\n};\n\nconst FollowButtonInner: FunctionComponent<FollowButtonProps> = ({\n    project,\n    onFollow,\n    color,\n}) => {\n    const userInfo = useUserInfo();\n    const utils = trpc.useContext();\n    const followingStateQuery = trpc.projects.followingState.useQuery(\n        { projectHandle: project.handle },\n        { suspense: true }\n    );\n    const reqStore = useReqMutableStore();\n    const ssrUrl = reqStore.get(\"ssrUrl\");\n\n    // big ol boilerplate to generate the optimistic update callbacks. this can\n    // _probably_ be cleaned up somewhat, but doing so would require a bunch of\n    // type finangaling that likely isn't worth doing in a component we never\n    // actually touch.\n    const createMutationCallbacks = useCallback(\n        (\n            optimisticState: FollowingState\n        ): UseTRPCMutationOptions<\n            {\n                fromProjectId: ProjectId;\n                toProjectId: ProjectId;\n            },\n            unknown,\n            {\n                followingState: FollowingStateEnum;\n            },\n            {\n                previousState?: {\n                    readerToProject: FollowingState;\n                };\n            }\n        > => {\n            return {\n                onMutate: async () => {\n                    // cancel any pending requests so they don't overwrite our\n                    // optimistic update\n                    await utils.projects.followingState.cancel({\n                        projectHandle: project.handle,\n                    });\n\n                    // snapshot the previous value\n                    const previousState = utils.projects.followingState.getData(\n                        {\n                            projectHandle: project.handle,\n                        }\n                    );\n\n                    // optimistic update\n                    // cancel follow request -> not following\n                    utils.projects.followingState.setData(\n                        { projectHandle: project.handle },\n                        {\n                            readerToProject: optimisticState,\n                        }\n                    );\n\n                    return { previousState };\n                },\n                onError: (err, params, context) => {\n                    // mutation failed, reset back to the previous state\n                    utils.projects.followingState.setData(\n                        { projectHandle: project.handle },\n                        context?.previousState\n                    );\n                },\n                onSettled: async () => {\n                    // refetch so we know we're For Sure accurate\n                    await utils.projects.followingState.invalidate({\n                        projectHandle: project.handle,\n                    });\n                },\n                onSuccess: (result) => {\n                    if (onFollow) {\n                        onFollow(result.followingState);\n                    }\n                },\n            };\n        },\n        [onFollow, project.handle, utils.projects.followingState]\n    );\n\n    const followRequestMutation =\n        trpc.relationships.createFollowRequest.useMutation({\n            ...createMutationCallbacks(\n                project.privacy === ProjectPrivacy.Private\n                    ? FollowingState.FollowRequested\n                    : FollowingState.Following\n            ),\n        });\n    const unfollowMutation = trpc.relationships.unfollow.useMutation({\n        ...createMutationCallbacks(FollowingState.NotFollowing),\n    });\n    const cancelFollowRequestMutation =\n        trpc.relationships.declineOrCancelFollowRequest.useMutation({\n            ...createMutationCallbacks(FollowingState.NotFollowing),\n        });\n\n    const { t } = useTranslation();\n    const followingState = followingStateQuery.data?.readerToProject ?? null;\n\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n\n    const onClickFollow = useCallback(async () => {\n        if (!userInfo.projectId) return;\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        switch (followingState) {\n            case FollowingState.FollowRequested:\n                // pending request; cancel follow request\n                await cancelFollowRequestMutation.mutateAsync(mutateArgs);\n                break;\n            case FollowingState.NotFollowing:\n                // not following; follow\n                await followRequestMutation.mutateAsync(mutateArgs);\n                break;\n            case FollowingState.Following:\n                // following; unfollow.  this causes a confirmation dialog box.\n                setIsConfirmOpen(true);\n                break;\n            case null:\n                // following state is only null when we don't know what we're\n                // doing or user is logged out. just exit out.\n                return;\n        }\n    }, [\n        cancelFollowRequestMutation,\n        followRequestMutation,\n        followingState,\n        project.projectId,\n        userInfo.projectId,\n    ]);\n\n    const onConfirmUnfollow = useCallback(async () => {\n        if (!userInfo.projectId) return;\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        await unfollowMutation.mutateAsync(mutateArgs);\n        setIsConfirmOpen(false);\n    }, [project.projectId, userInfo.projectId, unfollowMutation]);\n\n    let followButtonText = \"unknown\";\n\n    if (!userInfo.loggedIn) {\n        followButtonText = t(\"common:login\");\n    } else if (followingState === FollowingState.Following) {\n        followButtonText = t(\"client:page.unfollow-button\", \"unfollow\");\n    } else if (followingState === FollowingState.NotFollowing) {\n        if (project.privacy === ProjectPrivacy.Private) {\n            followButtonText = t(\n                \"client:page.follow-request-button\",\n                \"send follow request\"\n            );\n        } else {\n            followButtonText = t(\"client:page.follow-button\", \"follow\");\n        }\n    } else if (followingState === FollowingState.FollowRequested) {\n        followButtonText = t(\n            \"client:page.cancel-follow-request-button\",\n            \"cancel follow request\"\n        );\n    } else {\n        return null;\n    }\n\n    if (!userInfo.loggedIn) {\n        return (\n            <LinkButton\n                buttonStyle=\"pill\"\n                color={color}\n                href={sitemap.public.login({ originalUrl: ssrUrl }).toString()}\n            >\n                {followButtonText}\n            </LinkButton>\n        );\n    }\n\n    return (\n        <>\n            <SimpleModalDialog\n                isOpen={isConfirmOpen}\n                title={t(\n                    \"client:unfollow-page.confirm-title\",\n                    \"Unfollow this page?\"\n                )}\n                body={t(\n                    \"client:unfollow-page.confirm-body\",\n                    \"Are you sure you want to unfollow this page?\"\n                )}\n                confirm={{ label: t(\"common:unfollow\", \"unfollow\") }}\n                cancel={{ label: t(\"common:cancel\", \"cancel\") }}\n                onConfirm={onConfirmUnfollow}\n                onCancel={() => setIsConfirmOpen(false)}\n            />\n            <Button buttonStyle=\"pill\" color={color} onClick={onClickFollow}>\n                {followButtonText}\n            </Button>\n        </>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { t } from \"i18next\";\nimport React, { FunctionComponent, useCallback } from \"react\";\nimport { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport { ExpandingTextArea } from \"../expanding-text-area\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\n\ntype Inputs = {\n    contents: string;\n};\n\nexport const UserNote: FunctionComponent<{ projectId: ProjectId }> = ({\n    projectId,\n}) => {\n    const { loggedIn } = useUserInfo();\n    const initialContents = trpc.projects.userNote.query.useQuery(\n        { describedProjectId: projectId },\n        {\n            suspense: true,\n            refetchInterval: false,\n            refetchOnMount: false,\n            refetchOnReconnect: false,\n            refetchOnWindowFocus: false,\n            enabled: loggedIn,\n        }\n    ).data?.contents;\n\n    const userNoteMutation = trpc.projects.userNote.mutate.useMutation();\n    const onSubmit = useCallback<SubmitHandler<Inputs>>(\n        async ({ contents }) => {\n            await userNoteMutation.mutateAsync({\n                describedProjectId: projectId,\n                contents: contents,\n            });\n        },\n        [projectId, userNoteMutation]\n    );\n\n    const { handleSubmit, control } = useForm<Inputs>({\n        defaultValues: {\n            contents: initialContents || \"\",\n        },\n        mode: \"all\",\n    });\n\n    if (!loggedIn) {\n        return null;\n    }\n\n    return (\n        <div className=\"cohost-shadow-light dark:cohost-shadow-dark flex flex-col divide-y divide-gray-300 rounded-lg bg-white lg:max-w-sm\">\n            <div className=\"flex flex-row items-center rounded-t-lg bg-longan p-3 uppercase text-notBlack\">\n                Private Note\n            </div>\n            <div className=\"flex flex-col gap-2 px-3 py-2 text-notBlack\">\n                <div>\n                    <em>Only you can see this</em>\n                </div>\n                <form\n                    className=\"flex flex-col gap-3\"\n                    onSubmit={handleSubmit(onSubmit)}\n                >\n                    <Controller\n                        control={control}\n                        name=\"contents\"\n                        render={({ field: { ref, onChange, ...field } }) => (\n                            <ExpandingTextArea\n                                {...field}\n                                className=\"border-cherry\"\n                                onInput={onChange}\n                                ref={ref}\n                                minRows={1}\n                                autoComplete=\"off\"\n                                placeholder={t(\n                                    \"client:private-note.placeholder\",\n                                    {\n                                        defaultValue: \"add note\",\n                                    }\n                                )}\n                            />\n                        )}\n                    />\n                    <div className=\"flex w-full flex-row items-center justify-end gap-4\">\n                        {userNoteMutation.isSuccess ? (\n                            <p className=\"font-bold text-green\">Note saved!</p>\n                        ) : null}\n                        {userNoteMutation.isError ? (\n                            <p className=\"text-red\">{`Sorry, we couldn't save your note. ${userNoteMutation.error.message}`}</p>\n                        ) : null}\n                        <button\n                            className={`rounded-lg bg-cherry py-2 px-4 text-sm font-bold text-notWhite\n                        hover:bg-cherry-600 active:bg-cherry-700 disabled:bg-cherry-200`}\n                        >\n                            {t(\"client:new-comment.save\", {\n                                defaultValue: \"save\",\n                            })}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n","import * as React from \"react\";\n\nfunction CheckBadgeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M8.603 3.799A4.49 4.49 0 0112 2.25c1.357 0 2.573.6 3.397 1.549a4.49 4.49 0 013.498 1.307 4.491 4.491 0 011.307 3.497A4.49 4.49 0 0121.75 12a4.49 4.49 0 01-1.549 3.397 4.491 4.491 0 01-1.307 3.497 4.491 4.491 0 01-3.497 1.307A4.49 4.49 0 0112 21.75a4.49 4.49 0 01-3.397-1.549 4.49 4.49 0 01-3.498-1.306 4.491 4.491 0 01-1.307-3.498A4.49 4.49 0 012.25 12c0-1.357.6-2.573 1.549-3.397a4.49 4.49 0 011.307-3.497 4.49 4.49 0 013.497-1.307zm7.007 6.387a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckBadgeIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction UserIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.5 6a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM3.751 20.105a8.25 8.25 0 0116.498 0 .75.75 0 01-.437.695A18.683 18.683 0 0112 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 01-.437-.695z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(UserIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction LinkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M19.902 4.098a3.75 3.75 0 00-5.304 0l-4.5 4.5a3.75 3.75 0 001.035 6.037.75.75 0 01-.646 1.353 5.25 5.25 0 01-1.449-8.45l4.5-4.5a5.25 5.25 0 117.424 7.424l-1.757 1.757a.75.75 0 11-1.06-1.06l1.757-1.757a3.75 3.75 0 000-5.304zm-7.389 4.267a.75.75 0 011-.353 5.25 5.25 0 011.449 8.45l-4.5 4.5a5.25 5.25 0 11-7.424-7.424l1.757-1.757a.75.75 0 111.06 1.06l-1.757 1.757a3.75 3.75 0 105.304 5.304l4.5-4.5a3.75 3.75 0 00-1.035-6.037.75.75 0 01-.354-1z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(LinkIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction CogIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.024 9.25c.47 0 .827-.433.637-.863a4 4 0 00-4.094-2.364c-.468.05-.665.576-.43.984l1.08 1.868a.75.75 0 00.649.375h2.158zM7.84 7.758c-.236-.408-.79-.5-1.068-.12A3.982 3.982 0 006 10c0 .884.287 1.7.772 2.363.278.38.832.287 1.068-.12l1.078-1.868a.75.75 0 000-.75L7.839 7.758zM9.138 12.993c-.235.408-.039.934.43.984a4 4 0 004.094-2.364c.19-.43-.168-.863-.638-.863h-2.158a.75.75 0 00-.65.375l-1.078 1.868z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M14.13 4.347l.644-1.117a.75.75 0 00-1.299-.75l-.644 1.116a6.954 6.954 0 00-2.081-.556V1.75a.75.75 0 00-1.5 0v1.29a6.954 6.954 0 00-2.081.556L6.525 2.48a.75.75 0 10-1.3.75l.645 1.117A7.04 7.04 0 004.347 5.87L3.23 5.225a.75.75 0 10-.75 1.3l1.116.644A6.954 6.954 0 003.04 9.25H1.75a.75.75 0 000 1.5h1.29c.078.733.27 1.433.556 2.081l-1.116.645a.75.75 0 10.75 1.298l1.117-.644a7.04 7.04 0 001.523 1.523l-.645 1.117a.75.75 0 101.3.75l.644-1.116a6.954 6.954 0 002.081.556v1.29a.75.75 0 001.5 0v-1.29a6.954 6.954 0 002.081-.556l.645 1.116a.75.75 0 001.299-.75l-.645-1.117a7.042 7.042 0 001.523-1.523l1.117.644a.75.75 0 00.75-1.298l-1.116-.645a6.954 6.954 0 00.556-2.081h1.29a.75.75 0 000-1.5h-1.29a6.954 6.954 0 00-.556-2.081l1.116-.644a.75.75 0 00-.75-1.3l-1.117.645a7.04 7.04 0 00-1.524-1.523zM10 4.5a5.475 5.475 0 00-2.781.754A5.527 5.527 0 005.22 7.277 5.475 5.475 0 004.5 10a5.475 5.475 0 00.752 2.777 5.527 5.527 0 002.028 2.004c.802.458 1.73.719 2.72.719a5.474 5.474 0 002.78-.753 5.527 5.527 0 002.001-2.027c.458-.802.719-1.73.719-2.72a5.475 5.475 0 00-.753-2.78 5.528 5.528 0 00-2.028-2.002A5.475 5.475 0 0010 4.5z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CogIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction ChevronUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M11.47 7.72a.75.75 0 011.06 0l7.5 7.5a.75.75 0 11-1.06 1.06L12 9.31l-6.97 6.97a.75.75 0 01-1.06-1.06l7.5-7.5z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronUpIcon);\nexport default ForwardRef;","import { WireProjectModel } from \"@/shared/types/projects\";\nimport { validateUrl } from \"@/shared/util/validate-url\";\nimport { ChevronUpIcon, ChevronDownIcon } from \"@heroicons/react/24/solid\";\nimport _ from \"lodash\";\nimport React, { FunctionComponent, ReactNode, useMemo, useState } from \"react\";\n\nfunction displayURL(url: URL): string {\n    return url.toString().split(\"://\")[1];\n}\n\nconst ContactCardValue: FunctionComponent<{\n    value: string;\n}> = ({ value }) => {\n    const validationResult = validateUrl(value);\n\n    if (validationResult.valid) {\n        // turn it into a link\n        return (\n            <a\n                href={value}\n                className=\"text-mango\"\n                rel=\"me nofollow noopener\"\n                target=\"_blank\"\n            >\n                {displayURL(new URL(validationResult.url))}\n            </a>\n        );\n    } else {\n        // just spew out the text\n        return <div>{value}</div>;\n    }\n};\n\nexport const ContactInfoCard: FunctionComponent<\n    React.PropsWithChildren<{\n        project: WireProjectModel;\n    }>\n> = ({ project }) => {\n    const [privateInfoOpen, setPrivateInfoOpen] = useState(false);\n\n    const [publicRows, privateRows] = useMemo(\n        () =>\n            _.partition(\n                project.contactCard,\n                (row) => row.visibility !== \"follows\"\n            ),\n        [project.contactCard]\n    );\n\n    const privateInfoSection = useMemo(() => {\n        if (privateRows.length > 0) {\n            if (privateInfoOpen) {\n                return (\n                    <>\n                        <button\n                            className=\"mt-3 flex w-full flex-row text-notWhite\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                setPrivateInfoOpen(false);\n                            }}\n                            type=\"button\"\n                        >\n                            <div className=\"flex-1 text-left font-bold\">\n                                hide private contact info\n                            </div>\n                            <ChevronUpIcon className=\"h-6\" />\n                        </button>\n\n                        {privateRows.map((row) => (\n                            <div\n                                className=\"mt-3 flex flex-col self-start\"\n                                key={`${row.service}-${row.value}`}\n                            >\n                                <div className=\"font-bold\">{row.service}</div>\n                                <ContactCardValue value={row.value} />\n                            </div>\n                        ))}\n\n                        <hr className=\"mt-3 w-full border-[1px] border-mango\" />\n                    </>\n                );\n            } else {\n                return (\n                    <>\n                        <button\n                            className=\"mt-3 flex w-full flex-row\"\n                            onClick={(e) => {\n                                e.stopPropagation();\n                                setPrivateInfoOpen(true);\n                            }}\n                            type=\"button\"\n                        >\n                            <div className=\"flex-1 text-left font-bold\">\n                                show private contact info\n                            </div>\n                            <ChevronDownIcon className=\"h-6\" />\n                        </button>\n\n                        <hr className=\"mt-3 w-full border-[1px] border-mango\" />\n                    </>\n                );\n            }\n        } else return null; // no private rows\n    }, [privateInfoOpen, privateRows]);\n\n    return (\n        <>\n            {publicRows.length > 0 || privateRows.length > 0 ? (\n                <hr className=\"mt-8 w-full border-[1px] border-mango\" />\n            ) : null}\n\n            {publicRows.map((row) => (\n                <div\n                    className=\"mt-3 flex flex-col self-start\"\n                    key={`${row.service}-${row.value}`}\n                >\n                    <div className=\"font-bold\">{row.service}</div>\n                    <ContactCardValue value={row.value} />\n                </div>\n            ))}\n\n            {privateInfoSection}\n        </>\n    );\n};\n\nexport default ContactInfoCard;\n","import _ from \"lodash\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { Button, LinkButton } from \"@/client/preact/components/elements/button\";\nimport { UserNote } from \"@/client/preact/components/partials/user-note\";\nimport { SilenceIcon } from \"@/client/preact/components/icons/silence\";\nimport { ReportingUIContext } from \"@/client/reporting/machine\";\nimport { sitemap } from \"@/shared/sitemap\";\nimport { AccessFlags, AccessResult } from \"@/shared/types/access-result\";\nimport { ProjectFlag, ProjectPrivacy } from \"@/shared/types/projects\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport { Menu } from \"@headlessui/react\";\nimport {\n    NoSymbolIcon,\n    ShieldExclamationIcon,\n} from \"@heroicons/react/24/outline\";\nimport {\n    CheckBadgeIcon,\n    ChevronDownIcon,\n    EllipsisHorizontalIcon,\n    LinkIcon,\n    UserIcon,\n} from \"@heroicons/react/24/solid\";\nimport { CogIcon, HashtagIcon } from \"@heroicons/react/20/solid\";\nimport React, {\n    FunctionComponent,\n    ReactNode,\n    Suspense,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDisplayPrefs } from \"../../hooks/use-display-prefs\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport { FollowButton } from \"./follow-button\";\nimport { ProjectAvatar } from \"./project-avatar\";\nimport { renderMarkdownReactNoHTML } from \"@/client/lib/markdown/other-rendering\";\nimport { useModalPostComposer } from \"../modal-post-composer-context\";\nimport { useCurrentProject } from \"../../hooks/data-loaders\";\nimport { ContactInfoCard } from \"@/client/preact/components/partials/project-page/contact-info-card\";\nimport { SimpleModalDialog } from \"../elements/simple-modal-dialog\";\n\nfunction displayURL(url: URL): string {\n    return url.toString().split(\"://\")[1];\n}\n\nexport type ProfileViewProps = {\n    project: WireProjectModel;\n    canAccessPermissions: AccessFlags;\n    previewMode?: boolean;\n};\n\nconst ErrorBox: FunctionComponent<\n    React.PropsWithChildren<{ header: string; body: string }>\n> = ({ header, body, children }) => (\n    <div className=\"cohost-shadow-light mt-4 rounded-lg bg-foreground p-3\">\n        <h1 className=\"text-xl font-bold\">{header}</h1>\n\n        <p>{body}</p>\n        {children}\n    </div>\n);\n\nexport const ProfileView: FunctionComponent<\n    React.PropsWithChildren<ProfileViewProps>\n> = ({ project, canAccessPermissions, previewMode = false, children }) => {\n    const { t } = useTranslation();\n    const displayPrefs = useDisplayPrefs();\n    const animate = previewMode || !displayPrefs.pauseProfileGifs;\n    let postFeed: ReactNode;\n\n    const { data: isReaderMuting } = trpc.projects.isReaderMuting.useQuery(\n        {\n            projectHandle: project.handle,\n        },\n        { suspense: true }\n    );\n\n    const { data: isReaderBlocking } = trpc.projects.isReaderBlocking.useQuery(\n        {\n            projectHandle: project.handle,\n        },\n        { suspense: true }\n    );\n\n    const userInfo = useUserInfo();\n    const activeProjectId = userInfo.loggedIn ? userInfo.projectId : null;\n    const [mutedCollapsed, setMutedCollapsed] = useState(true);\n    const shouldMuteCollapse = isReaderMuting && mutedCollapsed;\n    const [blockedCollapsed, setBlockedCollapsed] = useState(true);\n    const shouldBlockCollapse = isReaderBlocking && blockedCollapsed;\n\n    // modal post composer setup\n    const currentProject = useCurrentProject();\n    const modalPostComposer = useModalPostComposer();\n    useEffect(() => {\n        if (currentProject) {\n            modalPostComposer.setup({\n                project: currentProject,\n            });\n        }\n    }, [currentProject, modalPostComposer]);\n\n    const flags = useMemo(\n        () => new Set<ProjectFlag>(project.flags),\n        [project.flags]\n    );\n\n    const renderedDescription = useMemo(\n        () =>\n            renderMarkdownReactNoHTML(project.description, new Date(), {\n                renderingContext: \"profile\",\n                hasCohostPlus: false,\n                disableEmbeds: false,\n                externalLinksInNewTab: displayPrefs.externalLinksInNewTab,\n            }),\n        [displayPrefs.externalLinksInNewTab, project.description]\n    );\n\n    const reportingUIContext = useContext(ReportingUIContext);\n\n    const utils = trpc.useContext();\n\n    const silencingMutationArgs = {\n        onSettled: async () => {\n            return Promise.all([\n                utils.posts.profilePosts.invalidate(),\n                utils.projects.isReaderMuting.invalidate({\n                    projectHandle: project.handle,\n                }),\n            ]);\n        },\n    };\n    const silenceProjectMutation = trpc.relationships.mute.useMutation(\n        silencingMutationArgs\n    );\n    const unsilenceProjectMutation = trpc.relationships.unmute.useMutation(\n        silencingMutationArgs\n    );\n\n    const [silenceConfirmOpen, setSilenceConfirmOpen] = useState(false);\n\n    const onClickSilencing = useCallback(async () => {\n        if (!userInfo.loggedIn) {\n            throw new Error(\"Not logged in\");\n        }\n\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n        if (isReaderMuting)\n            await unsilenceProjectMutation.mutateAsync(mutateArgs);\n        else setSilenceConfirmOpen(true);\n    }, [\n        isReaderMuting,\n        project.projectId,\n        unsilenceProjectMutation,\n        userInfo.loggedIn,\n        userInfo.projectId,\n    ]);\n\n    const onConfirmSilencing = useCallback(async () => {\n        if (!userInfo.loggedIn) {\n            throw new Error(\"Not logged in\");\n        }\n\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        await silenceProjectMutation.mutateAsync(mutateArgs);\n        setSilenceConfirmOpen(false);\n    }, [\n        project.projectId,\n        silenceProjectMutation,\n        userInfo.loggedIn,\n        userInfo.projectId,\n    ]);\n\n    const [blockConfirmOpen, setBlockConfirmOpen] = useState(false);\n\n    const blockingMutationArgs = {\n        onSettled: async () => {\n            return Promise.all([\n                utils.posts.profilePosts.invalidate(),\n                utils.projects.isReaderBlocking.invalidate({\n                    projectHandle: project.handle,\n                }),\n            ]);\n        },\n    };\n    const blockProjectMutation =\n        trpc.relationships.block.useMutation(blockingMutationArgs);\n    const unblockProjectMutation =\n        trpc.relationships.unblock.useMutation(blockingMutationArgs);\n\n    const onClickBlocking = useCallback(async () => {\n        if (!userInfo.loggedIn) {\n            throw new Error(\"Not logged in\");\n        }\n\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n        if (isReaderBlocking)\n            await unblockProjectMutation.mutateAsync(mutateArgs);\n        else setBlockConfirmOpen(true);\n    }, [\n        isReaderBlocking,\n        project.projectId,\n        unblockProjectMutation,\n        userInfo.loggedIn,\n        userInfo.projectId,\n    ]);\n\n    const onConfirmBlocking = useCallback(async () => {\n        if (!userInfo.loggedIn) {\n            throw new Error(\"Not logged in\");\n        }\n\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        await blockProjectMutation.mutateAsync(mutateArgs);\n        setBlockConfirmOpen(false);\n    }, [\n        blockProjectMutation,\n        project.projectId,\n        userInfo.loggedIn,\n        userInfo.projectId,\n    ]);\n\n    if (canAccessPermissions.canRead === AccessResult.Blocked) {\n        postFeed = (\n            <ErrorBox\n                header={t(\n                    \"server:project-page.blocked-headline\",\n                    \"you're blocked by this page\"\n                )}\n                body={t(\n                    \"server:project-page.blocked-detail-text\",\n                    \"they don't want you reading any of their posts\"\n                )}\n            />\n        );\n    } else if (canAccessPermissions.canRead === AccessResult.LogInFirst) {\n        if (project.loggedOutPostVisibility === \"none\") {\n            postFeed = (\n                <ErrorBox\n                    header={t(\n                        \"server:project-page.none-logged-out-headline\",\n                        \"this page is not viewable by logged-out users\"\n                    )}\n                    body={t(\n                        \"server:project-page.none-logged-out-detail-text\",\n                        \"you can view it if you're logged in\"\n                    )}\n                />\n            );\n        }\n    } else if (canAccessPermissions.canRead === AccessResult.NotAllowed) {\n        if (project.privacy === ProjectPrivacy.Private) {\n            if (userInfo.loggedIn) {\n                postFeed = (\n                    <ErrorBox\n                        header={t(\n                            \"server:project-page.private-headline\",\n                            \"this page is private\"\n                        )}\n                        body={t(\n                            \"server:project-page.unfollowed-private-detail-text\",\n                            \"you can only see posts from them if you follow them\"\n                        )}\n                    />\n                );\n            } else {\n                postFeed = (\n                    <ErrorBox\n                        header={t(\n                            \"server:project-page.private-headline\",\n                            \"this page is private\"\n                        )}\n                        body={t(\n                            \"server:project-page.log-in-private-detail-text\",\n                            \"you might be able to see posts from them if you log in\"\n                        )}\n                    />\n                );\n            }\n        }\n    } else if (canAccessPermissions.canRead === AccessResult.Allowed) {\n        // explicitly verify we can read to avoid issues if new states get added\n        if (flags.has(\"suspended\")) {\n            postFeed = (\n                <div>\n                    <ErrorBox\n                        header={t(\n                            \"client:project-page.user-banned-headline\",\n                            \"this page has been banned from cohost\"\n                        )}\n                        body={t(\n                            \"client:project-page.user-banned-body\",\n                            \"due to community guidelines violations, we have banned this page and its operator.\"\n                        )}\n                    />\n                </div>\n            );\n        } else if (shouldMuteCollapse && shouldBlockCollapse) {\n            postFeed = (\n                <div>\n                    <ErrorBox\n                        header={t(\n                            \"client:project-page.muted-and-blocked-headline\",\n                            \"this page is silenced AND blocked\"\n                        )}\n                        body={t(\n                            \"client:project-page.muted-and-blocked-body\",\n                            \"if you really want to, you can view their posts temporarily\"\n                        )}\n                    >\n                        <div className=\"mt-4 flex flex-row justify-center\">\n                            <Button\n                                buttonStyle=\"pill\"\n                                color=\"accent\"\n                                onClick={() => {\n                                    setMutedCollapsed(false);\n                                    setBlockedCollapsed(false);\n                                }}\n                            >\n                                {t(\n                                    \"client:project-page.muted-temporary-view\",\n                                    \"view temporarily\"\n                                )}\n                            </Button>\n                        </div>\n                    </ErrorBox>\n                </div>\n            );\n        } else if (shouldMuteCollapse) {\n            postFeed = (\n                <div>\n                    <ErrorBox\n                        header={t(\n                            \"client:project-page.muted-headline\",\n                            \"this page is silenced\"\n                        )}\n                        body={t(\n                            \"client:project-page.muted-body\",\n                            \"you can either unsilence them or view their posts temporarily\"\n                        )}\n                    >\n                        <div className=\"mt-4 flex flex-row justify-center\">\n                            <Button\n                                buttonStyle=\"pill\"\n                                color=\"accent\"\n                                onClick={() => setMutedCollapsed(false)}\n                            >\n                                {t(\n                                    \"client:project-page.muted-temporary-view\",\n                                    \"view temporarily\"\n                                )}\n                            </Button>\n                        </div>\n                    </ErrorBox>\n                </div>\n            );\n        } else if (shouldBlockCollapse) {\n            postFeed = (\n                <div>\n                    <ErrorBox\n                        header={t(\n                            \"client:project-page.reader-blocking-headline\",\n                            \"this page is blocked\"\n                        )}\n                        body={t(\n                            \"client:project-page.reader-blocking-body\",\n                            \"you can either unblock them or view their posts temporarily\"\n                        )}\n                    >\n                        <div className=\"mt-4 flex flex-row justify-center\">\n                            <Button\n                                buttonStyle=\"pill\"\n                                color=\"accent\"\n                                onClick={() => setBlockedCollapsed(false)}\n                            >\n                                {t(\n                                    \"client:project-page.muted-temporary-view\",\n                                    \"view temporarily\"\n                                )}\n                            </Button>\n                        </div>\n                    </ErrorBox>\n                </div>\n            );\n        } else {\n            postFeed = <Suspense>{children}</Suspense>;\n        }\n    } else {\n        postFeed = (\n            <div>unknown permission state: {canAccessPermissions.canRead}</div>\n        );\n    }\n    return (\n        <>\n            <SimpleModalDialog\n                isOpen={silenceConfirmOpen}\n                title={t(\"client:silence-page.confirm-title\", {\n                    defaultValue: \"Silence this page?\",\n                })}\n                body={t(\"client:silence-page.confirm-body\", {\n                    defaultValue: \"Are you sure you want to silence this page?\",\n                })}\n                confirm={{\n                    label: t(\"common:silence\", \"silence\"),\n                }}\n                cancel={{\n                    label: t(\"common:cancel\", \"cancel\"),\n                }}\n                onConfirm={onConfirmSilencing}\n                onCancel={() => setSilenceConfirmOpen(false)}\n            />\n            <SimpleModalDialog\n                isOpen={blockConfirmOpen}\n                title={t(\"client:block-page.confirm-title\", {\n                    defaultValue: \"Block this page?\",\n                })}\n                body={t(\"client:block-page.confirm-body\", {\n                    defaultValue: \"Are you sure you want to block this page?\",\n                })}\n                confirm={{\n                    label: t(\"common:block\", \"block\"),\n                    color: \"destructive\",\n                }}\n                cancel={{\n                    label: t(\"common:cancel\", \"cancel\"),\n                }}\n                onConfirm={onConfirmBlocking}\n                onCancel={() => setBlockConfirmOpen(false)}\n            />\n            {project.headerURL ? (\n                <img\n                    src={\n                        animate ? project.headerURL : project.headerPreviewURL!\n                    }\n                    className=\"aspect-[44/9] w-full object-cover\"\n                    alt=\"\"\n                />\n            ) : null}\n            <div className=\"grid w-full min-w-0 flex-grow grid-cols-1 gap-6 lg:grid-cols-4\">\n                {/* PROFILE SIDEBAR */}\n                <div className=\"relative col-span-1 flex w-full min-w-0 flex-col break-words bg-foreground p-3 pt-0 lg:items-center\">\n                    <div className=\"relative flex w-full min-w-0 flex-wrap gap-2 break-words lg:items-center lg:gap-0\">\n                        <div className=\"lg:w-full lg:flex-grow\">\n                            <ProjectAvatar\n                                noLink={true}\n                                project={project}\n                                className={`cohost-shadow-light dark:cohost-shadow-dark mx-auto h-20 w-20 lg:h-36 lg:w-36 ${\n                                    project.headerURL\n                                        ? \"-mt-8 lg:-mt-20\"\n                                        : \"mt-4\"\n                                }`}\n                                forceAnimate={previewMode}\n                            />\n                        </div>\n                        <div className=\"flex min-w-0 flex-col break-words lg:flex-grow\">\n                            <div className=\"flex flex-col gap-2 break-words lg:gap-0\">\n                                <h1 className=\"min-w-0 break-words font-atkinson text-2xl font-bold text-text lg:relative lg:mt-4 lg:text-center\">\n                                    {flags.has(\"parody\") ? (\n                                        <div className=\"group  inline\">\n                                            <CheckBadgeIcon className=\"mr-2 inline h-6 w-6 -scale-y-100\" />\n                                            <div className=\"cohost-shadow-light prose invisible absolute left-0 top-8 z-20 w-max max-w-full rounded-lg bg-notWhite p-3 text-center text-sm font-normal text-notBlack group-hover:visible lg:bottom-8 lg:top-auto\">\n                                                <p>\n                                                    cohost staff has verified\n                                                    that this account is{\" \"}\n                                                    <b>not</b> an official\n                                                    representative of the entity\n                                                    in its display name.\n                                                </p>\n                                            </div>\n                                        </div>\n                                    ) : null}\n\n                                    <a\n                                        href={sitemap.public.project\n                                            .mainAppProfile({\n                                                projectHandle: project.handle,\n                                            })\n                                            .toString()}\n                                        className=\"hover:underline\"\n                                    >\n                                        {project.displayName}\n                                    </a>\n                                </h1>\n                                <h2 className=\"font-atkinson text-text lg:min-w-full lg:text-center\">\n                                    <a\n                                        href={sitemap.public.project\n                                            .mainAppProfile({\n                                                projectHandle: project.handle,\n                                            })\n                                            .toString()}\n                                        className=\"hover:underline\"\n                                    >\n                                        @{project.handle}\n                                    </a>\n                                </h2>\n                            </div>\n                            <h3 className=\"font-atkinson text-text lg:text-center\">\n                                {project.dek}\n                            </h3>\n                        </div>\n                    </div>\n                    {userInfo.loggedIn &&\n                    userInfo.projectId !== project.projectId ? (\n                        <div className=\"absolute right-4 top-4\">\n                            <Menu as=\"div\" className=\"relative\">\n                                <Menu.Button className=\"absolute right-0 top-0\">\n                                    <EllipsisHorizontalIcon className=\"h-6 w-6 text-text transition-transform ui-open:rotate-90\" />\n                                </Menu.Button>\n                                <Menu.Items className=\"cohost-shadow-dark absolute right-0 top-8 z-30 flex min-w-max flex-col gap-3 rounded-lg bg-notWhite p-3 text-notBlack focus:!outline-none\">\n                                    <Menu.Item>\n                                        <button\n                                            className=\"flex flex-row gap-2 hover:underline\"\n                                            onClick={onClickSilencing}\n                                        >\n                                            <SilenceIcon className=\"h-6\" />\n                                            {isReaderMuting\n                                                ? t(\n                                                      \"client:unsilence-handle-button\",\n                                                      {\n                                                          defaultValue:\n                                                              \"unsilence @{{projectHandle}}\",\n                                                          projectHandle:\n                                                              project.handle,\n                                                      }\n                                                  )\n                                                : t(\n                                                      \"client:silence-handle-button\",\n                                                      {\n                                                          defaultValue:\n                                                              \"silence @{{projectHandle}}\",\n                                                          projectHandle:\n                                                              project.handle,\n                                                      }\n                                                  )}\n                                        </button>\n                                    </Menu.Item>\n                                    <Menu.Item>\n                                        <button\n                                            className=\"flex flex-row gap-2 hover:underline\"\n                                            onClick={onClickBlocking}\n                                        >\n                                            <NoSymbolIcon className=\"h-6 scale-x-[-1]\" />\n                                            {isReaderBlocking\n                                                ? t(\n                                                      \"client:unblock-handle-button\",\n                                                      {\n                                                          defaultValue:\n                                                              \"unblock @{{projectHandle}}\",\n                                                          projectHandle:\n                                                              project.handle,\n                                                      }\n                                                  )\n                                                : t(\n                                                      \"client:block-handle-button\",\n                                                      {\n                                                          defaultValue:\n                                                              \"block @{{projectHandle}}\",\n                                                          projectHandle:\n                                                              project.handle,\n                                                      }\n                                                  )}\n                                        </button>\n                                    </Menu.Item>\n                                    <Menu.Item>\n                                        <button\n                                            className=\"flex flex-row gap-2 hover:underline\"\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                reportingUIContext.send({\n                                                    type: \"START_REPORT\",\n                                                    projectId:\n                                                        project.projectId,\n                                                });\n                                            }}\n                                        >\n                                            <ShieldExclamationIcon className=\"h-6\" />\n                                            {t(\"client:report-handle-button\", {\n                                                defaultValue:\n                                                    \"report @{{projectHandle}}\",\n                                                projectHandle: project.handle,\n                                            })}\n                                        </button>\n                                    </Menu.Item>\n                                    {userInfo.modMode ? (\n                                        <Menu.Item>\n                                            <a\n                                                className=\"flex flex-row gap-2 hover:underline\"\n                                                href={sitemap.public.moderation\n                                                    .manageProject({\n                                                        projectHandle:\n                                                            project.handle,\n                                                    })\n                                                    .toString()}\n                                            >\n                                                <CogIcon className=\"h-6\" />\n                                                manage project\n                                            </a>\n                                        </Menu.Item>\n                                    ) : null}\n                                </Menu.Items>\n                            </Menu>\n                        </div>\n                    ) : null}\n                    {project.pronouns || project.url ? (\n                        <ul className=\"break-word mb-2 mt-2 flex min-w-0 flex-col justify-around gap-4 text-sm lg:flex-row\">\n                            {project.pronouns ? (\n                                <li>\n                                    <UserIcon className=\"inline-block h-4 text-accent\" />{\" \"}\n                                    {project.pronouns}\n                                </li>\n                            ) : null}\n                            {project.url ? (\n                                <li>\n                                    <LinkIcon className=\"inline-block h-4 text-accent\" />{\" \"}\n                                    {/* it's complaining about the possibility that href=\"#\"; since this is in a profile preview, I'm marking this wontfix for now */}\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                    <a\n                                        href={\n                                            previewMode\n                                                ? \"#\"\n                                                : new URL(\n                                                      project.url\n                                                  ).toString()\n                                        }\n                                        rel=\"me nofollow noopener\"\n                                        target=\"_blank\"\n                                        className=\"break-all text-accent hover:underline\"\n                                    >\n                                        {previewMode\n                                            ? project.url\n                                            : displayURL(new URL(project.url))}\n                                    </a>\n                                </li>\n                            ) : null}\n                        </ul>\n                    ) : null}\n                    <div className=\"prose-invert prose-stone min-w-0 max-w-full overflow-hidden break-words prose-a:text-accent lg:text-center\">\n                        {renderedDescription}\n                    </div>\n                    <div className=\"mt-4 flex flex-row items-center gap-4\">\n                        {canAccessPermissions.canRead !==\n                            AccessResult.Blocked &&\n                        activeProjectId !== project.projectId ? (\n                            <FollowButton project={project} color=\"accent\" />\n                        ) : null}\n\n                        {activeProjectId === project.projectId &&\n                        !previewMode ? (\n                            <>\n                                <LinkButton\n                                    buttonStyle=\"pill\"\n                                    color=\"accent\"\n                                    href={sitemap.public.project\n                                        .profileEdit()\n                                        .toString()}\n                                >\n                                    {t(\n                                        \"client:profile-page.edit-profile-button\",\n                                        \"Edit profile\"\n                                    )}\n                                </LinkButton>\n                                <LinkButton\n                                    buttonStyle=\"pill\"\n                                    color=\"accent\"\n                                    href={sitemap.public.project\n                                        .settings()\n                                        .toString()}\n                                >\n                                    <CogIcon className=\"h-4\" />\n                                </LinkButton>\n                            </>\n                        ) : null}\n                        {project.askSettings.enabled ? (\n                            <LinkButton\n                                buttonStyle=\"pill\"\n                                color=\"accent\"\n                                href={sitemap.public.project\n                                    .ask({ projectHandle: project.handle })\n                                    .toString()}\n                            >\n                                ask\n                            </LinkButton>\n                        ) : null}\n                    </div>\n\n                    <ContactInfoCard project={project} />\n                </div>\n                <div className=\"order-3 col-span-1 mb-16 lg:order-none lg:col-span-2\">\n                    {postFeed}\n                </div>\n                {/* frequently used tags */}\n                <div className=\"order-2 col-span-1 mt-4 w-full lg:order-none lg:mb-16\">\n                    <div className=\"flex flex-col gap-5\">\n                        {project.frequentlyUsedTags.length ? (\n                            <div className=\"cohost-shadow-light dark:cohost-shadow-dark flex flex-col divide-y divide-gray-300 rounded-lg bg-white lg:max-w-sm\">\n                                <div className=\"flex flex-row items-center rounded-t-lg bg-longan p-3 uppercase text-notBlack\">\n                                    Pinned Tags\n                                </div>\n                                <ul className=\"flex flex-row flex-wrap items-center gap-x-2.5 gap-y-3 p-3\">\n                                    {project.frequentlyUsedTags.map((tag) => (\n                                        <li\n                                            key={tag}\n                                            className=\"cursor-pointer select-none\"\n                                        >\n                                            <a\n                                                href={sitemap.public.project\n                                                    .tags({\n                                                        tagSlug: tag,\n                                                        projectHandle:\n                                                            project.handle,\n                                                    })\n                                                    .toString()}\n                                                className=\"flex items-center justify-start gap-1 rounded-full bg-foreground px-2 py-1 leading-none text-text hover:bg-foreground-700\"\n                                            >\n                                                <HashtagIcon className=\"inline-block h-3.5\" />\n                                                <span className=\"block\">\n                                                    {tag}\n                                                </span>\n                                            </a>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        ) : null}\n                        {userInfo.loggedIn &&\n                        userInfo.projectId !== project.projectId ? (\n                            <UserNote projectId={project.projectId} />\n                        ) : null}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ProfileView;\n","type ValidateUrlResult =\n    | {\n          valid: true;\n          url: string;\n      }\n    | { valid: false };\n\nexport function validateUrl(urlString: string): ValidateUrlResult {\n    let urlObj;\n\n    try {\n        urlObj = new URL(urlString);\n    } catch (e) {\n        return { valid: false };\n    }\n\n    if (urlObj.protocol !== \"https:\" && urlObj.protocol !== \"http:\") {\n        return { valid: false };\n    }\n\n    return {\n        valid: true,\n        url: urlObj.toString(),\n    };\n}\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","FollowingState","FollowButton","Suspense","FollowButtonInner","project","onFollow","userInfo","useUserInfo","utils","trpc","followingStateQuery","projectHandle","handle","suspense","ssrUrl","useReqMutableStore","get","createMutationCallbacks","useCallback","optimisticState","onMutate","async","projects","followingState","cancel","previousState","getData","setData","readerToProject","onError","err","params","context","onSettled","invalidate","onSuccess","result","followRequestMutation","privacy","ProjectPrivacy","FollowRequested","Following","unfollowMutation","NotFollowing","cancelFollowRequestMutation","t","useTranslation","data","isConfirmOpen","setIsConfirmOpen","useState","onClickFollow","projectId","mutateArgs","fromProjectId","toProjectId","mutateAsync","onConfirmUnfollow","followButtonText","loggedIn","SimpleModalDialog","isOpen","title","body","confirm","label","onConfirm","onCancel","onClick","href","sitemap","originalUrl","toString","UserNote","initialContents","describedProjectId","refetchInterval","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","enabled","contents","userNoteMutation","onSubmit","handleSubmit","control","useForm","defaultValues","mode","Controller","name","render","field","onChange","ExpandingTextArea","onInput","minRows","autoComplete","placeholder","defaultValue","isSuccess","isError","error","message","titleId","svgRef","Object","assign","xmlns","viewBox","fill","id","fillRule","d","clipRule","ContactCardValue","value","validationResult","validateUrl","valid","rel","target","URL","url","split","ContactInfoCard","privateInfoOpen","setPrivateInfoOpen","publicRows","privateRows","useMemo","_","contactCard","row","visibility","privateInfoSection","length","e","stopPropagation","type","ChevronUpIcon","map","key","service","ChevronDownIcon","ErrorBox","header","ProfileView","canAccessPermissions","previewMode","displayPrefs","useDisplayPrefs","animate","pauseProfileGifs","postFeed","isReaderMuting","isReaderBlocking","activeProjectId","mutedCollapsed","setMutedCollapsed","shouldMuteCollapse","blockedCollapsed","setBlockedCollapsed","shouldBlockCollapse","currentProject","useCurrentProject","modalPostComposer","useModalPostComposer","useEffect","setup","flags","Set","renderedDescription","renderMarkdownReactNoHTML","description","Date","renderingContext","hasCohostPlus","disableEmbeds","externalLinksInNewTab","reportingUIContext","useContext","ReportingUIContext","silencingMutationArgs","Promise","all","posts","profilePosts","silenceProjectMutation","unsilenceProjectMutation","silenceConfirmOpen","setSilenceConfirmOpen","onClickSilencing","Error","onConfirmSilencing","blockConfirmOpen","setBlockConfirmOpen","blockingMutationArgs","blockProjectMutation","unblockProjectMutation","onClickBlocking","onConfirmBlocking","canRead","AccessResult","loggedOutPostVisibility","has","headerURL","src","headerPreviewURL","alt","ProjectAvatar","noLink","forceAnimate","CheckBadgeIcon","dek","Menu","as","EllipsisHorizontalIcon","SilenceIcon","NoSymbolIcon","preventDefault","send","ShieldExclamationIcon","modMode","CogIcon","pronouns","UserIcon","LinkIcon","askSettings","frequentlyUsedTags","tag","tagSlug","HashtagIcon","urlString","urlObj","protocol"],"sourceRoot":""}