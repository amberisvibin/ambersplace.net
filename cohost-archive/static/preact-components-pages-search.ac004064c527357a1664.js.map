{"version":3,"file":"preact-components-pages-search.ac004064c527357a1664.js","mappings":"ocAIO,MAAMA,EAAcC,EAAAA,EAAAA,KAAO,CAAC,OAAQ,YAAa,UAG3CC,EAAcD,EAAAA,EAAAA,KAAO,CAC9B,SACA,aACA,QACA,YACA,MACA,QACA,SACA,YACA,gBACA,gBAWEE,GAPqBF,EAAAA,EAAAA,OAAS,CAChCG,YAAaJ,EACbK,MAAOH,EACPI,UAAWL,EAAAA,EAAAA,SAAWM,aAIPC,GAAAA,CAAW,cAAe,wBAMvCC,EAAcD,GAAAA,CAChB,gBACA,YACA,eACA,YAGEE,EAAmBF,GAAAA,CAAW,SAAU,cAExCG,EAAoBH,GAAAA,CACtB,OACA,OACA,eACA,iBACA,aACA,OACA,WAGEI,EAAgBJ,GAAAA,CAClB,gBACA,kBACA,cACA,uBACA,2BACA,2BACA,6BACA,uBACA,oBACAL,GAEEU,EAAoBL,GAAAA,CACtB,oBACA,sBACA,kBACA,2BACA,+BACA,+BACA,iCACA,2BACA,wBACAL,GAGEW,EAAaN,GAAAA,CACf,aACA,eACA,WACA,oBACA,wBACA,wBACA,0BACA,oBACAL,GAGEY,EAAeP,GAAAA,CACjB,eACA,iBACA,aACA,sBACA,0BACA,0BACA,4BACA,sBACAL,GAEEa,EAAeR,GAAAA,CACjB,eACA,iBACA,aACA,cACA,uBAEES,EAAkBT,GAAAA,CACpB,kBACA,oBACA,gBACA,yBACA,sBACAL,GAGEe,EAAgBV,GAAAA,CAClB,gBACA,cACA,gBACA,kBACA,mBAGEW,EAAmBX,GAAAA,CACrB,eACA,gBACA,qBACA,0BAGEY,EAA2BZ,GAAAA,CAC7B,gBACA,YACA,0BACA,2BACA,8BAGEa,EAAyBb,GAAAA,CAC3B,WACA,oBACA,kBACA,uBAGEc,EAAiBC,GACnBf,GAAAA,CACI,eACA,eACA,OACA,OACA,YACAe,EAAMjB,UACN,CACI,CAACG,GAAoC,SAAtBc,EAAMnB,YACrB,CAACM,GAAyC,cAAtBa,EAAMnB,YAC1B,CAACO,GAA0C,UAAtBY,EAAMnB,YAC3B,CAACQ,GAAgC,WAAhBW,EAAMlB,MACvB,CAACQ,GAAoC,eAAhBU,EAAMlB,MAC3B,CAACW,GAA+B,UAAhBO,EAAMlB,MACtB,CAACY,GAAkC,cAAhBM,EAAMlB,MACzB,CAACS,GAA6B,QAAhBS,EAAMlB,MACpB,CAACa,GAAgC,WAAhBK,EAAMlB,MACvB,CAACU,GAA+B,UAAhBQ,EAAMlB,MACtB,CAACc,GAAmC,cAAhBI,EAAMlB,MAC1B,CAACe,GAA2C,kBAAhBG,EAAMlB,MAClC,CAACgB,GAAyC,gBAAhBE,EAAMlB,QAI/BmB,EAKTC,EAAAA,YAAiB,EAAGrB,YAAAA,EAAaC,MAAAA,EAAOC,UAAAA,KAAciB,GAASG,KAC/D,MAAMC,EAAUL,EAAc,CAC1BlB,YAAAA,EACAC,MAAAA,EACAC,UAAAA,KACGiB,IAEP,OACIE,EAAAA,cAAA,SAAAG,EAAA,GAAYL,EAAK,CAAEjB,UAAWqB,EAASD,IAAKA,IACvCH,EAAMM,aAInBL,EAAOM,YAAc,SAEd,MAAMC,EAKTN,EAAAA,YAAiB,EAAGrB,YAAAA,EAAaC,MAAAA,KAAUkB,GAASG,KACpD,MAAMC,EAAUL,EAAc,CAAElB,YAAAA,EAAaC,MAAAA,KAAUkB,IACvD,OACIE,EAAAA,cAAA,IAAAG,EAAA,GAAOL,EAAK,CAAEjB,UAAWqB,EAASD,IAAKA,IAClCH,EAAMM,aAInBE,EAAWD,YAAc,c,iFCvMlB,MAAME,GAAwBC,E,SAAAA,eAGlC,CAAEC,SAAUA,U,kKCMR,MAAMC,EAAgCA,IAErCV,EAAAA,cAAA,QAAMnB,UAAU,gBACZmB,EAAAA,cAAA,OAAKnB,UAAU,4DACXmB,EAAAA,cAACW,EAAAA,GAAW,MACZX,EAAAA,cAAA,WAASnB,UAAU,iDACfmB,EAAAA,cAAA,OAAKnB,UAAU,4CACXmB,EAAAA,cAACY,EAAAA,SAAQ,KACLZ,EAAAA,cAACa,EAAa,WASpCA,EAAmCA,KACrC,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,OACjCC,EAAOC,IAAYC,EAAAA,EAAAA,WACtB,IAAML,EAAaM,IAAI,MAAQ,MAE5BC,EAAaC,IAAkBH,EAAAA,EAAAA,WAAiB,IAAMF,KACtD,CAAEM,IAAmBC,EAAAA,EAAAA,iBAEtBC,GAAiBC,EAAAA,EAAAA,IAAiBL,EAAa,IAC/CM,GAAaC,EAAAA,EAAAA,IAAaP,GAE1BQ,GAAgBC,EAAAA,EAAAA,cAGjBC,IACG,MAAMC,EAAQD,EAAEE,cAAcD,MAC9Bd,EAASc,GACTT,GAAgB,KACZD,EAAeU,GACfjB,EAAgB,CAAEmB,EAAGF,GAAS,CAAEG,SAAS,SAGjD,CAACpB,IAGL,OACIf,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACoC,EAAAA,GAAM,CAACC,MAAQ,WAAUpB,MAC1BjB,EAAAA,cAAA,OAAKnB,UAAU,uBACXmB,EAAAA,cAAA,MAAInB,UAAU,MAAK,UAInBmB,EAAAA,cAAA,QAAMsC,OAAO,MAAMC,SAAWR,GAAMA,EAAES,kBAClCxC,EAAAA,cAAA,SACIyC,KAAK,OACLC,KAAK,IACLC,YAAY,6BACZ9D,UAAU,SACVmD,MAAOf,EACP2B,SAAUf,MAIhBR,GAAeA,EAAYwB,OAAS,EAClC7C,EAAAA,cAAA,KAAGnB,UAAU,MAAK,iCAClB,KAEHwC,GAAeA,EAAYwB,QAAU,EAClC7C,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,OAAKnB,UAAU,QACXmB,EAAAA,cAAA,MAAInB,UAAU,MAAK,SACnBmB,EAAAA,cAAA,OAAKnB,UAAU,8BACV4C,EAAeqB,UAAUD,OACtBpB,EAAeqB,UAAUC,KAAKC,GAC1BhD,EAAAA,cAACiD,EAAAA,EAAW,CACRD,QAASA,EACTE,IAAKF,EAAQG,cAIrBnD,EAAAA,cAAA,KAAGnB,UAAU,MAAK,qBAK9BmB,EAAAA,cAAA,MAAInB,UAAU,SAEdmB,EAAAA,cAAA,WACIA,EAAAA,cAAA,MAAInB,UAAU,MAAK,QAClB8C,EAAWyB,aAAaC,OAAOR,OAC5B7C,EAAAA,cAAA,OAAKnB,UAAU,4BACV8C,EAAWyB,aAAaC,QAAQN,KAC5BO,GACGtD,EAAAA,cAAA,OACIkD,IAAKI,EAAIC,QACT1E,UAAU,uCAEVmB,EAAAA,cAAA,KACIwD,KAAMC,EAAAA,GAAAA,OAAAA,KACI,CACFC,QACIJ,EAAIC,UAEXI,WACL9E,UAAU,kCAETyE,EAAIC,SAETvD,EAAAA,cAAC4D,EAAAA,GAAiB,CACdC,QAASP,EAAIC,cAOjCvD,EAAAA,cAAA,KAAGnB,UAAU,MAAK,oBAI9B,QAMpB,a,0FCvIO,IAAKiF,EAAc,SAAdA,GAAc,OAAdA,EAAAA,EAAc,+BAAdA,EAAAA,EAAc,qCAAdA,EAAAA,EAAc,yBAAdA,EAAc,KAMQtF,EAAAA,EAAAA,WAAasF,G,+ECsBxC,MAAMC,EAAsDjE,GAE3DE,EAAAA,cAACY,EAAAA,SAAQ,KACLZ,EAAAA,cAACgE,EAAsBlE,IAK7BkE,EAA0DA,EAC5DhB,QAAAA,EACAiB,SAAAA,EACArF,MAAAA,MAEA,MAAMsF,GAAWC,EAAAA,EAAAA,MACXC,EAAQC,EAAAA,EAAAA,aACRC,EAAsBD,EAAAA,EAAAA,SAAAA,eAAAA,SACxB,CAAEE,cAAevB,EAAQwB,QACzB,CAAEC,UAAU,IAGVC,GADWC,EAAAA,EAAAA,MACOvD,IAAI,UAMtBwD,GAA0B9C,EAAAA,EAAAA,cAExB+C,IAgBO,CACHC,SAAUC,gBAGAX,EAAMtB,SAASkC,eAAeC,OAAO,CACvCV,cAAevB,EAAQwB,SAI3B,MAAMU,EAAgBd,EAAMtB,SAASkC,eAAeG,QAChD,CACIZ,cAAevB,EAAQwB,SAa/B,OAPAJ,EAAMtB,SAASkC,eAAeI,QAC1B,CAAEb,cAAevB,EAAQwB,QACzB,CACIa,gBAAiBR,IAIlB,CAAEK,cAAAA,IAEbI,QAASA,CAACC,EAAKC,EAAQC,KAEnBrB,EAAMtB,SAASkC,eAAeI,QAC1B,CAAEb,cAAevB,EAAQwB,QACzBiB,GAASP,gBAGjBQ,UAAWX,gBAEDX,EAAMtB,SAASkC,eAAeW,WAAW,CAC3CpB,cAAevB,EAAQwB,UAG/BoB,UAAYvC,IACJY,GACAA,EAASZ,EAAO2B,oBAKhC,CAACf,EAAUjB,EAAQwB,OAAQJ,EAAMtB,SAASkC,iBAGxCa,EACFxB,EAAAA,EAAAA,cAAAA,oBAAAA,YAAmD,IAC5CO,EACC5B,EAAQ8C,UAAYC,EAAAA,GAAAA,QACdjC,EAAekC,gBACflC,EAAemC,aAG3BC,EAAmB7B,EAAAA,EAAAA,cAAAA,SAAAA,YAAwC,IAC1DO,EAAwBd,EAAeqC,gBAExCC,EACF/B,EAAAA,EAAAA,cAAAA,6BAAAA,YAA4D,IACrDO,EAAwBd,EAAeqC,iBAG5C,EAAEE,IAAMC,EAAAA,EAAAA,MACRtB,EAAiBV,EAAoBiC,MAAMlB,iBAAmB,MAE7DmB,EAAeC,IAAoBtF,EAAAA,EAAAA,WAAS,GAE7CuF,GAAgB5E,EAAAA,EAAAA,cAAYiD,UAC9B,IAAKb,EAASf,UAAW,OACzB,MAAMwD,EAAa,CACfC,cAAe1C,EAASf,UACxB0D,YAAa7D,EAAQG,WAGzB,OAAQ6B,GACJ,KAAKlB,EAAekC,sBAEVI,EAA4BU,YAAYH,GAC9C,MACJ,KAAK7C,EAAeqC,mBAEVN,EAAsBiB,YAAYH,GACxC,MACJ,KAAK7C,EAAemC,UAEhBQ,GAAiB,GACjB,MACJ,KAAK,KAGD,UAET,CACCL,EACAP,EACAb,EACAhC,EAAQG,UACRe,EAASf,YAGP4D,GAAoBjF,EAAAA,EAAAA,cAAYiD,UAClC,IAAKb,EAASf,UAAW,OACzB,MAAMwD,EAAa,CACfC,cAAe1C,EAASf,UACxB0D,YAAa7D,EAAQG,iBAGnB+C,EAAiBY,YAAYH,GACnCF,GAAiB,KAClB,CAACzD,EAAQG,UAAWe,EAASf,UAAW+C,IAE3C,IAAIc,EAAmB,UAEvB,GAAK9C,EAAS+C,SAEP,GAAIjC,IAAmBlB,EAAemC,UACzCe,EAAmBX,EAAE,8BAA+B,iBACjD,GAAIrB,IAAmBlB,EAAeqC,aAErCa,EADAhE,EAAQ8C,UAAYC,EAAAA,GAAAA,QACDM,EACf,oCACA,uBAGeA,EAAE,4BAA6B,cAEnD,IAAIrB,IAAmBlB,EAAekC,gBAMzC,OAAO,KALPgB,EAAmBX,EACf,2CACA,8BAfJW,EAAmBX,EAAE,gBAqBzB,OAAKnC,EAAS+C,SAaVjH,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACkH,EAAAA,EAAiB,CACdC,OAAQX,EACRnE,MAAOgE,EACH,qCACA,uBAEJe,KAAMf,EACF,oCACA,gDAEJgB,QAAS,CAAEC,MAAOjB,EAAE,kBAAmB,aACvCpB,OAAQ,CAAEqC,MAAOjB,EAAE,gBAAiB,WACpCkB,UAAWR,EACXS,SAAUA,IAAMf,GAAiB,KAErCzG,EAAAA,cAACD,EAAAA,GAAM,CAACpB,YAAY,OAAOC,MAAOA,EAAO6I,QAASf,GAC7CM,IA5BLhH,EAAAA,cAACM,EAAAA,GAAU,CACP3B,YAAY,OACZC,MAAOA,EACP4E,KAAMC,EAAAA,GAAAA,OAAAA,MAAqB,CAAEiE,YAAahD,IAAUf,YAEnDqD,K,gJC9MV,MAAMW,EAETA,EAAGC,UAAAA,MACH,MAAM,EAAEvB,IAAMC,EAAAA,EAAAA,MACRpC,GAAWC,EAAAA,EAAAA,OACX,SAAE1D,IAAaoH,EAAAA,EAAAA,YAAWtH,EAAAA,uBAC1B6D,EAAQC,EAAAA,EAAAA,aAERyD,EAA6BC,IACxB,CACHrC,UAAWX,UACPtE,EAASmH,EAAUzE,UAAW4E,SACxB3D,EAAM4D,cAAcC,oBAAoBtC,mBACxCvB,EAAM8D,MAAMC,aAAaxC,gBAKrCyC,EACF/D,EAAAA,EAAAA,cAAAA,oBAAAA,YACIyD,EAA0B,WAE5BO,GAAgBvG,EAAAA,EAAAA,cAAYiD,UACzBb,EAASf,iBAERiF,EAAsBtB,YAAY,CACpCF,cAAegB,EAAUzE,UACzB0D,YAAa3C,EAASf,cAE3B,CAACiF,EAAuBR,EAAUzE,UAAWe,EAASf,YAEnDmF,EACFjE,EAAAA,EAAAA,cAAAA,6BAAAA,YACIyD,EAA0B,YAG5BS,GAAiBzG,EAAAA,EAAAA,cAAYiD,UAC1Bb,EAASf,iBAERmF,EAAuBxB,YAAY,CACrCF,cAAegB,EAAUzE,UACzB0D,YAAa3C,EAASf,cAE3B,CAACmF,EAAwBV,EAAUzE,UAAWe,EAASf,YAE1D,OACInD,EAAAA,cAAA,OAAKnB,UAAU,sCACXmB,EAAAA,cAACD,EAAAA,GAAM,CAACpB,YAAY,OAAOC,MAAM,QAAQ6I,QAASY,GAC7ChC,EACG,+DACA,WAGRrG,EAAAA,cAACD,EAAAA,GAAM,CAACpB,YAAY,OAAOC,MAAM,MAAM6I,QAASc,GAC3ClC,EACG,gEACA,c,eC3Db,MAAMpD,EAAmDA,EAC5DD,QAAAA,EACAwF,gBAAAA,GAAkB,KAGdxI,EAAAA,cAAA,OAAKnB,UAAU,oCACXmB,EAAAA,cAACyI,EAAAA,EAAa,CAACzF,QAASA,IACxBhD,EAAAA,cAAA,OAAKnB,UAAU,wDACXmB,EAAAA,cAAA,OAAKnB,UAAU,0DACXmB,EAAAA,cAAC0I,EAAAA,EAAgB,CAAC1F,QAASA,KAE/BhD,EAAAA,cAAA,SAAIgD,EAAQ2F,MAEhB3I,EAAAA,cAAA,OAAKnB,UAAU,cACd2J,EACGxI,EAAAA,cAAC2H,EAAoB,CAACC,UAAW5E,IAEjChD,EAAAA,cAAC+D,EAAAA,EAAY,CAACf,QAASA,EAASpE,MAAM,a,iJCX/C,MAAMgF,EAA+DA,EACxEC,QAAAA,EACAhF,UAAAA,MAEA,MAAM,SAAEoI,IAAa9C,EAAAA,EAAAA,MACfC,EAAQC,EAAAA,EAAAA,cACNkC,KAAMqC,EAAY,UAAEC,GACxBxE,EAAAA,EAAAA,UAAAA,KAAAA,aAAAA,SACI,CAAER,QAAAA,GACF,CAAEiF,QAAS7B,KAEb,EAAEZ,IAAMC,EAAAA,EAAAA,MACRyC,EAAaH,EACbvC,EAAE,wBAAyB,uBAC3BA,EAAE,sBAAuB,qBAEzB2C,EAAsB3E,EAAAA,EAAAA,UAAAA,KAAAA,OAAAA,YAAuC,CAC/DqB,UAAWA,IACPuD,QAAQC,IAAI,CACR9E,EAAM+E,UAAUC,KAAKR,aAAajD,WAAW,CAAE9B,QAAAA,IAC/CO,EAAM+E,UAAUC,KAAKC,KAAK1D,iBAIhC2D,EAAwBjF,EAAAA,EAAAA,UAAAA,KAAAA,OAAAA,YAAuC,CACjEqB,UAAWA,IACPuD,QAAQC,IAAI,CACR9E,EAAM+E,UAAUC,KAAKR,aAAajD,WAAW,CAAE9B,QAAAA,IAC/CO,EAAM+E,UAAUC,KAAKC,KAAK1D,iBAIhC4D,GAAczH,EAAAA,EAAAA,cAAY,KACxB8G,EACAU,EAAsBE,OAAO,CAAE3F,QAAAA,IAE/BmF,EAAoBQ,OAAO,CAAE3F,QAAAA,MAElC,CAAC+E,EAAcU,EAAuBzF,EAASmF,IAElD,OAAO/B,EACH4B,EACI7I,EAAAA,cAACD,EAAAA,GAAM,CACHlB,UAAWA,EACXF,YAAY,YACZC,MAAM,YACN6I,QAAS8B,GAERR,GAGL/I,EAAAA,cAACD,EAAAA,GAAM,CACHlB,UAAWA,EACXF,YAAY,YACZC,MAAM,YACN6K,UAAQ,GAEPpD,EAAE,mBAGX,MAkDR,KA3CIqD,EAAG7F,QAAAA,EAAS8F,uBAAAA,EAAwBC,yBAAAA,MACpC,MAAMC,GAAeC,EAAAA,EAAAA,MACf5F,GAAWC,EAAAA,EAAAA,MACX4F,GAAqBC,EAAAA,EAAAA,SACvBC,EAAAA,EAAAA,KAAAA,4BAEEC,EAAWP,EAAuBQ,QACnCC,GAC2B,YAAxBA,EAAOC,cACPD,EAAO7G,QAAQ+G,gBAAkBzG,EAAQyG,gBAGjD,OACItK,EAAAA,cAAA,OACI,aAAY6J,EAAaU,QACzB1L,UAAU,oCAETqF,EAAS+C,SACNjH,EAAAA,cAAC4D,EAAiB,CAACC,QAASA,EAAShF,UAAU,SAC/C,KAEJmB,EAAAA,cAAA,MAAInB,UAAU,yBAAwB,IAAEgF,GACxC7D,EAAAA,cAAA,OAAKnB,UAAU,2BACVqL,EAASrH,OAAS,EACf7C,EAAAA,cAAA,MAAInB,UAAU,uBAAsB,QAC1B,IACLqL,EAASnH,KAAKyH,GAAS,IAAGA,EAAIjH,YAAWkH,KAAK,OAEnD,KAEHvG,EAAS+C,UAAY8C,EAClB/J,EAAAA,cAAA,UACInB,UAAU,uCACV4I,QAASA,IAAMmC,EAAyBW,SAASG,QACpD,uBAGD","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/pages/follow-requests-context.ts","webpack:///./preact/components/pages/search.tsx","webpack:///../shared/types/relationships.ts","webpack:///./preact/components/partials/follow-button.tsx","webpack:///./preact/components/partials/follow-request-buttons.tsx","webpack:///./preact/components/partials/project-card.tsx","webpack:///./preact/components/partials/tagged-post-feed.header.tsx"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import { ProjectId } from \"@/shared/types/ids\";\nimport { createContext } from \"react\";\n\nexport type Actions = \"accept\" | \"decline\";\nexport type OnAction = (projectId: ProjectId, action: Actions) => void;\n\nexport const FollowRequestsContext = createContext<{\n    onAction: OnAction;\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n}>({ onAction: () => {} });\n","import sitemap from \"@/shared/sitemap\";\nimport React, {\n    FunctionComponent,\n    Suspense,\n    useCallback,\n    useState,\n    useTransition,\n} from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useProjectSearch, useTagSearch } from \"../../hooks/search\";\nimport { ProjectCard } from \"../partials/project-card\";\nimport { BookmarkTagButton } from \"../partials/tagged-post-feed.header\";\nimport { SidebarMenu } from \"../sidebar-menu\";\n\nexport const SearchPage: FunctionComponent = () => {\n    return (\n        <main className=\"w-full pt-16\">\n            <div className=\"container mx-auto grid grid-cols-1 gap-16 lg:grid-cols-4\">\n                <SidebarMenu />\n                <section className=\"col-span-1 flex flex-col gap-12 lg:col-span-2\">\n                    <div className=\"rounded-lg bg-notWhite p-3 text-notBlack\">\n                        <Suspense>\n                            <SearchResults />\n                        </Suspense>\n                    </div>\n                </section>\n            </div>\n        </main>\n    );\n};\n\nconst SearchResults: FunctionComponent = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [query, setQuery] = useState<string>(\n        () => searchParams.get(\"q\") ?? \"\"\n    );\n    const [searchToken, setSearchToken] = useState<string>(() => query);\n    const [, startTransition] = useTransition();\n\n    const projectResults = useProjectSearch(searchToken, {});\n    const tagResults = useTagSearch(searchToken);\n\n    const onChangeQuery = useCallback<\n        React.ChangeEventHandler<HTMLInputElement>\n    >(\n        (e) => {\n            const value = e.currentTarget.value;\n            setQuery(value);\n            startTransition(() => {\n                setSearchToken(value);\n                setSearchParams({ q: value }, { replace: true });\n            });\n        },\n        [setSearchParams]\n    );\n\n    return (\n        <>\n            <Helmet title={`search: ${query}`} />\n            <div className=\"flex flex-col gap-4\">\n                <h1 className=\"h2\">search</h1>\n                {/* if we've got js, that's great! we're updating on keystrokes\n                anyway. if we don't, the form should still work by changing the\n                query string. */}\n                <form method=\"get\" onSubmit={(e) => e.preventDefault()}>\n                    <input\n                        type=\"text\"\n                        name=\"q\"\n                        placeholder=\"search for pages and tags!\"\n                        className=\"w-full\"\n                        value={query}\n                        onChange={onChangeQuery}\n                    />\n                </form>\n\n                {!searchToken || searchToken.length < 3 ? (\n                    <p className=\"h5\">enter a query to see results!</p>\n                ) : null}\n\n                {searchToken && searchToken.length >= 3 ? (\n                    <>\n                        <div className=\"mt-4\">\n                            <h2 className=\"h5\">pages</h2>\n                            <div className=\"flex w-full flex-col gap-4\">\n                                {projectResults.projects?.length ? (\n                                    projectResults.projects?.map((project) => (\n                                        <ProjectCard\n                                            project={project}\n                                            key={project.projectId}\n                                        />\n                                    ))\n                                ) : (\n                                    <p className=\"h6\">No pages found!</p>\n                                )}\n                            </div>\n                        </div>\n\n                        <hr className=\"my-4\" />\n\n                        <div>\n                            <h2 className=\"h5\">tags</h2>\n                            {tagResults.suggestions?.result.length ? (\n                                <div className=\"mt-4 flex flex-col gap-2\">\n                                    {tagResults.suggestions?.result?.map(\n                                        (tag) => (\n                                            <div\n                                                key={tag.content}\n                                                className=\"flex flex-row justify-between gap-3\"\n                                            >\n                                                <a\n                                                    href={sitemap.public\n                                                        .tags({\n                                                            tagSlug:\n                                                                tag.content,\n                                                        })\n                                                        .toString()}\n                                                    className=\"underline before:content-['#']\"\n                                                >\n                                                    {tag.content}\n                                                </a>\n                                                <BookmarkTagButton\n                                                    tagName={tag.content}\n                                                />\n                                            </div>\n                                        )\n                                    )}\n                                </div>\n                            ) : (\n                                <p className=\"h6\">No tags found!</p>\n                            )}\n                        </div>\n                    </>\n                ) : null}\n            </div>\n        </>\n    );\n};\n\nexport default SearchPage;\n","import { z } from \"zod\";\n\n// actual values don't matter, but higher-numbered following states cover up\n// lower-numbered ones\nexport enum FollowingState {\n    NotFollowing = 0,\n    FollowRequested = 1,\n    Following = 2,\n}\n\nexport const FollowingStateEnum = z.nativeEnum(FollowingState);\nexport type FollowingStateEnum = z.infer<typeof FollowingStateEnum>;\n","import { trpc } from \"@/client/lib/trpc\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { ProjectPrivacy } from \"@/shared/types/projects\";\nimport {\n    FollowingState,\n    FollowingStateEnum,\n} from \"@/shared/types/relationships\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport { UseTRPCMutationOptions } from \"@trpc/react-query/dist/shared\";\nimport React, {\n    FunctionComponent,\n    Suspense,\n    useCallback,\n    useState,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport {\n    Button,\n    SharedProps as ButtonProps,\n    LinkButton,\n} from \"../elements/button\";\nimport sitemap from \"@/shared/sitemap\";\nimport { useReqMutableStore } from \"../../providers/req-mutable-store\";\nimport { SimpleModalDialog } from \"@/client/preact/components/elements/simple-modal-dialog\";\n\ntype FollowButtonProps = {\n    project: WireProjectModel;\n    onFollow?: (newFollowingState: FollowingState) => void;\n    color: ButtonProps[\"color\"];\n};\n\nexport const FollowButton: FunctionComponent<FollowButtonProps> = (props) => {\n    return (\n        <Suspense>\n            <FollowButtonInner {...props} />\n        </Suspense>\n    );\n};\n\nconst FollowButtonInner: FunctionComponent<FollowButtonProps> = ({\n    project,\n    onFollow,\n    color,\n}) => {\n    const userInfo = useUserInfo();\n    const utils = trpc.useContext();\n    const followingStateQuery = trpc.projects.followingState.useQuery(\n        { projectHandle: project.handle },\n        { suspense: true }\n    );\n    const reqStore = useReqMutableStore();\n    const ssrUrl = reqStore.get(\"ssrUrl\");\n\n    // big ol boilerplate to generate the optimistic update callbacks. this can\n    // _probably_ be cleaned up somewhat, but doing so would require a bunch of\n    // type finangaling that likely isn't worth doing in a component we never\n    // actually touch.\n    const createMutationCallbacks = useCallback(\n        (\n            optimisticState: FollowingState\n        ): UseTRPCMutationOptions<\n            {\n                fromProjectId: ProjectId;\n                toProjectId: ProjectId;\n            },\n            unknown,\n            {\n                followingState: FollowingStateEnum;\n            },\n            {\n                previousState?: {\n                    readerToProject: FollowingState;\n                };\n            }\n        > => {\n            return {\n                onMutate: async () => {\n                    // cancel any pending requests so they don't overwrite our\n                    // optimistic update\n                    await utils.projects.followingState.cancel({\n                        projectHandle: project.handle,\n                    });\n\n                    // snapshot the previous value\n                    const previousState = utils.projects.followingState.getData(\n                        {\n                            projectHandle: project.handle,\n                        }\n                    );\n\n                    // optimistic update\n                    // cancel follow request -> not following\n                    utils.projects.followingState.setData(\n                        { projectHandle: project.handle },\n                        {\n                            readerToProject: optimisticState,\n                        }\n                    );\n\n                    return { previousState };\n                },\n                onError: (err, params, context) => {\n                    // mutation failed, reset back to the previous state\n                    utils.projects.followingState.setData(\n                        { projectHandle: project.handle },\n                        context?.previousState\n                    );\n                },\n                onSettled: async () => {\n                    // refetch so we know we're For Sure accurate\n                    await utils.projects.followingState.invalidate({\n                        projectHandle: project.handle,\n                    });\n                },\n                onSuccess: (result) => {\n                    if (onFollow) {\n                        onFollow(result.followingState);\n                    }\n                },\n            };\n        },\n        [onFollow, project.handle, utils.projects.followingState]\n    );\n\n    const followRequestMutation =\n        trpc.relationships.createFollowRequest.useMutation({\n            ...createMutationCallbacks(\n                project.privacy === ProjectPrivacy.Private\n                    ? FollowingState.FollowRequested\n                    : FollowingState.Following\n            ),\n        });\n    const unfollowMutation = trpc.relationships.unfollow.useMutation({\n        ...createMutationCallbacks(FollowingState.NotFollowing),\n    });\n    const cancelFollowRequestMutation =\n        trpc.relationships.declineOrCancelFollowRequest.useMutation({\n            ...createMutationCallbacks(FollowingState.NotFollowing),\n        });\n\n    const { t } = useTranslation();\n    const followingState = followingStateQuery.data?.readerToProject ?? null;\n\n    const [isConfirmOpen, setIsConfirmOpen] = useState(false);\n\n    const onClickFollow = useCallback(async () => {\n        if (!userInfo.projectId) return;\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        switch (followingState) {\n            case FollowingState.FollowRequested:\n                // pending request; cancel follow request\n                await cancelFollowRequestMutation.mutateAsync(mutateArgs);\n                break;\n            case FollowingState.NotFollowing:\n                // not following; follow\n                await followRequestMutation.mutateAsync(mutateArgs);\n                break;\n            case FollowingState.Following:\n                // following; unfollow.  this causes a confirmation dialog box.\n                setIsConfirmOpen(true);\n                break;\n            case null:\n                // following state is only null when we don't know what we're\n                // doing or user is logged out. just exit out.\n                return;\n        }\n    }, [\n        cancelFollowRequestMutation,\n        followRequestMutation,\n        followingState,\n        project.projectId,\n        userInfo.projectId,\n    ]);\n\n    const onConfirmUnfollow = useCallback(async () => {\n        if (!userInfo.projectId) return;\n        const mutateArgs = {\n            fromProjectId: userInfo.projectId,\n            toProjectId: project.projectId,\n        };\n\n        await unfollowMutation.mutateAsync(mutateArgs);\n        setIsConfirmOpen(false);\n    }, [project.projectId, userInfo.projectId, unfollowMutation]);\n\n    let followButtonText = \"unknown\";\n\n    if (!userInfo.loggedIn) {\n        followButtonText = t(\"common:login\");\n    } else if (followingState === FollowingState.Following) {\n        followButtonText = t(\"client:page.unfollow-button\", \"unfollow\");\n    } else if (followingState === FollowingState.NotFollowing) {\n        if (project.privacy === ProjectPrivacy.Private) {\n            followButtonText = t(\n                \"client:page.follow-request-button\",\n                \"send follow request\"\n            );\n        } else {\n            followButtonText = t(\"client:page.follow-button\", \"follow\");\n        }\n    } else if (followingState === FollowingState.FollowRequested) {\n        followButtonText = t(\n            \"client:page.cancel-follow-request-button\",\n            \"cancel follow request\"\n        );\n    } else {\n        return null;\n    }\n\n    if (!userInfo.loggedIn) {\n        return (\n            <LinkButton\n                buttonStyle=\"pill\"\n                color={color}\n                href={sitemap.public.login({ originalUrl: ssrUrl }).toString()}\n            >\n                {followButtonText}\n            </LinkButton>\n        );\n    }\n\n    return (\n        <>\n            <SimpleModalDialog\n                isOpen={isConfirmOpen}\n                title={t(\n                    \"client:unfollow-page.confirm-title\",\n                    \"Unfollow this page?\"\n                )}\n                body={t(\n                    \"client:unfollow-page.confirm-body\",\n                    \"Are you sure you want to unfollow this page?\"\n                )}\n                confirm={{ label: t(\"common:unfollow\", \"unfollow\") }}\n                cancel={{ label: t(\"common:cancel\", \"cancel\") }}\n                onConfirm={onConfirmUnfollow}\n                onCancel={() => setIsConfirmOpen(false)}\n            />\n            <Button buttonStyle=\"pill\" color={color} onClick={onClickFollow}>\n                {followButtonText}\n            </Button>\n        </>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport {\n    type Actions,\n    FollowRequestsContext,\n} from \"@/client/preact/components/pages/follow-requests-context\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent, useCallback, useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport { Button } from \"../elements/button\";\n\ntype FollowRequestButtonsProps = {\n    requester: WireProjectModel;\n};\n\nexport const FollowRequestButtons: FunctionComponent<\n    FollowRequestButtonsProps\n> = ({ requester }) => {\n    const { t } = useTranslation();\n    const userInfo = useUserInfo();\n    const { onAction } = useContext(FollowRequestsContext);\n    const utils = trpc.useContext();\n\n    const createRequestMutationArgs = (action: Actions) => {\n        return {\n            onSettled: async () => {\n                onAction(requester.projectId, action);\n                await utils.relationships.countFollowRequests.invalidate();\n                await utils.posts.profilePosts.invalidate();\n            },\n        };\n    };\n\n    const acceptRequestMutation =\n        trpc.relationships.acceptFollowRequest.useMutation(\n            createRequestMutationArgs(\"accept\")\n        );\n    const onClickAccept = useCallback(async () => {\n        if (!userInfo.projectId) return;\n\n        await acceptRequestMutation.mutateAsync({\n            fromProjectId: requester.projectId,\n            toProjectId: userInfo.projectId,\n        });\n    }, [acceptRequestMutation, requester.projectId, userInfo.projectId]);\n\n    const declineRequestMutation =\n        trpc.relationships.declineOrCancelFollowRequest.useMutation(\n            createRequestMutationArgs(\"decline\")\n        );\n\n    const onClickDecline = useCallback(async () => {\n        if (!userInfo.projectId) return;\n\n        await declineRequestMutation.mutateAsync({\n            fromProjectId: requester.projectId,\n            toProjectId: userInfo.projectId,\n        });\n    }, [declineRequestMutation, requester.projectId, userInfo.projectId]);\n\n    return (\n        <div className=\"flex flex-row justify-center gap-2\">\n            <Button buttonStyle=\"pill\" color=\"green\" onClick={onClickAccept}>\n                {t(\n                    \"server:relationships.accept-follow-request-button-text-short\",\n                    \"accept\"\n                )}\n            </Button>\n            <Button buttonStyle=\"pill\" color=\"red\" onClick={onClickDecline}>\n                {t(\n                    \"server:relationships.decline-follow-request-button-text-short\",\n                    \"decline\"\n                )}\n            </Button>\n        </div>\n    );\n};\n","import { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent } from \"react\";\nimport { ProjectReference } from \"../project-reference\";\nimport { FollowButton } from \"./follow-button\";\nimport { FollowRequestButtons } from \"./follow-request-buttons\";\nimport { ProjectAvatar } from \"./project-avatar\";\n\ntype ProjectCardProps = {\n    project: WireProjectModel;\n    isFollowRequest?: boolean;\n};\n\nexport const ProjectCard: FunctionComponent<ProjectCardProps> = ({\n    project,\n    isFollowRequest = false,\n}) => {\n    return (\n        <div className=\"flex flex-row items-center gap-1\">\n            <ProjectAvatar project={project} />\n            <div className=\"min-w-0 flex-shrink justify-center gap-0 lg:flex-row\">\n                <div className=\"items-left flex flex-shrink flex-row gap-1 lg:flex-col\">\n                    <ProjectReference project={project} />\n                </div>\n                <p>{project.dek}</p>\n            </div>\n            <div className=\"flex-grow\" />\n            {isFollowRequest ? (\n                <FollowRequestButtons requester={project} />\n            ) : (\n                <FollowButton project={project} color=\"cherry\" />\n            )}\n        </div>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport React, { FunctionComponent, useCallback } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\nimport { Button } from \"../elements/button\";\nimport type {\n    ModalTagSuggestionDialogRef,\n    TaggedPostFeedProps,\n} from \"../pages/tagged-post-feed\";\nimport { useDynamicTheme } from \"../../hooks/dynamic-theme\";\nimport { FeatureFlag } from \"@/shared/types/feature-flags\";\nimport { useFlag } from \"@unleash/proxy-client-react\";\n\ntype BookmarkTagButtonProps = {\n    tagName: string;\n    className?: string;\n};\n\nexport const BookmarkTagButton: FunctionComponent<BookmarkTagButtonProps> = ({\n    tagName,\n    className,\n}) => {\n    const { loggedIn } = useUserInfo();\n    const utils = trpc.useContext();\n    const { data: isBookmarked, isFetched } =\n        trpc.bookmarks.tags.isBookmarked.useQuery(\n            { tagName },\n            { enabled: loggedIn }\n        );\n    const { t } = useTranslation();\n    const buttonText = isBookmarked\n        ? t(\"common:unbookmark-tag\", \"unbookmark this tag\")\n        : t(\"common:bookmark-tag\", \"bookmark this tag\");\n\n    const bookmarkTagMutation = trpc.bookmarks.tags.create.useMutation({\n        onSettled: () =>\n            Promise.all([\n                utils.bookmarks.tags.isBookmarked.invalidate({ tagName }),\n                utils.bookmarks.tags.list.invalidate(),\n            ]),\n    });\n\n    const unbookmarkTagMutation = trpc.bookmarks.tags.delete.useMutation({\n        onSettled: () =>\n            Promise.all([\n                utils.bookmarks.tags.isBookmarked.invalidate({ tagName }),\n                utils.bookmarks.tags.list.invalidate(),\n            ]),\n    });\n\n    const bookmarkTag = useCallback(() => {\n        if (isBookmarked) {\n            unbookmarkTagMutation.mutate({ tagName });\n        } else {\n            bookmarkTagMutation.mutate({ tagName });\n        }\n    }, [isBookmarked, unbookmarkTagMutation, tagName, bookmarkTagMutation]);\n\n    return loggedIn ? (\n        isFetched ? (\n            <Button\n                className={className}\n                buttonStyle=\"roundrect\"\n                color=\"secondary\"\n                onClick={bookmarkTag}\n            >\n                {buttonText}\n            </Button>\n        ) : (\n            <Button\n                className={className}\n                buttonStyle=\"roundrect\"\n                color=\"secondary\"\n                disabled\n            >\n                {t(\"common:loading\")}\n            </Button>\n        )\n    ) : null;\n};\n\nexport const TaggedPostFeedHeader: FunctionComponent<\n    Pick<TaggedPostFeedProps, \"tagName\" | \"synonymsAndRelatedTags\"> & {\n        modalSuggestionDialogRef: React.RefObject<ModalTagSuggestionDialogRef>;\n    }\n> = ({ tagName, synonymsAndRelatedTags, modalSuggestionDialogRef }) => {\n    const dynamicTheme = useDynamicTheme();\n    const userInfo = useUserInfo();\n    const featureFlagEnabled = useFlag(\n        FeatureFlag.Enum[\"tag-relation-request-ui\"]\n    );\n    const synonyms = synonymsAndRelatedTags.filter(\n        (synrel) =>\n            synrel.relationship === \"synonym\" &&\n            synrel.content.toLowerCase() !== tagName.toLowerCase()\n    );\n\n    return (\n        <div\n            data-theme={dynamicTheme.current}\n            className=\"co-themed-box mb-12 items-center\"\n        >\n            {userInfo.loggedIn ? (\n                <BookmarkTagButton tagName={tagName} className=\"mb-4\" />\n            ) : null}\n\n            <h4 className=\"h4 flex-1 text-bgText\">#{tagName}</h4>\n            <div className=\"flex flex-row flex-wrap\">\n                {synonyms.length > 0 ? (\n                    <h6 className=\"h6 pr-3 text-bgText\">\n                        also:{\" \"}\n                        {synonyms.map((syn) => `#${syn.content}`).join(\", \")}\n                    </h6>\n                ) : null}\n\n                {userInfo.loggedIn && featureFlagEnabled ? (\n                    <button\n                        className=\"h6 co-link-button-disabled underline\"\n                        onClick={() => modalSuggestionDialogRef.current?.open()}\n                    >\n                        suggest tag synonym\n                    </button>\n                ) : null}\n            </div>\n        </div>\n    );\n};\n\nexport default TaggedPostFeedHeader;\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","FollowRequestsContext","createContext","onAction","SearchPage","SidebarMenu","Suspense","SearchResults","searchParams","setSearchParams","useSearchParams","query","setQuery","useState","get","searchToken","setSearchToken","startTransition","useTransition","projectResults","useProjectSearch","tagResults","useTagSearch","onChangeQuery","useCallback","e","value","currentTarget","q","replace","Helmet","title","method","onSubmit","preventDefault","type","name","placeholder","onChange","length","projects","map","project","ProjectCard","key","projectId","suggestions","result","tag","content","href","sitemap","tagSlug","toString","BookmarkTagButton","tagName","FollowingState","FollowButton","FollowButtonInner","onFollow","userInfo","useUserInfo","utils","trpc","followingStateQuery","projectHandle","handle","suspense","ssrUrl","useReqMutableStore","createMutationCallbacks","optimisticState","onMutate","async","followingState","cancel","previousState","getData","setData","readerToProject","onError","err","params","context","onSettled","invalidate","onSuccess","followRequestMutation","privacy","ProjectPrivacy","FollowRequested","Following","unfollowMutation","NotFollowing","cancelFollowRequestMutation","t","useTranslation","data","isConfirmOpen","setIsConfirmOpen","onClickFollow","mutateArgs","fromProjectId","toProjectId","mutateAsync","onConfirmUnfollow","followButtonText","loggedIn","SimpleModalDialog","isOpen","body","confirm","label","onConfirm","onCancel","onClick","originalUrl","FollowRequestButtons","requester","useContext","createRequestMutationArgs","action","relationships","countFollowRequests","posts","profilePosts","acceptRequestMutation","onClickAccept","declineRequestMutation","onClickDecline","isFollowRequest","ProjectAvatar","ProjectReference","dek","isBookmarked","isFetched","enabled","buttonText","bookmarkTagMutation","Promise","all","bookmarks","tags","list","unbookmarkTagMutation","bookmarkTag","mutate","disabled","TaggedPostFeedHeader","synonymsAndRelatedTags","modalSuggestionDialogRef","dynamicTheme","useDynamicTheme","featureFlagEnabled","useFlag","FeatureFlag","synonyms","filter","synrel","relationship","toLowerCase","current","syn","join","open"],"sourceRoot":""}