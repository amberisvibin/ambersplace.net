{"version":3,"file":"client-preact-components-pages-moderation-manage-ask.b293664e96951ccdf13b.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/20/solid/esm/ChevronDownIcon.js","webpack:///./preact/components/pages/moderation/manage-ask.tsx"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import * as React from \"react\";\n\nfunction ChevronDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import sitemap from \"@/shared/sitemap\";\nimport { WireAskModel, WireAskModelModExtensions } from \"@/shared/types/asks\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport { WirePostViewModel, WireUserModel } from \"@/shared/types/wire-models\";\nimport React, { FunctionComponent, useCallback } from \"react\";\nimport { Disclosure } from \"@headlessui/react\";\nimport Ask from \"@/client/preact/components/posts/blocks/ask\";\nimport { Button } from \"../../elements/button\";\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { AskId } from \"@/shared/types/ids\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { toast } from \"react-hot-toast\";\nimport { TRPCClientError } from \"@trpc/client\";\n\ntype ManageAskPageProps = {\n    ask: WireAskModelModExtensions;\n    sendingProject?: WireProjectModel;\n    sendingUser?: WireUserModel;\n    respondingProject: WireProjectModel;\n    responsePost?: WirePostViewModel;\n};\n\nexport const ManageAskPage: FunctionComponent<ManageAskPageProps> = ({\n    ask,\n    sendingProject,\n    sendingUser,\n    respondingProject,\n    responsePost,\n}) => {\n    return (\n        <div\n            className=\"cohost-shadow-light dark:cohost-shadow-dark\n                        container mx-auto mt-12\n                        flex flex-col gap-4\n                        rounded-lg bg-notWhite\n                        p-3\n                        text-notBlack\"\n        >\n            <h1 className=\"text-4xl font-bold\">manage ask</h1>\n            <div className=\"prose\">\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>ask ID</td>\n                            <td>{ask.askId}</td>\n                        </tr>\n                        <tr>\n                            <td>sent at</td>\n                            <td>{ask.sentAt}</td>\n                        </tr>\n                        <tr>\n                            <td>anon?</td>\n                            <td>{ask.anon.toString()}</td>\n                        </tr>\n                        <tr>\n                            <td>sent by</td>\n                            <td>\n                                {sendingProject ? (\n                                    <>\n                                        <a\n                                            href={sitemap.public.moderation\n                                                .manageProject({\n                                                    projectHandle:\n                                                        sendingProject.handle,\n                                                })\n                                                .toString()}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            @{sendingProject.handle}\n                                        </a>\n                                        {sendingUser ? (\n                                            <>\n                                                {\" \"}\n                                                <a\n                                                    href={sitemap.public.moderation\n                                                        .manageUser({\n                                                            userId: sendingUser.userId,\n                                                        })\n                                                        .toString()}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                >\n                                                    ({sendingUser.email})\n                                                </a>\n                                            </>\n                                        ) : null}\n                                    </>\n                                ) : (\n                                    \"unknown (was not logged in)\"\n                                )}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>state</td>\n                            <td>{ask.state}</td>\n                        </tr>\n                        <tr>\n                            <td>response</td>\n                            <td>\n                                {responsePost ? (\n                                    <>\n                                        <a\n                                            href={\n                                                responsePost.singlePostPageUrl\n                                            }\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            post ID {responsePost.postId}\n                                        </a>{\" \"}\n                                        <a\n                                            href={sitemap.public.moderation\n                                                .managePost({\n                                                    postId: responsePost.postId,\n                                                })\n                                                .toString()}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            (manage)\n                                        </a>\n                                    </>\n                                ) : (\n                                    \"not yet\"\n                                )}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <hr />\n                <div>\n                    <h2>ask text</h2>\n                    <pre>\n                        <code>{ask.content}</code>\n                    </pre>\n                </div>\n            </div>\n            <Disclosure as=\"div\" className=\"flex flex-col gap-4\">\n                <Disclosure.Button\n                    as={Button}\n                    buttonStyle=\"authn\"\n                    color=\"authn-primary\"\n                >\n                    <ChevronDownIcon className=\"inline-block h-5 w-5 transition-transform ui-open:rotate-180\" />\n                    Preview rendered\n                </Disclosure.Button>\n                <Disclosure.Panel>\n                    <Ask askBlock={{ type: \"ask\", ask }} />\n                </Disclosure.Panel>\n            </Disclosure>\n            <hr />\n            <div className=\"prose\">\n                <h2>actions</h2>\n                <DeleteAskButton ask={ask} />\n            </div>\n        </div>\n    );\n};\n\nconst DeleteAskButton: FunctionComponent<{\n    ask: WireAskModel;\n}> = ({ ask }) => {\n    const { handleSubmit } = useForm<{ askId: AskId }>({\n        defaultValues: { askId: ask.askId },\n    });\n\n    const rejectAskMutation = trpc.asks.reject.useMutation();\n\n    const onSubmit = useCallback<SubmitHandler<{ askId: AskId }>>(\n        ({ askId }) => {\n            // some weird type stuff going on here, hence the casting\n            const promise = rejectAskMutation.mutateAsync(askId as AskId);\n            toast\n                .promise(promise, {\n                    loading: \"deleting ask...\",\n                    success: \"ask deleted\",\n                    error(err) {\n                        if (err instanceof TRPCClientError) {\n                            return err.message;\n                        }\n\n                        return \"unknown error deleting ask\";\n                    },\n                })\n                .catch(() => null);\n        },\n        [rejectAskMutation]\n    );\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <Button buttonStyle=\"authn\" color=\"authn-primary\" type=\"submit\">\n                delete ask\n            </Button>\n        </form>\n    );\n};\n\nexport default ManageAskPage;\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","title","titleId","svgRef","Object","assign","xmlns","viewBox","fill","id","fillRule","d","clipRule","ManageAskPage","ask","sendingProject","sendingUser","respondingProject","responsePost","askId","sentAt","anon","toString","href","sitemap","projectHandle","handle","target","rel","userId","email","state","singlePostPageUrl","postId","content","Disclosure","as","ChevronDownIcon","Ask","askBlock","type","DeleteAskButton","handleSubmit","useForm","defaultValues","rejectAskMutation","trpc","onSubmit","useCallback","promise","mutateAsync","toast","loading","success","error","err","TRPCClientError","message","catch"],"sourceRoot":""}