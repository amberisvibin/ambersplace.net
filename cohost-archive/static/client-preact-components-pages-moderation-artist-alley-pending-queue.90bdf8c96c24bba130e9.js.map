{"version":3,"file":"client-preact-components-pages-moderation-artist-alley-pending-queue.90bdf8c96c24bba130e9.js","mappings":"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","sources":["webpack:///./preact/components/artist-alley/artist-alley-filter-provider.tsx","webpack:///./preact/components/artist-alley/artist-alley-listing.tsx","webpack:///./preact/components/moderation/maintenance/artist-alley/artist-alley-mod-listing.tsx","webpack:///./preact/components/pages/moderation/artist-alley-pending-queue.tsx"],"sourcesContent":["import { CategoryMatch, SortOrder } from \"@/shared/api-types/artist-alley-v1\";\nimport { ArtistAlleyAdultDisplayMode } from \"@/shared/types/artist-alley\";\nimport React, { useContext } from \"react\";\n\nexport const ArtistAlleyFilterProvider = React.createContext<{\n    adultFilterMode: ArtistAlleyAdultDisplayMode;\n    isAdult: boolean;\n    categories: Set<string>;\n    setAdultFilterMode: (mode: ArtistAlleyAdultDisplayMode) => void;\n    categoryMatch: CategoryMatch;\n    setCategoryMatch: (mode: CategoryMatch) => void;\n    sortOrder: SortOrder;\n    setSortOrder: (order: SortOrder) => void;\n}>({\n    adultFilterMode: \"hide\",\n    isAdult: false,\n    categories: new Set(),\n    setAdultFilterMode: () => {},\n    categoryMatch: \"any\",\n    setCategoryMatch: () => {},\n    sortOrder: \"random\",\n    setSortOrder: () => {},\n});\n\nexport const useArtistAlleyFilters = () => {\n    return useContext(ArtistAlleyFilterProvider);\n};\n","import { renderMarkdownReactNoHTML } from \"@/client/lib/markdown/other-rendering\";\nimport { tw } from \"@/client/lib/tw-tagged-literal\";\nimport sitemap from \"@/shared/sitemap\";\nimport {\n    ArtistAlleyWireAttachment,\n    WireArtistAlley,\n} from \"@/shared/types/artist-alley\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { useContext, useMemo, useState } from \"react\";\nimport { useDynamicTheme } from \"../../hooks/dynamic-theme\";\nimport { useDisplayPrefs } from \"../../hooks/use-display-prefs\";\nimport { useImageOptimizer } from \"../../hooks/use-image-optimizer\";\nimport { BasicButton } from \"../elements/basic-button\";\nimport { PlayPauseButton } from \"../elements/play-pause-button\";\nimport { ProjectAvatar } from \"../partials/project-avatar\";\nimport { useArtistAlleyFilters } from \"./artist-alley-filter-provider\";\nimport { Menu } from \"@headlessui/react\";\nimport {\n    EyeIcon as EyeIconOutline,\n    EyeSlashIcon as EyeSlashIconOutline,\n    ShareIcon,\n    ShieldExclamationIcon as ShieldExclamationIconOutline,\n    TrashIcon as TrashIconOutline,\n} from \"@heroicons/react/24/outline\";\nimport {\n    ArrowUturnLeftIcon,\n    EllipsisHorizontalIcon,\n} from \"@heroicons/react/24/solid\";\nimport { MeatballMenuItem } from \"../elements/meatball-menu-item\";\nimport { ReportingUIContext } from \"@/client/reporting/machine\";\n\nconst ASPECT_RATIO = 300 / 250;\n\nconst ArtistAlleyAttachment: React.FC<{\n    attachment: ArtistAlleyWireAttachment;\n}> = ({ attachment }) => {\n    const displayPrefs = useDisplayPrefs();\n    const [src, setSrc] = useState(\n        displayPrefs.gifsStartPaused\n            ? attachment.previewURL\n            : attachment.fileURL\n    );\n    const [isPlaying, setIsPlaying] = useState(!displayPrefs.gifsStartPaused);\n\n    const srcWithDpr = useImageOptimizer(src, 300, ASPECT_RATIO);\n\n    const handlePause = () => {\n        setIsPlaying(false);\n        setSrc(attachment.previewURL);\n    };\n\n    const handlePlay = () => {\n        setIsPlaying(true);\n        setSrc(attachment.fileURL);\n    };\n\n    return (\n        <div className=\"group relative\">\n            <img\n                src={srcWithDpr(1)}\n                srcSet={`\n                ${srcWithDpr(1)} 1x,\n                ${srcWithDpr(2)} 2x,\n                ${srcWithDpr(3)} 3x,\n            `}\n                alt={attachment.altText}\n                className=\"co-border aspect-[300/250] w-full border-b object-cover\"\n            />\n\n            {attachment.previewURL !== attachment.fileURL && (\n                <PlayPauseButton\n                    isPlaying={isPlaying}\n                    showPlay={attachment.previewURL !== attachment.fileURL}\n                    extraClasses=\"absolute bottom-3 right-3 w-12\"\n                    onPlay={handlePlay}\n                    onPause={handlePause}\n                />\n            )}\n        </div>\n    );\n};\n\nconst ArtistAlleyMeatballMenu: React.FC<{ listing: WireArtistAlley }> = ({\n    listing,\n}) => {\n    const reportingUIContext = useContext(ReportingUIContext);\n\n    return (\n        // explicit height is required to vertically align the\n        // meatballs with the rest of the action buttons\n        <Menu as=\"div\" className=\"relative h-6\">\n            <Menu.Button className=\"co-action-button cursor-pointer text-sm font-bold hover:underline\">\n                <EllipsisHorizontalIcon className=\"h-6 w-6 transition-transform ui-open:rotate-90\" />\n            </Menu.Button>\n\n            <Menu.Items className=\"co-meatball-items absolute right-0 top-8 z-30 flex min-w-max flex-col divide-y rounded-lg p-3  focus:!outline-none\">\n                <Menu.Item>\n                    <MeatballMenuItem\n                        disabled={false}\n                        onClick={() => {\n                            reportingUIContext.send({\n                                type: \"START_REPORT\",\n                                artistAlleyListingId: listing.id,\n                            });\n                        }}\n                        ItemIcon={ShieldExclamationIconOutline}\n                        text=\"report\"\n                    />\n                </Menu.Item>\n            </Menu.Items>\n        </Menu>\n    );\n};\n\nexport const ArtistAlleyListing: React.FC<{\n    listing: WireArtistAlley;\n    project: WireProjectModel;\n}> = ({ listing, project }) => {\n    const rendered = useMemo(() => {\n        return renderMarkdownReactNoHTML(listing.body, new Date(), {\n            disableEmbeds: true,\n            externalLinksInNewTab: true,\n            hasCohostPlus: false,\n            renderingContext: \"artistAlley\",\n        });\n    }, [listing.body]);\n\n    const theme = useDynamicTheme();\n\n    return (\n        <div\n            data-theme={theme.current}\n            className=\"co-themed-box co-artist-alley-listing flex w-full flex-col rounded-lg border\"\n        >\n            <div className=\"co-border flex flex-row items-center gap-2 border-b px-2 py-3\">\n                <ProjectAvatar project={project} className=\"h-8\" />\n                <a\n                    href={sitemap.public.project\n                        .mainAppProfile({ projectHandle: project.handle })\n                        .toString()}\n                >\n                    @{project.handle}\n                </a>\n                <div className=\"flex-1\">&nbsp;</div>\n                {listing.adultContent ? (\n                    <span className=\"co-18-plus rounded-lg p-1 text-xs \">\n                        18+\n                    </span>\n                ) : null}\n                <ArtistAlleyMeatballMenu listing={listing} />\n            </div>\n            {listing.attachment && (\n                <ArtistAlleyAttachment attachment={listing.attachment} />\n            )}\n            <div className=\"co-prose prose p-2\">{rendered}</div>\n\n            <div className=\"mx-2 my-3\">\n                <BasicButton\n                    as=\"a\"\n                    buttonColor=\"\"\n                    buttonSize=\"regular\"\n                    href={listing.cta.link}\n                    extraClasses=\"co-cta-button\"\n                    target=\"_blank\"\n                >\n                    {listing.cta.text}\n                </BasicButton>\n            </div>\n\n            {listing.categories.length > 0 && (\n                <ListingTags tags={listing.categories} />\n            )}\n        </div>\n    );\n};\n\nconst ListingTags: React.FC<{ tags: string[] }> = ({ tags }) => {\n    const { categories } = useArtistAlleyFilters();\n    const filteredTags = tags.filter((tag) => tag != \"\");\n\n    return filteredTags.length ? (\n        <div className=\"w-full max-w-full p-3\">\n            <div\n                className={tw`co-tags relative w-full overflow-y-hidden break-words leading-none`}\n            >\n                <div>\n                    {filteredTags.map((tag) => (\n                        <button\n                            key={tag}\n                            className={`mr-2 inline-block text-sm hover:underline ${\n                                // bold currently filtered tags\n                                categories.has(tag) ? \"font-bold\" : \"\"\n                            }`}\n                            onClick={() => {\n                                categories.has(tag)\n                                    ? categories.delete(tag)\n                                    : categories.add(tag);\n                            }}\n                        >\n                            #{tag}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        </div>\n    ) : null;\n};\n","import { ModWireArtistAlley } from \"@/shared/types/artist-alley\";\nimport { WireProjectModelModeratorExtensions } from \"@/shared/types/projects\";\nimport { WireUserModel } from \"@/shared/types/wire-models\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { ArtistAlleyListing } from \"../../../artist-alley/artist-alley-listing\";\nimport sitemap from \"@/shared/sitemap\";\nimport { Button, ButtonColor } from \"../../../elements/button\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { ArtistAlleyAdId } from \"@/shared/types/ids\";\nimport { BasicButton } from \"../../../elements/basic-button\";\nimport { SimpleNativeModalDialog } from \"../../../elements/simple-modal-dialog\";\n\nconst ApproveButton: React.FC<{ listingId: ArtistAlleyAdId }> = ({\n    listingId,\n}) => {\n    const approve = trpc.artistAlley.moderator.approveListing.useMutation();\n    const utils = trpc.useContext();\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleApprove = useCallback(async () => {\n        await approve.mutateAsync({ id: listingId });\n        await utils.artistAlley.moderator.getPendingListings.invalidate();\n        setIsOpen(false);\n    }, [approve, listingId, utils.artistAlley.moderator.getPendingListings]);\n\n    const handleClick = useCallback(() => {\n        setIsOpen(true);\n    }, []);\n\n    return (\n        <>\n            <SimpleNativeModalDialog\n                isOpen={isOpen}\n                title=\"Approve Listing\"\n                body=\"Are you sure you want to approve this listing?\"\n                confirm={{ label: \"Approve\", color: \"green\" }}\n                cancel={{ label: \"Cancel\", color: \"stroke\" }}\n                onConfirm={handleApprove}\n                onCancel={() => setIsOpen(false)}\n            />\n\n            <BasicButton\n                onClick={handleClick}\n                buttonSize=\"regular\"\n                buttonColor=\"green\"\n            >\n                Approve\n            </BasicButton>\n        </>\n    );\n};\n\nconst RejectButton: React.FC<{ listingId: ArtistAlleyAdId }> = ({\n    listingId,\n}) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [rejectReason, setRejectReason] = useState(\"\");\n    const reject = trpc.artistAlley.moderator.rejectListing.useMutation();\n    const utils = trpc.useContext();\n\n    const handleReject = useCallback(async () => {\n        await reject.mutateAsync({ id: listingId, rejectReason });\n        await utils.artistAlley.moderator.getPendingListings.invalidate();\n        setIsOpen(false);\n    }, [\n        reject,\n        listingId,\n        rejectReason,\n        utils.artistAlley.moderator.getPendingListings,\n    ]);\n\n    const handleClick = useCallback(() => {\n        setIsOpen(true);\n    }, []);\n\n    return (\n        <>\n            <SimpleNativeModalDialog\n                isOpen={isOpen}\n                title=\"Reject Listing\"\n                body=\"Are you sure you want to reject this listing?\"\n                confirm={{ label: \"Reject\", color: \"destructive\" }}\n                cancel={{ label: \"Cancel\", color: \"stroke\" }}\n                onConfirm={handleReject}\n                onCancel={() => setIsOpen(false)}\n            >\n                <div>\n                    <label>\n                        Reject reason:{\" \"}\n                        <input\n                            type=\"text\"\n                            value={rejectReason}\n                            onChange={(e) =>\n                                setRejectReason(e.currentTarget.value)\n                            }\n                        />\n                    </label>\n                </div>\n            </SimpleNativeModalDialog>\n\n            <BasicButton\n                onClick={handleClick}\n                buttonSize=\"regular\"\n                buttonColor=\"destructive\"\n            >\n                Reject\n            </BasicButton>\n        </>\n    );\n};\n\nexport const ArtistAlleyModListing: React.FC<{\n    listing: ModWireArtistAlley;\n    project: WireProjectModelModeratorExtensions;\n    user: WireUserModel;\n}> = ({ listing, project, user }) => {\n    return (\n        <div className=\"flex w-full min-w-0 flex-row justify-between gap-4 rounded-lg border border-notBlack p-3\">\n            <div className=\"w-full max-w-[300px]\">\n                <ArtistAlleyListing listing={listing} project={project} />\n            </div>\n            <div className=\"prose flex-shrink\">\n                <ul>\n                    <li>\n                        user: {user.email} (\n                        <a\n                            href={sitemap.public.moderation\n                                .manageUser({\n                                    userId: user.userId,\n                                })\n                                .toString()}\n                        >\n                            manage\n                        </a>\n                        )\n                    </li>\n                    <li>\n                        project: {project.handle} (\n                        <a\n                            href={sitemap.public.moderation\n                                .manageProject({\n                                    projectHandle: project.handle,\n                                })\n                                .toString()}\n                        >\n                            manage\n                        </a>\n                        )\n                    </li>\n                    <li>listing: {listing.id}</li>\n                    <li>created at: {listing.createdAt}</li>\n                    <li>num weeks: {listing.numWeeks}</li>\n                    <li>status: {listing.status}</li>\n                    <li>\n                        payment status:{\" \"}\n                        <a\n                            href={`https://dashboard.stripe.com/payments/${listing.stripePaymentIntentId}`}\n                        >\n                            {listing.paymentStatus}\n                        </a>\n                    </li>\n                    <li>\n                        notes:\n                        <br />\n                        <blockquote>{listing.notes}</blockquote>\n                    </li>\n                </ul>\n                <div className=\"flex flex-row gap-2\">\n                    <ApproveButton listingId={listing.id} />\n                    <RejectButton listingId={listing.id} />\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { ProjectId, UserId } from \"@/shared/types/ids\";\nimport { WireProjectModelModeratorExtensions } from \"@/shared/types/projects\";\nimport { WireUserModel } from \"@/shared/types/wire-models\";\nimport React, { useMemo } from \"react\";\nimport { ArtistAlleyModListing } from \"../../moderation/maintenance/artist-alley/artist-alley-mod-listing\";\nimport { BasicButton } from \"../../elements/basic-button\";\n\nexport function ArtistAlleyPendingQueuePage() {\n    const { data, hasNextPage, isLoading, fetchNextPage } =\n        trpc.artistAlley.moderator.getPendingListings.useInfiniteQuery(\n            {},\n            {\n                suspense: true,\n                getNextPageParam: (lastPage) => lastPage.nextCursor,\n            }\n        );\n\n    const flattenedListings = useMemo(() => {\n        return data?.pages.flatMap((page) => page.listings) ?? [];\n    }, [data?.pages]);\n\n    const flattenedProjects = useMemo<\n        Map<ProjectId, WireProjectModelModeratorExtensions>\n    >(() => {\n        const projects = new Map<\n            ProjectId,\n            WireProjectModelModeratorExtensions\n        >();\n        data?.pages.forEach((page) => {\n            Object.values(page.relevantProjects).forEach((project) => {\n                projects.set(project.projectId, project);\n            });\n        });\n        return projects;\n    }, [data?.pages]);\n\n    const flattenedUsers = useMemo<Map<UserId, WireUserModel>>(() => {\n        const users = new Map<UserId, WireUserModel>();\n        data?.pages.forEach((page) => {\n            Object.values(page.relevantUsers).forEach((user) => {\n                users.set(user.userId, user);\n            });\n        });\n        return users;\n    }, [data?.pages]);\n\n    return (\n        <div className=\"bg-notWhite p-3 text-notBlack\">\n            <h1 className=\"mb-4 text-4xl font-bold\">pending listings</h1>\n            <div className=\"flex flex-col gap-4\">\n                {flattenedListings.map((listing) => (\n                    <ArtistAlleyModListing\n                        listing={listing}\n                        key={listing.id}\n                        project={flattenedProjects.get(listing.projectId)!}\n                        user={flattenedUsers.get(listing.userId)!}\n                    />\n                ))}\n                <BasicButton\n                    onClick={async () => {\n                        await fetchNextPage();\n                    }}\n                    disabled={!hasNextPage || isLoading}\n                    buttonSize=\"regular\"\n                    buttonColor=\"cherry\"\n                >\n                    load more\n                </BasicButton>\n            </div>\n        </div>\n    );\n}\n\nexport default ArtistAlleyPendingQueuePage;\n"],"names":["ArtistAlleyFilterProvider","React","adultFilterMode","isAdult","categories","Set","setAdultFilterMode","categoryMatch","setCategoryMatch","sortOrder","setSortOrder","useArtistAlleyFilters","useContext","ArtistAlleyAttachment","attachment","displayPrefs","useDisplayPrefs","src","setSrc","useState","gifsStartPaused","previewURL","fileURL","isPlaying","setIsPlaying","srcWithDpr","useImageOptimizer","className","srcSet","alt","altText","PlayPauseButton","showPlay","extraClasses","onPlay","handlePlay","onPause","handlePause","ArtistAlleyMeatballMenu","listing","reportingUIContext","ReportingUIContext","Menu","as","EllipsisHorizontalIcon","MeatballMenuItem","disabled","onClick","send","type","artistAlleyListingId","id","ItemIcon","ShieldExclamationIconOutline","text","ArtistAlleyListing","project","rendered","useMemo","renderMarkdownReactNoHTML","body","Date","disableEmbeds","externalLinksInNewTab","hasCohostPlus","renderingContext","theme","useDynamicTheme","current","ProjectAvatar","href","sitemap","projectHandle","handle","toString","adultContent","BasicButton","buttonColor","buttonSize","cta","link","target","length","ListingTags","tags","filteredTags","filter","tag","tw","map","key","has","delete","add","ApproveButton","listingId","approve","trpc","utils","isOpen","setIsOpen","handleApprove","useCallback","async","mutateAsync","artistAlley","moderator","getPendingListings","invalidate","handleClick","SimpleNativeModalDialog","title","confirm","label","color","cancel","onConfirm","onCancel","RejectButton","rejectReason","setRejectReason","reject","handleReject","value","onChange","e","currentTarget","ArtistAlleyModListing","user","email","userId","createdAt","numWeeks","status","stripePaymentIntentId","paymentStatus","notes","ArtistAlleyPendingQueuePage","data","hasNextPage","isLoading","fetchNextPage","suspense","getNextPageParam","lastPage","nextCursor","flattenedListings","pages","flatMap","page","listings","flattenedProjects","projects","Map","forEach","Object","values","relevantProjects","set","projectId","flattenedUsers","users","relevantUsers","get"],"sourceRoot":""}