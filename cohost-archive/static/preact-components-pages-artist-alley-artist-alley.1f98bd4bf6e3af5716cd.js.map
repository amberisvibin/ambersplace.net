{"version":3,"file":"preact-components-pages-artist-alley-artist-alley.1f98bd4bf6e3af5716cd.js","mappings":"6LAIO,MAAMA,EAA4BC,EAAAA,cAStC,CACCC,gBAAiB,OACjBC,SAAS,EACTC,WAAY,IAAIC,IAChBC,mBAAoBA,OACpBC,cAAe,MACfC,iBAAkBA,OAClBC,UAAW,SACXC,aAAcA,SAGLC,EAAwBA,KAC1BC,EAAAA,EAAAA,YAAWZ,I,yOCMtB,MAEMa,EAEDA,EAAGC,WAAAA,MACJ,MAAMC,GAAeC,EAAAA,EAAAA,MACdC,EAAKC,IAAUC,EAAAA,EAAAA,UAClBJ,EAAaK,gBACPN,EAAWO,WACXP,EAAWQ,UAEdC,EAAWC,IAAgBL,EAAAA,EAAAA,WAAUJ,EAAaK,iBAEnDK,GAAaC,EAAAA,EAAAA,GAAkBT,EAAK,IAbzB,KAyBjB,OACIhB,EAAAA,cAAA,OAAK0B,UAAU,kBACX1B,EAAAA,cAAA,OACIgB,IAAKQ,EAAW,GAChBG,OAAS,qBACPH,EAAW,2BACXA,EAAW,2BACXA,EAAW,uBAEbI,IAAKf,EAAWgB,QAChBH,UAAU,4DAGbb,EAAWO,aAAeP,EAAWQ,SAClCrB,EAAAA,cAAC8B,EAAAA,EAAe,CACZR,UAAWA,EACXS,SAAUlB,EAAWO,aAAeP,EAAWQ,QAC/CW,aAAa,iCACbC,OAvBGC,KACfX,GAAa,GACbN,EAAOJ,EAAWQ,UAsBNc,QA7BIC,KAChBb,GAAa,GACbN,EAAOJ,EAAWO,iBAkCpBiB,EAAkEA,EACpEC,QAAAA,MAEA,MAAMC,GAAqB5B,EAAAA,EAAAA,YAAW6B,EAAAA,GAEtC,OAGIxC,EAAAA,cAACyC,EAAAA,EAAI,CAACC,GAAG,MAAMhB,UAAU,gBACrB1B,EAAAA,cAACyC,EAAAA,EAAAA,OAAW,CAACf,UAAU,qEACnB1B,EAAAA,cAAC2C,EAAAA,EAAsB,CAACjB,UAAU,oDAGtC1B,EAAAA,cAACyC,EAAAA,EAAAA,MAAU,CAACf,UAAU,sHAClB1B,EAAAA,cAACyC,EAAAA,EAAAA,KAAS,KACNzC,EAAAA,cAAC4C,EAAAA,EAAgB,CACbC,UAAU,EACVC,QAASA,KACLP,EAAmBQ,KAAK,CACpBC,KAAM,eACNC,qBAAsBX,EAAQY,MAGtCC,SAAUC,EAAAA,EACVC,KAAK,eAQhBC,EAGRA,EAAGhB,QAAAA,EAASiB,QAAAA,MACb,MAAMC,GAAWC,EAAAA,EAAAA,UAAQ,KACdC,EAAAA,EAAAA,IAA0BpB,EAAQqB,KAAM,IAAIC,KAAQ,CACvDC,eAAe,EACfC,uBAAuB,EACvBC,eAAe,EACfC,iBAAkB,iBAEvB,CAAC1B,EAAQqB,OAENM,GAAQC,EAAAA,EAAAA,MAEd,OACIlE,EAAAA,cAAA,OACI,aAAYiE,EAAME,QAClBzC,UAAU,gFAEV1B,EAAAA,cAAA,OAAK0B,UAAU,iEACX1B,EAAAA,cAACoE,EAAAA,EAAa,CAACb,QAASA,EAAS7B,UAAU,QAC3C1B,EAAAA,cAAA,KACIqE,KAAMC,EAAAA,GAAAA,OAAAA,QAAAA,eACc,CAAEC,cAAehB,EAAQiB,SACxCC,YACR,IACKlB,EAAQiB,QAEdxE,EAAAA,cAAA,OAAK0B,UAAU,UAAS,KACvBY,EAAQoC,aACL1E,EAAAA,cAAA,QAAM0B,UAAU,sCAAqC,OAGrD,KACJ1B,EAAAA,cAACqC,EAAuB,CAACC,QAASA,KAErCA,EAAQzB,YACLb,EAAAA,cAACY,EAAqB,CAACC,WAAYyB,EAAQzB,aAE/Cb,EAAAA,cAAA,OAAK0B,UAAU,sBAAsB8B,GAErCxD,EAAAA,cAAA,OAAK0B,UAAU,aACX1B,EAAAA,cAAC2E,EAAAA,EAAW,CACRjC,GAAG,IACHkC,YAAY,GACZC,WAAW,UACXR,KAAM/B,EAAQwC,IAAIC,KAClB/C,aAAa,gBACbgD,OAAO,UAEN1C,EAAQwC,IAAIzB,OAIpBf,EAAQnC,WAAW8E,OAAS,GACzBjF,EAAAA,cAACkF,EAAW,CAACC,KAAM7C,EAAQnC,eAMrC+E,EAA4CA,EAAGC,KAAAA,MACjD,MAAM,WAAEhF,IAAeO,EAAAA,EAAAA,KACjB0E,EAAeD,EAAKE,QAAQC,GAAe,IAAPA,IAE1C,OAAOF,EAAaH,OAChBjF,EAAAA,cAAA,OAAK0B,UAAU,yBACX1B,EAAAA,cAAA,OACI0B,UAAW6D,EAAAA,EAAG,sEAEdvF,EAAAA,cAAA,WACKoF,EAAaI,KAAKF,GACftF,EAAAA,cAAA,UACIyF,IAAKH,EACL5D,UAAY,8CAERvB,EAAWuF,IAAIJ,GAAO,YAAc,IAExCxC,QAASA,KACL3C,EAAWuF,IAAIJ,GACTnF,EAAWwF,OAAOL,GAClBnF,EAAWyF,IAAIN,KAE5B,IACKA,QAMtB,O,wJClMD,MAAMO,EAAyCA,IAAIC,KACtD,MAAOC,EAAOC,IAAY9E,EAAAA,EAAAA,aAAY4E,IAC/BG,EAAiBC,IAAmBC,EAAAA,EAAAA,iBAQ3C,MAAO,CAACJ,EANyCK,IAC7CF,GAAgB,KACZF,EAASI,S,+CCdd,MAAMC,EAA4BC,EAAAA,EAAAA,KAAO,CAC5C,WACA,UACA,aAMSC,EAA2BD,EAAAA,EAAAA,KAAO,CAAC,OAAQ,SAAU,aAUrDE,GAPwBF,EAAAA,EAAAA,OAAS,CAC1CzE,QAASyE,EAAAA,EAAAA,SACTG,mBAAoBH,EAAAA,EAAAA,SACpBI,GAAIJ,EAAAA,EAAAA,WAIiCA,EAAAA,EAAAA,OAAS,CAC9CzE,QAASyE,EAAAA,EAAAA,SACTlF,WAAYkF,EAAAA,EAAAA,SAAWK,MACvBtF,QAASiF,EAAAA,EAAAA,SAAWK,SAWXC,GAL8BN,EAAAA,EAAAA,KAAO,CAAC,OAAQ,UAAW,SAKvCA,EAAAA,EAAAA,OAAS,CACpCpD,GAAI2D,EAAAA,GACJC,UAAWC,EAAAA,GACXC,UAAWC,EAAAA,GACXC,UAAWD,EAAAA,GACXtD,KAAM2C,EAAAA,EAAAA,SACNxB,IAAKwB,EAAAA,EAAAA,OAAS,CACVvB,KAAMuB,EAAAA,EAAAA,SAAWK,MACjBtD,KAAMiD,EAAAA,EAAAA,WAEVzF,WAAY2F,EAA0BW,WACtChH,WAAYmG,EAAAA,EAAAA,MAAQA,EAAAA,EAAAA,UACpB5B,aAAc4B,EAAAA,EAAAA,aAIgBM,EAAgBQ,OAAO,CACrDC,OAAQC,EAAAA,GACRC,OAAQlB,EACRmB,cAAejB,EACfkB,wBAAyBnB,EAAAA,EAAAA,SAAWa,WACpCO,sBAAuBpB,EAAAA,EAAAA,SAAWa,WAClCQ,aAAcrB,EAAAA,EAAAA,SAAWa,WACzBS,SAAUtB,EAAAA,EAAAA,SAAWuB,MACrBC,MAAOxB,EAAAA,EAAAA,SAAWa,aAIcP,EAAgBQ,OAAO,CACvDC,OAAQC,EAAAA,GACRC,OAAQlB,EACRmB,cAAejB,EACfoB,aAAcrB,EAAAA,EAAAA,SAAWa,WACzBS,SAAUtB,EAAAA,EAAAA,SAAWuB,MACrBC,MAAOxB,EAAAA,EAAAA,SAAWa,WAClBY,WAAYzB,EAAAA,EAAAA,SAAWK,MAAMQ,a,8LC1DjC,MAAMa,EAMDA,EAAGC,KAAAA,KAEAjI,EAAAA,cAAA,MAAI0B,UAAU,wIACTuG,EAAKzC,KAAK0C,GACPlI,EAAAA,cAAA,MACIyF,IAAM,GAAEyC,EAAIC,QACZzG,UAAY,uGACRwG,EAAIE,OACE,yGACA,KAGVpI,EAAAA,cAAA,UAAQ8C,QAASoF,EAAIpF,SAAUoF,EAAIC,WAO1CE,EAERA,EAAG3G,UAAAA,MACJ,MAAM4G,GAAepE,EAAAA,EAAAA,MAEfqE,GAAYC,EAAAA,EAAAA,GAAS,uBAAuB,IAE3CC,GACHC,EAAAA,EAAAA,YAAAA,mBAAAA,sBAAqDC,EAAW,CAC5DC,gBAAiBC,EAAAA,EACjBC,kBAAkB,KAGpB,SAAEC,IAAaC,EAAAA,EAAAA,OAEbC,KAAMC,GACVR,EAAAA,EAAAA,YAAAA,oBAAAA,cAA8CC,EAAW,CACrDQ,QAASJ,EACTK,UAAU,KAGZ,gBACFnJ,EAAe,mBACfI,EAAkB,WAClBF,EAAU,QACVD,EAAO,cACPI,EAAa,iBACbC,EAAgB,UAChBC,EAAS,aACTC,IACAC,EAAAA,EAAAA,KAEJ,OACIV,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACqJ,EAAAA,EAAU,CACP3G,GAAG,MACH,aAAY4F,EAAanE,QACzBzC,UAAW6D,EAAAA,EAAG,+JACV7D,GAAa,KAEjB4H,YAAaf,GAEbvI,EAAAA,cAACqJ,EAAAA,EAAAA,OAAiB,CACd3G,GAAG,SACHhB,UAAU,wFAEV1B,EAAAA,cAACuJ,EAAAA,EAAgB,CAAC7H,UAAU,+DAC5B1B,EAAAA,cAAA,QAAM0B,UAAU,iCAAgC,YAIpD1B,EAAAA,cAACqJ,EAAAA,EAAAA,MAAgB,CAAC3G,GAAG,OACjB1C,EAAAA,cAAA,OAAK0B,UAAU,2CACV+G,EAAcjD,KAAKgE,GAChBxJ,EAAAA,cAAA,OACIyF,IAAM,kBAAiB+D,IACvB9H,UAAU,0CAGV1B,EAAAA,cAAA,UACI0B,UAAW6D,EAAAA,EAAG,oFACVpF,EAAWuF,IAAI8D,GACT,YACA,KAEV1G,QAAU2G,IACNA,EAAEC,kBACFvJ,EAAWuF,IAAI8D,GACTrJ,EAAWwF,OAAO6D,GAClBrJ,EAAWyF,IAAI4D,IAEzBxG,KAAK,UAELhD,EAAAA,cAAC2J,EAAAA,EAAW,CAACjI,UAAU,uBACvB1B,EAAAA,cAAA,QAAM0B,UAAU,SAAS8H,QAKzCxJ,EAAAA,cAACgI,EAAiB,CACdC,KAAM,CACF,CACIE,MAAO,MACPrF,QAASA,IAAMvC,EAAiB,OAChC6H,OAA0B,QAAlB9H,GAEZ,CACI6H,MAAO,MACPrF,QAASA,IAAMvC,EAAiB,OAChC6H,OAA0B,QAAlB9H,MAInBJ,GACGF,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,MAAI0B,UAAU,oBACd1B,EAAAA,cAACgI,EAAiB,CACdC,KAAM,CACF,CACIE,MAAO,WACPrF,QAASA,KACLzC,EAAmB,SAEvB+H,OAA4B,SAApBnI,GAEZ,CACIkI,MAAO,WACPrF,QAASA,KACLzC,EAAmB,YAEvB+H,OAA4B,YAApBnI,GAEZ,CACIkI,MAAO,WACPrF,QAASA,KACLzC,EAAmB,SAEvB+H,OAA4B,SAApBnI,OAM5BD,EAAAA,cAAA,MAAI0B,UAAU,oBACd1B,EAAAA,cAACgI,EAAiB,CACdC,KAAM,CACF,CACIE,MAAO,SACPrF,QAASA,KACLrC,EAAa,WAEjB2H,OAAsB,WAAd5H,GAEZ,CACI2H,MAAO,eACPrF,QAASA,KACLrC,EAAa,WAEjB2H,OAAsB,WAAd5H,GAEZ,CACI2H,MAAO,eACPrF,QAASA,KACLrC,EAAa,WAEjB2H,OAAsB,WAAd5H,QAM5BR,EAAAA,cAACqJ,EAAAA,EAAU,CACP3G,GAAG,MACH,aAAY4F,EAAanE,QACzBzC,UAAW6D,EAAAA,EAAG,oKACV7D,GAAa,KAEjB4H,YAAaf,GAEbvI,EAAAA,cAACqJ,EAAAA,EAAAA,OAAiB,CACd3G,GAAG,SACHhB,UAAU,wFAEV1B,EAAAA,cAACuJ,EAAAA,EAAgB,CAAC7H,UAAU,+DAC5B1B,EAAAA,cAAA,QAAM0B,UAAU,iCAAgC,uBAIpD1B,EAAAA,cAACqJ,EAAAA,EAAAA,MAAgB,CAAC3G,GAAG,MAAMhB,UAAU,OACjC1B,EAAAA,cAAA,OAAK0B,UAAU,uBACX1B,EAAAA,cAAA,SAAG,uKAOPA,EAAAA,cAAC2E,EAAAA,EAAW,CACRE,WAAW,UACXD,YAAY,kBACZlC,GAAG,IACH2B,KAAMC,EAAAA,GAAAA,OAAAA,YAAAA,SAAoCG,WAC1CzC,aAAa,QAChB,iBAGAkH,GACGlJ,EAAAA,cAAC2E,EAAAA,EAAW,CACRE,WAAW,UACXD,YAAY,kBACZlC,GAAG,IACH2B,KAAMC,EAAAA,GAAAA,OAAAA,YAAAA,cAEDG,WACLzC,aAAa,QAChB,4B,0BC9KlB,MAAM4H,EAAkBA,KAC3B,MAAM,QAAE1J,EAAO,+BAAE2J,IAAmC9I,EAAAA,EAAAA,MAE7C+I,EAAYzJ,GACfwF,EAGI3F,EACM2J,EACI,OACA,UACJ,SAEPvJ,EAAeC,GAClBsF,EAAkC,OAChC1F,GAAa4J,EAAAA,EAAAA,MAEbC,GAAkBC,EAAAA,EAAAA,SAAQC,EAAAA,EAAAA,KAAAA,2BAEzB1J,EAAWC,GAAgBoF,EAA8B,UAEhE,OACI7F,EAAAA,cAACD,EAAAA,EAAAA,SAAkC,CAC/BoK,MAAO,CACHlK,gBAAiB6J,EACjB5J,QAAAA,EACAC,WAAAA,EACAE,mBAAAA,EACAC,cAAAA,EACAC,iBAAAA,EACAC,UAAAA,EACAC,aAAAA,IAGJT,EAAAA,cAAA,OAAK0B,UAAU,uLACX1B,EAAAA,cAACoK,EAAAA,GAAM,CAACC,MAAM,iBACdrK,EAAAA,cAACsK,EAAAA,GAAW,CAACC,YAAY,IACxBP,EACGhK,EAAAA,cAACwK,EAAAA,SAAQ,CAACC,SAAUzK,EAAAA,cAAA,WAAK,YACrBA,EAAAA,cAAC0K,EAAgB,OAGrB1K,EAAAA,cAAC2K,EAAiB,SAOhCA,EAA8BA,KAChC,MAAM1G,GAAQC,EAAAA,EAAAA,MACd,OACIlE,EAAAA,cAAA,OAAK0B,UAAU,SACX1B,EAAAA,cAAA,OAAK,aAAYiE,EAAME,QAASzC,UAAU,2BACtC1B,EAAAA,cAAA,OAAK0B,UAAU,kBACX1B,EAAAA,cAAA,UAAI,oCAEJA,EAAAA,cAAA,SAAG,mHAGK,IACJA,EAAAA,cAAA,KACIqE,KAAMC,EAAAA,GAAAA,OAAAA,YAAAA,SAEDG,YACR,kBAILzE,EAAAA,cAAA,SAAG,8CAC6C,IAC5CA,EAAAA,cAAA,KAAGqE,KAAK,4BAA2B,UAAU,kCAsB/DqG,GAXiBpE,EAAAA,EAAAA,mBAAqB,OAAQ,CAChDA,EAAAA,EAAAA,OAAS,CACLtD,KAAMsD,EAAAA,EAAAA,QAAU,WAChBpD,GAAI2D,EAAAA,GACJvE,QAASsE,EACTrD,QAASqH,EAAAA,KAEbtE,EAAAA,EAAAA,OAAS,CAAEtD,KAAMsD,EAAAA,EAAAA,QAAU,UAAWpD,GAAIoD,EAAAA,EAAAA,QAAU,cAIrBoE,KAC/B,MAAMG,GAAUC,EAAAA,EAAAA,aAA2BnC,IAErC,eAAEoC,IAAmBC,EAAAA,EAAAA,MAErB,gBAAE/K,EAAe,WAAEE,EAAU,cAAEG,EAAa,UAAEE,IAChDE,EAAAA,EAAAA,OAEG,MAAEuK,IAAS,cAAEC,EAAa,YAAEC,IAC/BzC,EAAAA,EAAAA,YAAAA,sBAAAA,yBACI,CACI0C,iBAAkBnL,EAClBE,WAAYkL,MAAMC,KAAKnL,GACvBoL,YAAaR,EACbzK,cAAAA,EACAE,UAAAA,GAEJ,CACIgL,iBAAmBC,GAAaA,EAASC,WACzC5C,kBAAkB,EAElBF,gBAAiBC,EAAAA,EACjB8C,gBAAgB,EAChBC,oBAAoB,EACpBC,sBAAsB,EACtBC,6BAA6B,EAG7BC,QAAUC,IACNC,EAAAA,GAAAA,MAAYD,EAAIE,QAAS,CACrBhJ,GAAI2H,EAAQ1G,WAGpBgI,UAAWA,KACPF,EAAAA,GAAAA,QAAcpB,EAAQ1G,aAKtCiI,EAAAA,EAAAA,YAAU,KACc,aAAhBjB,IACAN,EAAQ1G,QAAU8H,EAAAA,GAAAA,QAAc,sBAAuB,CACnD/I,GAAI2H,EAAQ1G,aAGrB,CAACgH,IAEJ,MAAMkB,GAAoB5I,EAAAA,EAAAA,UAAQ,IACvBwH,EAAMqB,SAASC,GAASA,EAAKC,YAAa,IAClD,CAACvB,IAEEwB,GAAoBhJ,EAAAA,EAAAA,UAA0C,KAChE,MAAMiJ,EAAW,IAAIC,IAMrB,OALA1B,EAAM2B,SAASL,IACXM,OAAOC,OAAOP,EAAKQ,kBAAkBH,SAASrJ,IAC1CmJ,EAASM,IAAIzJ,EAAQuD,UAAWvD,SAGjCmJ,IACR,CAACzB,IAEEgC,GAAkBxJ,EAAAA,EAAAA,UAA+B,KACnD,MAAMyJ,EAAMb,EACP7G,KAAiClD,IAC9B,MAAMiB,EAAUkJ,EAAkBU,IAAI7K,EAAQwE,WAC9C,GAAKvD,EACL,MAAO,CACHP,KAAM,UACNE,GAAIZ,EAAQY,GACZZ,QAAAA,EACAiB,QAAAA,MAGP8B,OAAO+H,EAAAA,GAKZ,OAFAF,EAAIG,QAAQ,CAAErK,KAAM,SAAUE,GAAI,WAE3BgK,IACR,CAACb,EAAmBI,KAEjB,IAAEa,EAAG,OAAEC,IAAWC,EAAAA,EAAAA,OAExBpB,EAAAA,EAAAA,YAAU,KACFmB,IACArH,EAAAA,EAAAA,kBAAgB,KACPgF,SAGd,CAACqC,EAAQrC,IAEZ,MAAMuC,GAAqBhK,EAAAA,EAAAA,UAAQ,IA9MvC,SACIiK,GAEA,MAAMC,EAA8C,CAChDC,QAAS,GAOb,IAAK,IAAIC,EAAI,EAAGA,GAoMsB,GApMRA,IAC1BF,EAAY,KAAOE,EAAI,IAAMA,EAOjC,OADAF,EAAYG,OAAOC,kBAAoBL,GAChCC,EA4LIK,IACR,IAEH,OACIhO,EAAAA,cAAA,OAAK0B,UAAU,8BACX1B,EAAAA,cAACiO,EAAAA,EAAO,CACJC,eAAgBT,EAChB/L,UAAU,2BACVyM,gBAAgB,4BAEflB,EAAgBzH,KAAKlD,GAClBtC,EAAAA,cAACoO,EAAqB,CAAC3I,IAAKnD,EAAQY,GAAI+F,KAAM3G,OAItDtC,EAAAA,cAAA,OAAK0B,UAAU,gCAAgC4L,IAAKA,OAKhE,QAEA,MAAMc,EAEDA,EAAGnF,KAAAA,KACc,YAAdA,EAAKjG,KAEDhD,EAAAA,cAAA,OACIyF,IAAKwD,EAAK3G,QAAQY,GAClBxB,UAAU,0CAEV1B,EAAAA,cAACsD,EAAAA,EAAkB,CACfhB,QAAS2G,EAAK3G,QACdiB,QAAS0F,EAAK1F,WAM1BvD,EAAAA,cAAA,OAAKyF,IAAKwD,EAAK/F,GAAIxB,UAAU,0CACzB1B,EAAAA,cAACqI,EAAkB","sources":["webpack:///./preact/components/artist-alley/artist-alley-filter-provider.tsx","webpack:///./preact/components/artist-alley/artist-alley-listing.tsx","webpack:///./preact/hooks/use-transition-state.ts","webpack:///../shared/types/artist-alley.ts","webpack:///./preact/components/artist-alley/artist-alley-filters.tsx","webpack:///./preact/components/pages/artist-alley/artist-alley.tsx"],"sourcesContent":["import { CategoryMatch, SortOrder } from \"@/shared/api-types/artist-alley-v1\";\nimport { ArtistAlleyAdultDisplayMode } from \"@/shared/types/artist-alley\";\nimport React, { useContext } from \"react\";\n\nexport const ArtistAlleyFilterProvider = React.createContext<{\n    adultFilterMode: ArtistAlleyAdultDisplayMode;\n    isAdult: boolean;\n    categories: Set<string>;\n    setAdultFilterMode: (mode: ArtistAlleyAdultDisplayMode) => void;\n    categoryMatch: CategoryMatch;\n    setCategoryMatch: (mode: CategoryMatch) => void;\n    sortOrder: SortOrder;\n    setSortOrder: (order: SortOrder) => void;\n}>({\n    adultFilterMode: \"hide\",\n    isAdult: false,\n    categories: new Set(),\n    setAdultFilterMode: () => {},\n    categoryMatch: \"any\",\n    setCategoryMatch: () => {},\n    sortOrder: \"random\",\n    setSortOrder: () => {},\n});\n\nexport const useArtistAlleyFilters = () => {\n    return useContext(ArtistAlleyFilterProvider);\n};\n","import { renderMarkdownReactNoHTML } from \"@/client/lib/markdown/other-rendering\";\nimport { tw } from \"@/client/lib/tw-tagged-literal\";\nimport sitemap from \"@/shared/sitemap\";\nimport {\n    ArtistAlleyWireAttachment,\n    WireArtistAlley,\n} from \"@/shared/types/artist-alley\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { useContext, useMemo, useState } from \"react\";\nimport { useDynamicTheme } from \"../../hooks/dynamic-theme\";\nimport { useDisplayPrefs } from \"../../hooks/use-display-prefs\";\nimport { useImageOptimizer } from \"../../hooks/use-image-optimizer\";\nimport { BasicButton } from \"../elements/basic-button\";\nimport { PlayPauseButton } from \"../elements/play-pause-button\";\nimport { ProjectAvatar } from \"../partials/project-avatar\";\nimport { useArtistAlleyFilters } from \"./artist-alley-filter-provider\";\nimport { Menu } from \"@headlessui/react\";\nimport {\n    EyeIcon as EyeIconOutline,\n    EyeSlashIcon as EyeSlashIconOutline,\n    ShareIcon,\n    ShieldExclamationIcon as ShieldExclamationIconOutline,\n    TrashIcon as TrashIconOutline,\n} from \"@heroicons/react/24/outline\";\nimport {\n    ArrowUturnLeftIcon,\n    EllipsisHorizontalIcon,\n} from \"@heroicons/react/24/solid\";\nimport { MeatballMenuItem } from \"../elements/meatball-menu-item\";\nimport { ReportingUIContext } from \"@/client/reporting/machine\";\n\nconst ASPECT_RATIO = 300 / 250;\n\nconst ArtistAlleyAttachment: React.FC<{\n    attachment: ArtistAlleyWireAttachment;\n}> = ({ attachment }) => {\n    const displayPrefs = useDisplayPrefs();\n    const [src, setSrc] = useState(\n        displayPrefs.gifsStartPaused\n            ? attachment.previewURL\n            : attachment.fileURL\n    );\n    const [isPlaying, setIsPlaying] = useState(!displayPrefs.gifsStartPaused);\n\n    const srcWithDpr = useImageOptimizer(src, 300, ASPECT_RATIO);\n\n    const handlePause = () => {\n        setIsPlaying(false);\n        setSrc(attachment.previewURL);\n    };\n\n    const handlePlay = () => {\n        setIsPlaying(true);\n        setSrc(attachment.fileURL);\n    };\n\n    return (\n        <div className=\"group relative\">\n            <img\n                src={srcWithDpr(1)}\n                srcSet={`\n                ${srcWithDpr(1)} 1x,\n                ${srcWithDpr(2)} 2x,\n                ${srcWithDpr(3)} 3x,\n            `}\n                alt={attachment.altText}\n                className=\"co-border aspect-[300/250] w-full border-b object-cover\"\n            />\n\n            {attachment.previewURL !== attachment.fileURL && (\n                <PlayPauseButton\n                    isPlaying={isPlaying}\n                    showPlay={attachment.previewURL !== attachment.fileURL}\n                    extraClasses=\"absolute bottom-3 right-3 w-12\"\n                    onPlay={handlePlay}\n                    onPause={handlePause}\n                />\n            )}\n        </div>\n    );\n};\n\nconst ArtistAlleyMeatballMenu: React.FC<{ listing: WireArtistAlley }> = ({\n    listing,\n}) => {\n    const reportingUIContext = useContext(ReportingUIContext);\n\n    return (\n        // explicit height is required to vertically align the\n        // meatballs with the rest of the action buttons\n        <Menu as=\"div\" className=\"relative h-6\">\n            <Menu.Button className=\"co-action-button cursor-pointer text-sm font-bold hover:underline\">\n                <EllipsisHorizontalIcon className=\"h-6 w-6 transition-transform ui-open:rotate-90\" />\n            </Menu.Button>\n\n            <Menu.Items className=\"co-meatball-items absolute right-0 top-8 z-30 flex min-w-max flex-col divide-y rounded-lg p-3  focus:!outline-none\">\n                <Menu.Item>\n                    <MeatballMenuItem\n                        disabled={false}\n                        onClick={() => {\n                            reportingUIContext.send({\n                                type: \"START_REPORT\",\n                                artistAlleyListingId: listing.id,\n                            });\n                        }}\n                        ItemIcon={ShieldExclamationIconOutline}\n                        text=\"report\"\n                    />\n                </Menu.Item>\n            </Menu.Items>\n        </Menu>\n    );\n};\n\nexport const ArtistAlleyListing: React.FC<{\n    listing: WireArtistAlley;\n    project: WireProjectModel;\n}> = ({ listing, project }) => {\n    const rendered = useMemo(() => {\n        return renderMarkdownReactNoHTML(listing.body, new Date(), {\n            disableEmbeds: true,\n            externalLinksInNewTab: true,\n            hasCohostPlus: false,\n            renderingContext: \"artistAlley\",\n        });\n    }, [listing.body]);\n\n    const theme = useDynamicTheme();\n\n    return (\n        <div\n            data-theme={theme.current}\n            className=\"co-themed-box co-artist-alley-listing flex w-full flex-col rounded-lg border\"\n        >\n            <div className=\"co-border flex flex-row items-center gap-2 border-b px-2 py-3\">\n                <ProjectAvatar project={project} className=\"h-8\" />\n                <a\n                    href={sitemap.public.project\n                        .mainAppProfile({ projectHandle: project.handle })\n                        .toString()}\n                >\n                    @{project.handle}\n                </a>\n                <div className=\"flex-1\">&nbsp;</div>\n                {listing.adultContent ? (\n                    <span className=\"co-18-plus rounded-lg p-1 text-xs \">\n                        18+\n                    </span>\n                ) : null}\n                <ArtistAlleyMeatballMenu listing={listing} />\n            </div>\n            {listing.attachment && (\n                <ArtistAlleyAttachment attachment={listing.attachment} />\n            )}\n            <div className=\"co-prose prose p-2\">{rendered}</div>\n\n            <div className=\"mx-2 my-3\">\n                <BasicButton\n                    as=\"a\"\n                    buttonColor=\"\"\n                    buttonSize=\"regular\"\n                    href={listing.cta.link}\n                    extraClasses=\"co-cta-button\"\n                    target=\"_blank\"\n                >\n                    {listing.cta.text}\n                </BasicButton>\n            </div>\n\n            {listing.categories.length > 0 && (\n                <ListingTags tags={listing.categories} />\n            )}\n        </div>\n    );\n};\n\nconst ListingTags: React.FC<{ tags: string[] }> = ({ tags }) => {\n    const { categories } = useArtistAlleyFilters();\n    const filteredTags = tags.filter((tag) => tag != \"\");\n\n    return filteredTags.length ? (\n        <div className=\"w-full max-w-full p-3\">\n            <div\n                className={tw`co-tags relative w-full overflow-y-hidden break-words leading-none`}\n            >\n                <div>\n                    {filteredTags.map((tag) => (\n                        <button\n                            key={tag}\n                            className={`mr-2 inline-block text-sm hover:underline ${\n                                // bold currently filtered tags\n                                categories.has(tag) ? \"font-bold\" : \"\"\n                            }`}\n                            onClick={() => {\n                                categories.has(tag)\n                                    ? categories.delete(tag)\n                                    : categories.add(tag);\n                            }}\n                        >\n                            #{tag}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        </div>\n    ) : null;\n};\n","import {\n    type Dispatch,\n    type SetStateAction,\n    useState,\n    useTransition,\n} from \"react\";\n\ntype UseTransitionState = <S>(\n    initialState: S | (() => S)\n) => [S, Dispatch<SetStateAction<S>>];\n\nexport const useTransitionState: UseTransitionState = (...args) => {\n    const [state, setState] = useState(...args);\n    const [isTransitioning, startTransition] = useTransition();\n\n    const setStateWithTransition: typeof setState = (newState) => {\n        startTransition(() => {\n            setState(newState);\n        });\n    };\n\n    return [state, setStateWithTransition];\n};\n","import { z } from \"zod\";\nimport { ArtistAlleyAdId, ISODateString, ProjectId, UserId } from \"./ids\";\n\nexport const ArtistAlleyApprovalStatus = z.enum([\n    \"approved\",\n    \"pending\",\n    \"rejected\",\n]);\nexport type ArtistAlleyApprovalStatus = z.infer<\n    typeof ArtistAlleyApprovalStatus\n>;\n\nexport const ArtistAlleyPaymentStatus = z.enum([\"paid\", \"unpaid\", \"refunded\"]);\nexport type ArtistAlleyPaymentStatus = z.infer<typeof ArtistAlleyPaymentStatus>;\n\nexport const ArtistAlleyAttachment = z.object({\n    altText: z.string(),\n    attachmentFilename: z.string(),\n    ip: z.string(),\n});\nexport type ArtistAlleyAttachment = z.infer<typeof ArtistAlleyAttachment>;\n\nexport const ArtistAlleyWireAttachment = z.object({\n    altText: z.string(),\n    previewURL: z.string().url(),\n    fileURL: z.string().url(),\n});\nexport type ArtistAlleyWireAttachment = z.infer<\n    typeof ArtistAlleyWireAttachment\n>;\n\nexport const ArtistAlleyAdultDisplayMode = z.enum([\"hide\", \"include\", \"only\"]);\nexport type ArtistAlleyAdultDisplayMode = z.infer<\n    typeof ArtistAlleyAdultDisplayMode\n>;\n\nexport const WireArtistAlley = z.object({\n    id: ArtistAlleyAdId,\n    projectId: ProjectId,\n    expiresAt: ISODateString,\n    createdAt: ISODateString,\n    body: z.string(),\n    cta: z.object({\n        link: z.string().url(),\n        text: z.string(),\n    }),\n    attachment: ArtistAlleyWireAttachment.nullable(),\n    categories: z.array(z.string()),\n    adultContent: z.boolean(),\n});\nexport type WireArtistAlley = z.infer<typeof WireArtistAlley>;\n\nexport const ModWireArtistAlley = WireArtistAlley.extend({\n    userId: UserId,\n    status: ArtistAlleyApprovalStatus,\n    paymentStatus: ArtistAlleyPaymentStatus,\n    stripeCheckoutSessionId: z.string().nullable(),\n    stripePaymentIntentId: z.string().nullable(),\n    rejectReason: z.string().nullable(),\n    numWeeks: z.number().int(),\n    notes: z.string().nullable(),\n});\nexport type ModWireArtistAlley = z.infer<typeof ModWireArtistAlley>;\n\nexport const OwnerWireArtistAlley = WireArtistAlley.extend({\n    userId: UserId,\n    status: ArtistAlleyApprovalStatus,\n    paymentStatus: ArtistAlleyPaymentStatus,\n    rejectReason: z.string().nullable(),\n    numWeeks: z.number().int(),\n    notes: z.string().nullable(),\n    receiptUrl: z.string().url().nullable(),\n});\nexport type OwnerWireArtistAlley = z.infer<typeof OwnerWireArtistAlley>;\n","import { trpc } from \"@/client/lib/trpc\";\nimport { tw } from \"@/client/lib/tw-tagged-literal\";\nimport sitemap from \"@/shared/sitemap\";\nimport { Disclosure } from \"@headlessui/react\";\nimport { ChevronRightIcon } from \"@heroicons/react/20/solid\";\nimport { HashtagIcon } from \"@heroicons/react/24/outline\";\nimport React from \"react\";\nimport { useMedia } from \"react-use\";\nimport { useDynamicTheme } from \"../../hooks/dynamic-theme\";\nimport { BasicButton } from \"../elements/basic-button\";\nimport { useArtistAlleyFilters } from \"./artist-alley-filter-provider\";\nimport { useUserInfo } from \"../../providers/user-info-provider\";\n\nconst MultiSwitchButton: React.FC<{\n    tabs: {\n        label: string;\n        onClick: () => void;\n        active?: boolean;\n    }[];\n}> = ({ tabs }) => {\n    return (\n        <ul className=\"co-multi-button mx-auto my-2 flex w-auto max-w-fit flex-row items-center justify-evenly overflow-y-auto whitespace-nowrap rounded-lg\">\n            {tabs.map((tab) => (\n                <li\n                    key={`${tab.label}`}\n                    className={`co-multi-button px-3 py-2 text-center text-sm first-of-type:rounded-l-lg last-of-type:rounded-r-lg ${\n                        tab.active\n                            ? \"co-active rounded-lg rounded-b-lg font-bold first-of-type:rounded-bl-none last-of-type:rounded-br-none\"\n                            : \"\"\n                    }`}\n                >\n                    <button onClick={tab.onClick}>{tab.label}</button>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport const ArtistAlleyFilters: React.FC<{\n    className?: string;\n}> = ({ className }) => {\n    const postBoxTheme = useDynamicTheme();\n\n    const isDesktop = useMedia(\"(min-width: 1200px)\", true);\n\n    const [allCategories] =\n        trpc.artistAlley.getCategoriesInUse.useSuspenseQuery(undefined, {\n            refetchInterval: Infinity,\n            keepPreviousData: true,\n        });\n\n    const { loggedIn } = useUserInfo();\n\n    const { data: hasPurchasedListing } =\n        trpc.artistAlley.hasPurchasedListing.useQuery(undefined, {\n            enabled: loggedIn,\n            suspense: true,\n        });\n\n    const {\n        adultFilterMode,\n        setAdultFilterMode,\n        categories,\n        isAdult,\n        categoryMatch,\n        setCategoryMatch,\n        sortOrder,\n        setSortOrder,\n    } = useArtistAlleyFilters();\n\n    return (\n        <>\n            <Disclosure\n                as=\"div\"\n                data-theme={postBoxTheme.current}\n                className={tw`co-themed-box co-artist-alley-filters cohost-shadow-light dark:cohost-shadow-dark col-span-1 flex h-fit max-h-max min-h-0 w-full flex-col rounded-lg border ${\n                    className ?? \"\"\n                }`}\n                defaultOpen={isDesktop}\n            >\n                <Disclosure.Button\n                    as=\"header\"\n                    className=\"flex flex-row items-center justify-between rounded-t-lg p-3 ui-not-open:rounded-b-lg\"\n                >\n                    <ChevronRightIcon className=\"h-5 w-5 ui-open:rotate-90 motion-safe:transition-transform\" />\n                    <span className=\"font-league text-xs uppercase\">\n                        filters\n                    </span>\n                </Disclosure.Button>\n                <Disclosure.Panel as=\"div\">\n                    <div className=\"flex flex-row flex-wrap gap-2 px-3 py-2\">\n                        {allCategories.map((category) => (\n                            <div\n                                key={`selected-token-${category}`}\n                                className=\"group h-max cursor-pointer select-none\"\n                            >\n                                {/* this weird nested div thing is to prevent a bug caused by having the default click handler and our removal handler on the same element */}\n                                <button\n                                    className={tw`co-token flex items-center justify-start gap-1 rounded-lg px-2 py-1 leading-none ${\n                                        categories.has(category)\n                                            ? \"co-active\"\n                                            : \"\"\n                                    }`}\n                                    onClick={(e) => {\n                                        e.stopPropagation();\n                                        categories.has(category)\n                                            ? categories.delete(category)\n                                            : categories.add(category);\n                                    }}\n                                    type=\"button\"\n                                >\n                                    <HashtagIcon className=\"inline-block h-3.5\" />\n                                    <span className=\"block\">{category}</span>\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                    <MultiSwitchButton\n                        tabs={[\n                            {\n                                label: \"any\",\n                                onClick: () => setCategoryMatch(\"any\"),\n                                active: categoryMatch === \"any\",\n                            },\n                            {\n                                label: \"all\",\n                                onClick: () => setCategoryMatch(\"all\"),\n                                active: categoryMatch === \"all\",\n                            },\n                        ]}\n                    />\n                    {isAdult && (\n                        <>\n                            <hr className=\"border-notWhite\" />\n                            <MultiSwitchButton\n                                tabs={[\n                                    {\n                                        label: \"hide 18+\",\n                                        onClick: () => {\n                                            setAdultFilterMode(\"hide\");\n                                        },\n                                        active: adultFilterMode === \"hide\",\n                                    },\n                                    {\n                                        label: \"show 18+\",\n                                        onClick: () => {\n                                            setAdultFilterMode(\"include\");\n                                        },\n                                        active: adultFilterMode === \"include\",\n                                    },\n                                    {\n                                        label: \"only 18+\",\n                                        onClick: () => {\n                                            setAdultFilterMode(\"only\");\n                                        },\n                                        active: adultFilterMode === \"only\",\n                                    },\n                                ]}\n                            />\n                        </>\n                    )}\n                    <hr className=\"border-notWhite\" />\n                    <MultiSwitchButton\n                        tabs={[\n                            {\n                                label: \"random\",\n                                onClick: () => {\n                                    setSortOrder(\"random\");\n                                },\n                                active: sortOrder === \"random\",\n                            },\n                            {\n                                label: \"newest first\",\n                                onClick: () => {\n                                    setSortOrder(\"newest\");\n                                },\n                                active: sortOrder === \"newest\",\n                            },\n                            {\n                                label: \"oldest first\",\n                                onClick: () => {\n                                    setSortOrder(\"oldest\");\n                                },\n                                active: sortOrder === \"oldest\",\n                            },\n                        ]}\n                    />\n                </Disclosure.Panel>\n            </Disclosure>\n            <Disclosure\n                as=\"div\"\n                data-theme={postBoxTheme.current}\n                className={tw`co-themed-box co-artist-alley-filters cohost-shadow-light dark:cohost-shadow-dark col-span-1 mt-4 flex h-fit max-h-max min-h-0 w-full flex-col rounded-lg border ${\n                    className ?? \"\"\n                }`}\n                defaultOpen={isDesktop}\n            >\n                <Disclosure.Button\n                    as=\"header\"\n                    className=\"flex flex-row items-center justify-between rounded-t-lg p-3 ui-not-open:rounded-b-lg\"\n                >\n                    <ChevronRightIcon className=\"h-5 w-5 ui-open:rotate-90 motion-safe:transition-transform\" />\n                    <span className=\"font-league text-xs uppercase\">\n                        your listing here!\n                    </span>\n                </Disclosure.Button>\n                <Disclosure.Panel as=\"div\" className=\"p-3\">\n                    <div className=\"co-prose prose mb-3\">\n                        <p>\n                            are you an artist, musician, game developer, or\n                            other creative? got something you want cohost users\n                            to know about? get an artist alley listing! only $10\n                            per week!\n                        </p>\n                    </div>\n                    <BasicButton\n                        buttonSize=\"regular\"\n                        buttonColor=\"post-box-filled\"\n                        as=\"a\"\n                        href={sitemap.public.artistAlley.create().toString()}\n                        extraClasses=\"mt-2\"\n                    >\n                        buy a listing\n                    </BasicButton>\n                    {hasPurchasedListing && (\n                        <BasicButton\n                            buttonSize=\"regular\"\n                            buttonColor=\"post-box-filled\"\n                            as=\"a\"\n                            href={sitemap.public.artistAlley\n                                .ownerManage()\n                                .toString()}\n                            extraClasses=\"mt-2\"\n                        >\n                            manage your listings\n                        </BasicButton>\n                    )}\n                </Disclosure.Panel>\n            </Disclosure>\n        </>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { useDynamicTheme } from \"@/client/preact/hooks/dynamic-theme\";\nimport { useDisplayPrefs } from \"@/client/preact/hooks/use-display-prefs\";\nimport { useTransitionState } from \"@/client/preact/hooks/use-transition-state\";\nimport { useSiteConfig } from \"@/client/preact/providers/site-config-provider\";\nimport { CategoryMatch, SortOrder } from \"@/shared/api-types/artist-alley-v1\";\nimport { sitemap } from \"@/shared/sitemap\";\nimport {\n    ArtistAlleyAdultDisplayMode,\n    WireArtistAlley,\n} from \"@/shared/types/artist-alley\";\nimport { FeatureFlag } from \"@/shared/types/feature-flags\";\nimport { ArtistAlleyAdId, ProjectId } from \"@/shared/types/ids\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport { isDefined } from \"@/shared/util/filter-null-undefined\";\nimport { useSet } from \"@uidotdev/usehooks\";\nimport { useFlag } from \"@unleash/proxy-client-react\";\nimport React, {\n    Suspense,\n    startTransition,\n    useEffect,\n    useMemo,\n    useRef,\n} from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { toast } from \"react-hot-toast\";\nimport { useInView } from \"react-intersection-observer\";\nimport Masonry, { MasonryProps } from \"react-masonry-css\";\nimport { z } from \"zod\";\nimport {\n    ArtistAlleyFilterProvider,\n    useArtistAlleyFilters,\n} from \"../../artist-alley/artist-alley-filter-provider\";\nimport { ArtistAlleyFilters } from \"../../artist-alley/artist-alley-filters\";\nimport { ArtistAlleyListing } from \"../../artist-alley/artist-alley-listing\";\nimport { SidebarMenu } from \"../../sidebar-menu\";\n\nfunction generateMasonryBreakpoints(\n    maxCols: number\n): MasonryProps[\"breakpointCols\"] {\n    const breakpoints: MasonryProps[\"breakpointCols\"] = {\n        default: 1,\n    };\n\n    // breakpoints are based on a max-width, so we need to set the breakpoint\n    // based on the maximum number of columns below that width. columns are max\n    // 300px, so 2 columns requires a min-width of 600px, meaning 1 column has a\n    // max-width of 600px. i swear this makes sense. - jkap, 4/23/24\n    for (let i = 1; i <= maxCols; i++) {\n        breakpoints[300 * (i + 1)] = i;\n    }\n\n    // since it's based on max-width, we set a fallback breakpoint that's\n    // impossible to hit so that we don't snap back to 1 column on larger\n    // screens.\n    breakpoints[Number.MAX_SAFE_INTEGER] = maxCols + 1;\n    return breakpoints;\n}\n\nexport const ArtistAlleyPage = () => {\n    const { isAdult, explicitlyCollapseAdultContent } = useDisplayPrefs();\n\n    const [adultState, setAdultFilterMode] =\n        useTransitionState<ArtistAlleyAdultDisplayMode>(\n            // if the user is an adult, use their display setting. otherwise,\n            // default to hiding adult content\n            isAdult\n                ? explicitlyCollapseAdultContent\n                    ? \"hide\"\n                    : \"include\"\n                : \"hide\"\n        );\n    const [categoryMatch, setCategoryMatch] =\n        useTransitionState<CategoryMatch>(\"any\");\n    const categories = useSet<string>();\n\n    const artistAlleyLive = useFlag(FeatureFlag.Enum[\"artist-alley-listings\"]);\n\n    const [sortOrder, setSortOrder] = useTransitionState<SortOrder>(\"random\");\n\n    return (\n        <ArtistAlleyFilterProvider.Provider\n            value={{\n                adultFilterMode: adultState,\n                isAdult,\n                categories,\n                setAdultFilterMode,\n                categoryMatch,\n                setCategoryMatch,\n                sortOrder,\n                setSortOrder,\n            }}\n        >\n            <div className=\"styled-scrollbars-light dark:styled-scrollbars-dark styled-scrollbars-light dark:styled-scrollbars-dark container mx-auto flex w-full max-w-full flex-row [height:calc(100vh-4rem)]\">\n                <Helmet title=\"artist alley\" />\n                <SidebarMenu narrowMode={true} />\n                {artistAlleyLive ? (\n                    <Suspense fallback={<div>aaaaaaa</div>}>\n                        <ArtistAlleyInner />\n                    </Suspense>\n                ) : (\n                    <ArtistAlleyClosed />\n                )}\n            </div>\n        </ArtistAlleyFilterProvider.Provider>\n    );\n};\n\nconst ArtistAlleyClosed: React.FC = () => {\n    const theme = useDynamicTheme();\n    return (\n        <div className=\"mt-12\">\n            <div data-theme={theme.current} className=\"co-themed-box co-static\">\n                <div className=\"co-prose prose\">\n                    <h1>artist alley is currently closed</h1>\n\n                    <p>\n                        we're still working on getting everything set up! if\n                        you're interested in buying a listing, you can do so on\n                        the{\" \"}\n                        <a\n                            href={sitemap.public.artistAlley\n                                .create()\n                                .toString()}\n                        >\n                            sign up page!\n                        </a>\n                    </p>\n                    <p>\n                        artist alley should be live soon. check out{\" \"}\n                        <a href=\"https://cohost.org/staff\">@staff</a> for the\n                        most recent info!\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// doing this with zod because i was having trouble getting typescript to handle\n// the discriminated union correctly otherwise\nconst MasonicListing = z.discriminatedUnion(\"type\", [\n    z.object({\n        type: z.literal(\"LISTING\"),\n        id: ArtistAlleyAdId,\n        listing: WireArtistAlley,\n        project: WireProjectModel,\n    }),\n    z.object({ type: z.literal(\"FILTER\"), id: z.literal(\"FILTER\") }),\n]);\ntype MasonicListing = z.infer<typeof MasonicListing>;\n\nconst ArtistAlleyInner: React.FC = () => {\n    const toastId = useRef<string | undefined>(undefined);\n\n    const { operatingPrime } = useSiteConfig();\n\n    const { adultFilterMode, categories, categoryMatch, sortOrder } =\n        useArtistAlleyFilters();\n\n    const [{ pages }, { fetchNextPage, fetchStatus }] =\n        trpc.artistAlley.getListingsForDisplay.useSuspenseInfiniteQuery(\n            {\n                adultDisplayMode: adultFilterMode,\n                categories: Array.from(categories),\n                sortModulus: operatingPrime,\n                categoryMatch,\n                sortOrder,\n            },\n            {\n                getNextPageParam: (lastPage) => lastPage.nextCursor,\n                keepPreviousData: true,\n                // never refetch, each page load should be fully deterministic\n                refetchInterval: Infinity,\n                refetchOnMount: false,\n                refetchOnReconnect: false,\n                refetchOnWindowFocus: false,\n                refetchIntervalInBackground: false,\n\n                // toast management\n                onError: (err) => {\n                    toast.error(err.message, {\n                        id: toastId.current,\n                    });\n                },\n                onSuccess: () => {\n                    toast.dismiss(toastId.current);\n                },\n            }\n        );\n\n    useEffect(() => {\n        if (fetchStatus === \"fetching\") {\n            toastId.current = toast.loading(\"loading listings...\", {\n                id: toastId.current,\n            });\n        }\n    }, [fetchStatus]);\n\n    const flattenedListings = useMemo(() => {\n        return pages.flatMap((page) => page.listings) ?? [];\n    }, [pages]);\n\n    const flattenedProjects = useMemo<Map<ProjectId, WireProjectModel>>(() => {\n        const projects = new Map<ProjectId, WireProjectModel>();\n        pages.forEach((page) => {\n            Object.values(page.relevantProjects).forEach((project) => {\n                projects.set(project.projectId, project);\n            });\n        });\n        return projects;\n    }, [pages]);\n\n    const masonicListings = useMemo<Array<MasonicListing>>(() => {\n        const val = flattenedListings\n            .map<MasonicListing | undefined>((listing) => {\n                const project = flattenedProjects.get(listing.projectId);\n                if (!project) return undefined;\n                return {\n                    type: \"LISTING\",\n                    id: listing.id,\n                    listing,\n                    project,\n                };\n            })\n            .filter(isDefined);\n\n        // inject the filter sentinel item at the beginning so it's rendered in the right place\n        val.unshift({ type: \"FILTER\", id: \"FILTER\" });\n\n        return val;\n    }, [flattenedListings, flattenedProjects]);\n\n    const { ref, inView } = useInView();\n\n    useEffect(() => {\n        if (inView) {\n            startTransition(() => {\n                void fetchNextPage();\n            });\n        }\n    }, [inView, fetchNextPage]);\n\n    const masonryBreakpoints = useMemo(() => {\n        return generateMasonryBreakpoints(20);\n    }, []);\n\n    return (\n        <div className=\"flex w-full flex-col gap-4\">\n            <Masonry\n                breakpointCols={masonryBreakpoints}\n                className=\"artist-alley-grid w-full\"\n                columnClassName=\"artist-alley-grid_column\"\n            >\n                {masonicListings.map((listing) => (\n                    <ListingMasonryWrapper key={listing.id} data={listing} />\n                ))}\n            </Masonry>\n            {/* marker so we can load the next page */}\n            <div className=\"h-[1px] w-[1px] flex-shrink-0\" ref={ref}></div>\n        </div>\n    );\n};\n\nexport default ArtistAlleyPage;\n\nconst ListingMasonryWrapper: React.FC<{\n    data: MasonicListing;\n}> = ({ data }) => {\n    if (data.type === \"LISTING\")\n        return (\n            <div\n                key={data.listing.id}\n                className=\"mt-4 inline-block w-full max-w-[300px]\"\n            >\n                <ArtistAlleyListing\n                    listing={data.listing}\n                    project={data.project}\n                />\n            </div>\n        );\n\n    return (\n        <div key={data.id} className=\"mt-4 inline-block w-full max-w-[300px]\">\n            <ArtistAlleyFilters />\n        </div>\n    );\n};\n"],"names":["ArtistAlleyFilterProvider","React","adultFilterMode","isAdult","categories","Set","setAdultFilterMode","categoryMatch","setCategoryMatch","sortOrder","setSortOrder","useArtistAlleyFilters","useContext","ArtistAlleyAttachment","attachment","displayPrefs","useDisplayPrefs","src","setSrc","useState","gifsStartPaused","previewURL","fileURL","isPlaying","setIsPlaying","srcWithDpr","useImageOptimizer","className","srcSet","alt","altText","PlayPauseButton","showPlay","extraClasses","onPlay","handlePlay","onPause","handlePause","ArtistAlleyMeatballMenu","listing","reportingUIContext","ReportingUIContext","Menu","as","EllipsisHorizontalIcon","MeatballMenuItem","disabled","onClick","send","type","artistAlleyListingId","id","ItemIcon","ShieldExclamationIconOutline","text","ArtistAlleyListing","project","rendered","useMemo","renderMarkdownReactNoHTML","body","Date","disableEmbeds","externalLinksInNewTab","hasCohostPlus","renderingContext","theme","useDynamicTheme","current","ProjectAvatar","href","sitemap","projectHandle","handle","toString","adultContent","BasicButton","buttonColor","buttonSize","cta","link","target","length","ListingTags","tags","filteredTags","filter","tag","tw","map","key","has","delete","add","useTransitionState","args","state","setState","isTransitioning","startTransition","useTransition","newState","ArtistAlleyApprovalStatus","z","ArtistAlleyPaymentStatus","ArtistAlleyWireAttachment","attachmentFilename","ip","url","WireArtistAlley","ArtistAlleyAdId","projectId","ProjectId","expiresAt","ISODateString","createdAt","nullable","extend","userId","UserId","status","paymentStatus","stripeCheckoutSessionId","stripePaymentIntentId","rejectReason","numWeeks","int","notes","receiptUrl","MultiSwitchButton","tabs","tab","label","active","ArtistAlleyFilters","postBoxTheme","isDesktop","useMedia","allCategories","trpc","undefined","refetchInterval","Infinity","keepPreviousData","loggedIn","useUserInfo","data","hasPurchasedListing","enabled","suspense","Disclosure","defaultOpen","ChevronRightIcon","category","e","stopPropagation","HashtagIcon","ArtistAlleyPage","explicitlyCollapseAdultContent","adultState","useSet","artistAlleyLive","useFlag","FeatureFlag","value","Helmet","title","SidebarMenu","narrowMode","Suspense","fallback","ArtistAlleyInner","ArtistAlleyClosed","WireProjectModel","toastId","useRef","operatingPrime","useSiteConfig","pages","fetchNextPage","fetchStatus","adultDisplayMode","Array","from","sortModulus","getNextPageParam","lastPage","nextCursor","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","refetchIntervalInBackground","onError","err","toast","message","onSuccess","useEffect","flattenedListings","flatMap","page","listings","flattenedProjects","projects","Map","forEach","Object","values","relevantProjects","set","masonicListings","val","get","isDefined","unshift","ref","inView","useInView","masonryBreakpoints","maxCols","breakpoints","default","i","Number","MAX_SAFE_INTEGER","generateMasonryBreakpoints","Masonry","breakpointCols","columnClassName","ListingMasonryWrapper"],"sourceRoot":""}