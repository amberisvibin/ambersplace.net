{"version":3,"file":"client-preact-components-pages-moderation-manage-page-edit-profile-form.0dba326505a9acbba7b3.js","mappings":"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","sources":["webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/pages/moderation/manage-page.edit-profile-form.tsx"],"sourcesContent":["import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import { trpc } from \"@/client/lib/trpc\";\nimport sitemap from \"@/shared/sitemap\";\nimport { WireProjectModelModeratorExtensions } from \"@/shared/types/projects\";\nimport { WireUserModel } from \"@/shared/types/wire-models\";\nimport React, { FunctionComponent } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { Button } from \"../../elements/button\";\n\ntype Inputs = {\n    displayName: string;\n    dek: string;\n    description: string;\n    pronouns: string;\n    url: string;\n    clearAvatar: boolean;\n    clearHeader: boolean;\n};\n\nexport const EditProfileForm: FunctionComponent<{\n    project: WireProjectModelModeratorExtensions;\n    selfUser: WireUserModel | undefined;\n}> = ({ project, selfUser }) => {\n    const { register, handleSubmit, reset } = useForm<Inputs>({\n        defaultValues: {\n            clearAvatar: false,\n            clearHeader: false,\n            dek: project.dek,\n            description: project.description,\n            displayName: project.displayName,\n            pronouns: project.pronouns ?? \"\",\n            url: project.url ?? \"\",\n        },\n    });\n\n    const updateProfileMutation =\n        trpc.moderation.project.updateProfile.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = async (inputs) => {\n        await updateProfileMutation.mutateAsync({\n            projectId: project.projectId,\n            ...inputs,\n        });\n        window.location.reload();\n    };\n\n    return (\n        <form\n            className=\"prose rounded-lg border p-3\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <table>\n                <tbody>\n                    <tr>\n                        <td>handle</td>\n                        <td>\n                            {project.handle}{\" \"}\n                            {project.handleSuspicionResult ? (\n                                <span\n                                    className={`${\n                                        project.handleSuspicionResult.score >\n                                        0.8\n                                            ? \"text-red\"\n                                            : \"\"\n                                    }`}\n                                >\n                                    (suspicion score:{\" \"}\n                                    {(\n                                        project.handleSuspicionResult.score *\n                                        100\n                                    ).toLocaleString(undefined, {\n                                        maximumFractionDigits: 2,\n                                    })}\n                                    %)\n                                </span>\n                            ) : null}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>display name</td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                {...register(\"displayName\", {\n                                    maxLength: 70,\n                                })}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>dek</td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                {...register(\"dek\", {\n                                    maxLength: 35,\n                                })}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>pronouns</td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                {...register(\"pronouns\", {\n                                    maxLength: 35,\n                                })}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>url</td>\n                        <td>\n                            <input type=\"url\" {...register(\"url\")} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>description</td>\n                        <td>\n                            <textarea\n                                className=\"w-full max-w-prose\"\n                                {...register(\"description\")}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>avatar</td>\n                        <td>\n                            <a\n                                href={project.avatarURL}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                {project.avatarURL}\n                            </a>\n                            <br />\n                            <label>remove? </label>\n                            <input\n                                type=\"checkbox\"\n                                {...register(\"clearAvatar\")}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>header</td>\n                        <td>\n                            {project.headerURL ? (\n                                <>\n                                    <a\n                                        href={project.headerURL}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {project.headerURL}\n                                    </a>\n                                    <br />\n                                    <label>remove? </label>\n                                    <input\n                                        type=\"checkbox\"\n                                        {...register(\"clearHeader\")}\n                                    />\n                                </>\n                            ) : (\n                                \"none\"\n                            )}\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td>self user</td>\n                        <td>\n                            {selfUser ? (\n                                <a\n                                    href={sitemap.public.moderation\n                                        .manageUser({\n                                            userId: selfUser.userId,\n                                        })\n                                        .toString()}\n                                >\n                                    {selfUser.email} (user id {selfUser.userId})\n                                </a>\n                            ) : (\n                                <>none</>\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>last activity time</td>\n                        <td>{project.lastActivityTime ?? \"null\"}</td>\n                    </tr>\n                    <tr>\n                        <td>delete after time</td>\n                        <td>{project.deleteAfter ?? \"null\"}</td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <Button type=\"submit\" buttonStyle=\"pill\" color=\"green\">\n                save changes\n            </Button>\n            <Button\n                type=\"reset\"\n                buttonStyle=\"pill\"\n                color=\"red\"\n                onClick={(e) => {\n                    e.preventDefault();\n                    reset(undefined, { keepDefaultValues: true });\n                }}\n            >\n                reset changes\n            </Button>\n        </form>\n    );\n};\n"],"names":["ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","className","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","React","ref","classes","_extends","children","displayName","LinkButton","EditProfileForm","project","selfUser","register","handleSubmit","reset","useForm","defaultValues","clearAvatar","clearHeader","dek","description","pronouns","url","updateProfileMutation","trpc","onSubmit","async","mutateAsync","projectId","inputs","window","location","reload","handle","handleSuspicionResult","score","toLocaleString","undefined","maximumFractionDigits","type","maxLength","href","avatarURL","target","rel","headerURL","sitemap","userId","toString","email","lastActivityTime","deleteAfter","onClick","e","preventDefault","keepDefaultValues"],"sourceRoot":""}