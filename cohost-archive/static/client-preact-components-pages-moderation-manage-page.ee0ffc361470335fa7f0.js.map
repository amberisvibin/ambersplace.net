{"version":3,"file":"client-preact-components-pages-moderation-manage-page.ee0ffc361470335fa7f0.js","mappings":"+NAIO,MAAMA,EAA4BC,EAAAA,cAStC,CACCC,gBAAiB,OACjBC,SAAS,EACTC,WAAY,IAAIC,IAChBC,mBAAoBA,OACpBC,cAAe,MACfC,iBAAkBA,OAClBC,UAAW,SACXC,aAAcA,SAGLC,EAAwBA,KAC1BC,EAAAA,EAAAA,YAAWZ,I,yOCMtB,MAEMa,EAEDA,EAAGC,WAAAA,MACJ,MAAMC,GAAeC,EAAAA,EAAAA,MACdC,EAAKC,IAAUC,EAAAA,EAAAA,UAClBJ,EAAaK,gBACPN,EAAWO,WACXP,EAAWQ,UAEdC,EAAWC,IAAgBL,EAAAA,EAAAA,WAAUJ,EAAaK,iBAEnDK,GAAaC,EAAAA,EAAAA,GAAkBT,EAAK,IAbzB,KAyBjB,OACIhB,EAAAA,cAAA,OAAK0B,UAAU,kBACX1B,EAAAA,cAAA,OACIgB,IAAKQ,EAAW,GAChBG,OAAS,qBACPH,EAAW,2BACXA,EAAW,2BACXA,EAAW,uBAEbI,IAAKf,EAAWgB,QAChBH,UAAU,4DAGbb,EAAWO,aAAeP,EAAWQ,SAClCrB,EAAAA,cAAC8B,EAAAA,EAAe,CACZR,UAAWA,EACXS,SAAUlB,EAAWO,aAAeP,EAAWQ,QAC/CW,aAAa,iCACbC,OAvBGC,KACfX,GAAa,GACbN,EAAOJ,EAAWQ,UAsBNc,QA7BIC,KAChBb,GAAa,GACbN,EAAOJ,EAAWO,iBAkCpBiB,EAAkEA,EACpEC,QAAAA,MAEA,MAAMC,GAAqB5B,EAAAA,EAAAA,YAAW6B,EAAAA,GAEtC,OAGIxC,EAAAA,cAACyC,EAAAA,EAAI,CAACC,GAAG,MAAMhB,UAAU,gBACrB1B,EAAAA,cAACyC,EAAAA,EAAAA,OAAW,CAACf,UAAU,qEACnB1B,EAAAA,cAAC2C,EAAAA,EAAsB,CAACjB,UAAU,oDAGtC1B,EAAAA,cAACyC,EAAAA,EAAAA,MAAU,CAACf,UAAU,sHAClB1B,EAAAA,cAACyC,EAAAA,EAAAA,KAAS,KACNzC,EAAAA,cAAC4C,EAAAA,EAAgB,CACbC,UAAU,EACVC,QAASA,KACLP,EAAmBQ,KAAK,CACpBC,KAAM,eACNC,qBAAsBX,EAAQY,MAGtCC,SAAUC,EAAAA,EACVC,KAAK,eAQhBC,EAGRA,EAAGhB,QAAAA,EAASiB,QAAAA,MACb,MAAMC,GAAWC,EAAAA,EAAAA,UAAQ,KACdC,EAAAA,EAAAA,IAA0BpB,EAAQqB,KAAM,IAAIC,KAAQ,CACvDC,eAAe,EACfC,uBAAuB,EACvBC,eAAe,EACfC,iBAAkB,iBAEvB,CAAC1B,EAAQqB,OAENM,GAAQC,EAAAA,EAAAA,MAEd,OACIlE,EAAAA,cAAA,OACI,aAAYiE,EAAME,QAClBzC,UAAU,gFAEV1B,EAAAA,cAAA,OAAK0B,UAAU,iEACX1B,EAAAA,cAACoE,EAAAA,EAAa,CAACb,QAASA,EAAS7B,UAAU,QAC3C1B,EAAAA,cAAA,KACIqE,KAAMC,EAAAA,GAAAA,OAAAA,QAAAA,eACc,CAAEC,cAAehB,EAAQiB,SACxCC,YACR,IACKlB,EAAQiB,QAEdxE,EAAAA,cAAA,OAAK0B,UAAU,UAAS,KACvBY,EAAQoC,aACL1E,EAAAA,cAAA,QAAM0B,UAAU,sCAAqC,OAGrD,KACJ1B,EAAAA,cAACqC,EAAuB,CAACC,QAASA,KAErCA,EAAQzB,YACLb,EAAAA,cAACY,EAAqB,CAACC,WAAYyB,EAAQzB,aAE/Cb,EAAAA,cAAA,OAAK0B,UAAU,sBAAsB8B,GAErCxD,EAAAA,cAAA,OAAK0B,UAAU,aACX1B,EAAAA,cAAC2E,EAAAA,EAAW,CACRjC,GAAG,IACHkC,YAAY,GACZC,WAAW,UACXR,KAAM/B,EAAQwC,IAAIC,KAClB/C,aAAa,gBACbgD,OAAO,UAEN1C,EAAQwC,IAAIzB,OAIpBf,EAAQnC,WAAW8E,OAAS,GACzBjF,EAAAA,cAACkF,EAAW,CAACC,KAAM7C,EAAQnC,eAMrC+E,EAA4CA,EAAGC,KAAAA,MACjD,MAAM,WAAEhF,IAAeO,EAAAA,EAAAA,KACjB0E,EAAeD,EAAKE,QAAQC,GAAe,IAAPA,IAE1C,OAAOF,EAAaH,OAChBjF,EAAAA,cAAA,OAAK0B,UAAU,yBACX1B,EAAAA,cAAA,OACI0B,UAAW6D,EAAAA,EAAG,sEAEdvF,EAAAA,cAAA,WACKoF,EAAaI,KAAKF,GACftF,EAAAA,cAAA,UACIyF,IAAKH,EACL5D,UAAY,8CAERvB,EAAWuF,IAAIJ,GAAO,YAAc,IAExCxC,QAASA,KACL3C,EAAWuF,IAAIJ,GACTnF,EAAWwF,OAAOL,GAClBnF,EAAWyF,IAAIN,KAE5B,IACKA,QAMtB,O,+VCzMD,MAAMO,EAAcC,EAAAA,EAAAA,KAAO,CAAC,OAAQ,YAAa,UAG3CC,EAAcD,EAAAA,EAAAA,KAAO,CAC9B,SACA,aACA,QACA,YACA,MACA,QACA,SACA,YACA,gBACA,gBAWEE,GAPqBF,EAAAA,EAAAA,OAAS,CAChCG,YAAaJ,EACbK,MAAOH,EACPrE,UAAWoE,EAAAA,EAAAA,SAAWK,aAIPC,GAAAA,CAAW,cAAe,wBAMvCC,EAAcD,GAAAA,CAChB,gBACA,YACA,eACA,YAGEE,EAAmBF,GAAAA,CAAW,SAAU,cAExCG,EAAoBH,GAAAA,CACtB,OACA,OACA,eACA,iBACA,aACA,OACA,WAGEI,EAAgBJ,GAAAA,CAClB,gBACA,kBACA,cACA,uBACA,2BACA,2BACA,6BACA,uBACA,oBACAJ,GAEES,EAAoBL,GAAAA,CACtB,oBACA,sBACA,kBACA,2BACA,+BACA,+BACA,iCACA,2BACA,wBACAJ,GAGEU,EAAaN,GAAAA,CACf,aACA,eACA,WACA,oBACA,wBACA,wBACA,0BACA,oBACAJ,GAGEW,EAAeP,GAAAA,CACjB,eACA,iBACA,aACA,sBACA,0BACA,0BACA,4BACA,sBACAJ,GAEEY,EAAeR,GAAAA,CACjB,eACA,iBACA,aACA,cACA,uBAEES,EAAkBT,GAAAA,CACpB,kBACA,oBACA,gBACA,yBACA,sBACAJ,GAGEc,EAAgBV,GAAAA,CAClB,gBACA,cACA,gBACA,kBACA,mBAGEW,EAAmBX,GAAAA,CACrB,eACA,gBACA,qBACA,0BAGEY,EAA2BZ,GAAAA,CAC7B,gBACA,YACA,0BACA,2BACA,8BAGEa,EAAyBb,GAAAA,CAC3B,WACA,oBACA,kBACA,uBAGEc,EAAiBC,GACnBf,GAAAA,CACI,eACA,eACA,OACA,OACA,YACAe,EAAMzF,UACN,CACI,CAAC2E,GAAoC,SAAtBc,EAAMlB,YACrB,CAACK,GAAyC,cAAtBa,EAAMlB,YAC1B,CAACM,GAA0C,UAAtBY,EAAMlB,YAC3B,CAACO,GAAgC,WAAhBW,EAAMjB,MACvB,CAACO,GAAoC,eAAhBU,EAAMjB,MAC3B,CAACU,GAA+B,UAAhBO,EAAMjB,MACtB,CAACW,GAAkC,cAAhBM,EAAMjB,MACzB,CAACQ,GAA6B,QAAhBS,EAAMjB,MACpB,CAACY,GAAgC,WAAhBK,EAAMjB,MACvB,CAACS,GAA+B,UAAhBQ,EAAMjB,MACtB,CAACa,GAAmC,cAAhBI,EAAMjB,MAC1B,CAACc,GAA2C,kBAAhBG,EAAMjB,MAClC,CAACe,GAAyC,gBAAhBE,EAAMjB,QAI/BkB,EAKTpH,EAAAA,YAAiB,EAAGiG,YAAAA,EAAaC,MAAAA,EAAOxE,UAAAA,KAAcyF,GAASE,KAC/D,MAAMC,EAAUJ,EAAc,CAC1BjB,YAAAA,EACAC,MAAAA,EACAxE,UAAAA,KACGyF,IAEP,OACInH,EAAAA,cAAA,SAAAuH,EAAA,GAAYJ,EAAK,CAAEzF,UAAW4F,EAASD,IAAKA,IACvCF,EAAMK,aAInBJ,EAAOK,YAAc,SAEd,MAAMC,EAKT1H,EAAAA,YAAiB,EAAGiG,YAAAA,EAAaC,MAAAA,KAAUiB,GAASE,KACpD,MAAMC,EAAUJ,EAAc,CAAEjB,YAAAA,EAAaC,MAAAA,KAAUiB,IACvD,OACInH,EAAAA,cAAA,IAAAuH,EAAA,GAAOJ,EAAK,CAAEzF,UAAW4F,EAASD,IAAKA,IAClCF,EAAMK,aAInBE,EAAWD,YAAc,c,oGC/LlB,MAAME,EAAmDA,EAC5DC,SAAAA,EACAC,WAAAA,EACAC,aAAAA,EACAC,aAAAA,EACAC,eAAAA,EACAC,kBAAAA,EACApF,SAAAA,MAEA,MAAMqF,EAAyBL,EAAa,aAAe,aACrDM,EAA2BF,GAAqB,KAEtD,OACIjI,EAAAA,cAAA,OAAK0B,UAAU,wFACX1B,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,SACIoI,QAASN,EAAaX,MAAMjE,GAC5BxB,UAAW2G,GAAAA,CACN,oCACDH,EACA,CAAE,gBAAiBrF,KAGtB+E,GAGJC,EACG7H,EAAAA,cAAA,SACIoI,QAASN,EAAaX,MAAMjE,GAC5BxB,UAAW2G,GAAAA,CACP,uCACA,CAAE,gBAAiBxF,KAGtBgF,GAEL,KAEJ7H,EAAAA,cAAA,OAAK0B,UAAU,sCACVoG,GAGJC,EACG/H,EAAAA,cAACsI,EAAAA,EAAO,CACJC,MAAOR,EACPrG,UAAU,0BAETsG,GAGLG,EAGJnI,EAAAA,cAAA,MAAI0B,UAAU,sD,mICvDvB,MAAM8G,EAETA,EAAGjF,QAAAA,EAASkF,SAAAA,EAAUC,WAAAA,KAElB1I,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,MAAI0B,UAAU,MAAK,yBAEnB1B,EAAAA,cAAA,OAAK0B,UAAU,iCACV+G,EAASjD,KAAKlD,GACXtC,EAAAA,cAAA,OACI0B,UAAU,uCACV+D,IAAKnD,EAAQY,IAEblD,EAAAA,cAACsD,EAAAA,EAAkB,CACfhB,QAASA,EACTiB,QAASA,IAEbvD,EAAAA,cAAC2E,EAAAA,EAAW,CACRjC,GAAI,IACJ2B,KAAMC,EAAAA,GAAAA,OAAAA,WAAAA,yBACF,CAAEqE,KAAMrG,EAAQY,KAEpB2B,WAAW,UACXD,YAAY,SACZ5C,aAAa,QAChB,wB,4WCvBzB,MAAM4G,EAAkEA,CACpEC,GACEC,cAAAA,KAEF9I,EAAAA,cAAA,OAAKyF,IAAM,qBAAoBoD,EAAWE,UACrCF,EAAWG,MAAM,aAAWH,EAAWE,OAAO,KAe1CE,EAA+CA,EAAGC,SAAAA,MAC3D,MAAM,SAAEC,EAAQ,aAAEC,EAAY,SAAEC,IAC5BC,EAAAA,EAAAA,OAEGC,EAAqBC,IAA0BtI,EAAAA,EAAAA,eAEpDuI,IACKC,EAAkBC,IAAuBzI,EAAAA,EAAAA,UAAiB,KACzD0I,MAAOC,EAAkBC,WAAYC,IACzCC,EAAAA,EAAAA,IAAeN,GAEbO,GAAsBC,EAAAA,EAAAA,cACxB,CAACC,GAAuCC,SAAAA,MACpCT,EAAoBS,KAExB,CAACT,IAQCU,GAA8BH,EAAAA,EAAAA,cAChC,EAAGI,MAAAA,MACMP,EAAsBO,KAE/B,CAACP,IAGCQ,GACFL,EAAAA,EAAAA,cAAyC,KAChCH,EAAsB,MAC5B,CAACA,IAEFS,GAAuBN,EAAAA,EAAAA,cAGzB,CAACO,GAAU5B,WAAAA,MACFW,EAAuBX,GAC5BQ,EAAS,SAAUR,EAAWE,UAElC,CAACS,EAAwBH,IAG7B,OACIrJ,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,QACI0B,UAAU,oEACVwH,SAAUE,EAAaF,IAEvBlJ,EAAAA,cAAA,MAAI0B,UAAU,MAAK,eAEnB1B,EAAAA,cAAA,QAAAuH,EAAA,CAAOvE,KAAK,SAASsH,MAAM,UAAanB,EAAS,YAEjDnJ,EAAAA,cAAA,UAECuJ,EACGvJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,iBAEI,GAAEuJ,EAAoBP,kBAAkBO,EAAoBR,UAC9D/I,EAAAA,cAACoH,EAAAA,GAAM,CACHnB,YAAY,OACZC,MAAM,SACNxE,UAAU,QACVoB,QA/CI4H,KACnBlB,OAAuBC,GAC5BJ,EAAS,UAAW,KA8CH,aAKLrJ,EAAAA,cAAAA,EAAAA,SAAA,KAAE,6CAEEA,EAAAA,cAAC2K,IAAW,CACRC,YAAaf,GAAoB,GACjCgB,mBAAqBhC,GACjBA,EAAWG,MAEf8B,WAAY,CACRC,SAAUd,EACVK,MAAOZ,GAEXW,4BACIA,EAEJE,4BACIA,EAEJC,qBAAsBA,EACtB5B,iBAAkBA,EAClBoC,yBAAyB,KAKrChL,EAAAA,cAAA,SAAG,4BAECA,EAAAA,cAAA,WAAcmJ,EAAS,SAAU,CAAE8B,UAAU,MAGjDjL,EAAAA,cAACoH,EAAAA,GAAM,CACHpE,KAAK,SACLiD,YAAY,OACZC,MAAM,SACNxE,UAAU,SACb,kB,yWCzHV,MAAMwJ,EAGRA,EAAG3H,QAAAA,EAAS4H,SAAAA,MACb,MAAM,SAAEhC,EAAQ,aAAEC,EAAY,MAAEgC,IAAU9B,EAAAA,EAAAA,IAAgB,CACtD+B,cAAe,CACXC,aAAa,EACbC,aAAa,EACbC,IAAKjI,EAAQiI,IACbC,YAAalI,EAAQkI,YACrBhE,YAAalE,EAAQkE,YACrBiE,SAAUnI,EAAQmI,UAAY,GAC9BC,IAAKpI,EAAQoI,KAAO,MAItBC,EACFC,EAAAA,EAAAA,WAAAA,QAAAA,cAAAA,cAUJ,OACI7L,EAAAA,cAAA,QACI0B,UAAU,8BACVwH,SAAUE,GAXsB0C,MAAAA,UAC9BF,EAAsBG,YAAY,CACpCC,UAAWzI,EAAQyI,aAChBC,IAEPC,OAAOC,SAASC,aAQZpM,EAAAA,cAAA,aACIA,EAAAA,cAAA,aACIA,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UACKuD,EAAQiB,OAAQ,IAChBjB,EAAQ8I,sBACLrM,EAAAA,cAAA,QACI0B,UACI6B,EAAQ8I,sBAAsBC,MAC9B,GACM,WACA,IAEb,oBACqB,KAGd,IADA/I,EAAQ8I,sBAAsBC,OAEhCC,oBAAe9C,EAAW,CACxB+C,sBAAuB,IACxB,MAGP,OAGZxM,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,gBACJA,EAAAA,cAAA,UACIA,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,QACDmG,EAAS,cAAe,CACxBsD,UAAW,SAK3BzM,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,OACJA,EAAAA,cAAA,UACIA,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,QACDmG,EAAS,MAAO,CAChBsD,UAAW,SAK3BzM,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,UACIA,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,QACDmG,EAAS,WAAY,CACrBsD,UAAW,SAK3BzM,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,OACJA,EAAAA,cAAA,UACIA,EAAAA,cAAA,QAAAuH,EAAA,CAAOvE,KAAK,OAAUmG,EAAS,WAGvCnJ,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,UACIA,EAAAA,cAAA,WAAAuH,EAAA,CACI7F,UAAU,sBACNyH,EAAS,mBAIzBnJ,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UACIA,EAAAA,cAAA,KACIqE,KAAMd,EAAQmJ,UACd1H,OAAO,SACP2H,IAAI,cAEHpJ,EAAQmJ,WAEb1M,EAAAA,cAAA,WACAA,EAAAA,cAAA,aAAO,YACPA,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,YACDmG,EAAS,mBAIzBnJ,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UACKuD,EAAQqJ,UACL5M,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,KACIqE,KAAMd,EAAQqJ,UACd5H,OAAO,SACP2H,IAAI,cAEHpJ,EAAQqJ,WAEb5M,EAAAA,cAAA,WACAA,EAAAA,cAAA,aAAO,YACPA,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,YACDmG,EAAS,kBAIrB,SAKZnJ,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,UACKmL,EACGnL,EAAAA,cAAA,KACIqE,KAAMC,EAAAA,GAAAA,OAAAA,WAAAA,WACU,CACRyE,OAAQoC,EAASpC,SAEpBtE,YAEJ0G,EAASnC,MAAM,aAAWmC,EAASpC,OAAO,KAG/C/I,EAAAA,cAAAA,EAAAA,SAAA,KAAE,UAIdA,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,sBACJA,EAAAA,cAAA,UAAKuD,EAAQsJ,kBAAoB,SAErC7M,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,qBACJA,EAAAA,cAAA,UAAKuD,EAAQuJ,aAAe,WAKxC9M,EAAAA,cAACoH,EAAAA,GAAM,CAACpE,KAAK,SAASiD,YAAY,OAAOC,MAAM,SAAQ,gBAGvDlG,EAAAA,cAACoH,EAAAA,GAAM,CACHpE,KAAK,QACLiD,YAAY,OACZC,MAAM,MACNpD,QAAUiK,IACNA,EAAEC,iBACF5B,OAAM3B,EAAW,CAAEwD,mBAAmB,MAE7C,oB,yICxLb,EADmB,cArBnB,UAA2B,MACzBC,EAAK,QACLC,KACGhG,GACFiG,GACD,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,QAAS,YACTC,KAAM,eACN,cAAe,OACfpG,IAAK+F,EACL,kBAAmBD,GAClBhG,GAAQ+F,EAAqB,gBAAoB,QAAS,CAC3DhK,GAAIiK,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzDQ,SAAU,UACVC,EAAG,oPACHC,SAAU,gBCKd,EADmB,cArBnB,UAAmB,MACjBV,EAAK,QACLC,KACGhG,GACFiG,GACD,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,QAAS,YACTC,KAAM,eACN,cAAe,OACfpG,IAAK+F,EACL,kBAAmBD,GAClBhG,GAAQ+F,EAAqB,gBAAoB,QAAS,CAC3DhK,GAAIiK,GACHD,GAAS,KAAmB,gBAAoB,OAAQ,CACzDQ,SAAU,UACVC,EAAG,4IACHC,SAAU,gB,8OCJP,MAAMC,EAGRA,EAAGC,aAAAA,EAAc9B,UAAAA,MAClB,MAAM+B,EAAmBlC,EAAAA,EAAAA,WAAAA,QAAAA,YAAAA,eAUnB,SAAE1C,EAAQ,aAAEC,EAAY,QAAE4E,EAAO,UAAEC,IAAc3E,EAAAA,EAAAA,IAAgB,CACnE+B,cAAe,CACX6C,aAAcJ,EACdK,OAAQ,MAIhB,OACInO,EAAAA,cAAA,QACIkJ,SAAUE,GAjBuB6C,GAC9B8B,EAAiBhC,YAAY,CAChCC,UAAAA,EACAoC,SAAUnC,EAAOiC,aACjBC,OAAQlC,EAAOkC,WAcfzM,UAAU,wCAEV1B,EAAAA,cAAA,OAAK0B,UAAU,eACX1B,EAAAA,cAAA,aAAO,SACPA,EAAAA,cAACqO,EAAAA,GAAU,CACPL,QAASA,EACTM,KAAK,eACLC,OAAQA,EAAGC,MAAAA,KACPxO,EAAAA,cAACyO,EAAAA,EAAO,CACJC,UAAQ,EACRpE,MAAOkE,EAAMlE,MACbS,SAAUyD,EAAMzD,UAEhB/K,EAAAA,cAAA,OAAK0B,UAAU,iBACX1B,EAAAA,cAACyO,EAAAA,EAAAA,OAAc,CAAC/M,UAAU,2RACtB1B,EAAAA,cAAA,QAAM0B,UAAU,kBACX8M,EAAMlE,MAAMqE,KAAK,OAEtB3O,EAAAA,cAAA,QAAM0B,UAAU,yEACZ1B,EAAAA,cAAC4O,EAAiB,CACdlN,UAAU,wBACV,cAAY,WAIxB1B,EAAAA,cAACyO,EAAAA,EAAAA,QAAe,CAAC/M,UAAU,sJACtBmN,EAAAA,GAAAA,QAAAA,KAAyBC,GACtB9O,EAAAA,cAACyO,EAAAA,EAAAA,OAAc,CACXhJ,IAAKqJ,EACLxE,MAAOwE,EACPpN,UAAWA,EAAGqN,OAAAA,KACT,wDACGA,EACM,gCACA,mBAIb,EAAGC,SAAAA,KACAhP,EAAAA,cAAAA,EAAAA,SAAA,KACK,IACDA,EAAAA,cAAA,QACI0B,UAAY,mBACRsN,EACM,cACA,gBAGTF,GAEJE,EACGhP,EAAAA,cAAA,QAAM0B,UAAU,mEACZ1B,EAAAA,cAACiP,EAAS,CACNvN,UAAU,UACV,cAAY,UAGpB,gBAW5C1B,EAAAA,cAAA,OAAK0B,UAAU,uBACX1B,EAAAA,cAAA,aAAO,iBACNiO,EAAUiB,OAAOf,OACdnO,EAAAA,cAAA,QAAM0B,UAAU,sBACXuM,EAAUiB,OAAOf,OAAOgB,SAE7B,KACJnP,EAAAA,cAAA,WAAAuH,EAAA,CACI7F,UAAU,UACNyH,EAAS,SAAU,CACnB8B,SAAU,kCAItBjL,EAAAA,cAACoH,EAAAA,GAAM,CACHpE,KAAK,SACLiD,YAAY,OACZC,MAAM,SACNxE,UAAU,aACb,UAGAuM,EAAUmB,mBACPpP,EAAAA,cAAA,QAAM0B,UAAU,wBAAuB,sBACvC,KAGA,Q,mHC/HhB,MAoBa2N,EAA+CA,EAAG9L,QAAAA,MAC3D,MAAM,SAAE4F,EAAQ,aAAEC,EAAY,SAAEC,IAAaC,EAAAA,EAAAA,MACvCgG,EAtBW/K,CAAAA,IACjB,MAAMgL,EAAU1D,EAAAA,EAAAA,SAAAA,SAAAA,MAAAA,SAAsC,CAAEtH,cAAAA,IACxD,MAAO,CACHiL,UAAWD,EAAQC,UACnBxD,UAAWuD,EAAQE,MAAMzD,UACzBtH,aAAc6K,EAAQE,MAAM/K,aAC5BgL,qBAAsBH,EAAQE,MAAMC,uBAgBvBC,CAAYpM,EAAQiB,QAC/BoL,EAAW/D,EAAAA,EAAAA,SAAAA,SAAAA,OAAAA,cAEX3C,EAAmCuG,IACrC,IACI,MAAMI,EAKF,CACA1B,OAAQsB,EAAKtB,OACb5J,cAAehB,EAAQiB,QAG3B,OAAQiL,EAAKK,WACT,IAAK,sBACDD,EAAQnL,cAAe,EACvB,MACJ,IAAK,oBACDmL,EAAQnL,cAAe,EACvB,MACJ,IAAK,6BACDmL,EAAQH,sBAAuB,EAC/B,MACJ,IAAK,+BACDG,EAAQH,sBAAuB,EAIvCE,EAASG,OAAOF,GAClB,QACE1D,SAASC,WAIX4D,EAAmBF,IACrBzG,EAAS,YAAayG,GACtB1G,EAAaF,IAGjB,OACIlJ,EAAAA,cAAA,OAAK0B,UAAU,uDACX1B,EAAAA,cAAA,MAAI0B,UAAU,MAAK,oBAElB4N,EAASE,UACNxP,EAAAA,cAAA,QACI0B,UAAU,gBACVwH,SAAUE,EAAaF,IAEvBlJ,EAAAA,cAAA,SAAG,iBACgB,IACdsP,EAAS5K,cAAcD,YAAc,cAG1CzE,EAAAA,cAAA,SAAG,0BACyB,IACvBsP,EAASI,sBAAsBjL,YAC5B,cAGP6K,EAAS5K,aACN1E,EAAAA,cAACoH,EAAAA,GAAM,CACHnB,YAAY,OACZC,MAAM,SACNpD,QAASA,IACLkN,EAAgB,uBAEpBtO,UAAU,SACb,mCAID1B,EAAAA,cAACoH,EAAAA,GAAM,CACHnB,YAAY,OACZC,MAAM,SACNpD,QAASA,IAAMkN,EAAgB,qBAC/BtO,UAAU,SACb,kCAIJ4N,EAASI,qBACN1P,EAAAA,cAACoH,EAAAA,GAAM,CACHnB,YAAY,OACZC,MAAM,SACNpD,QAASA,IACLkN,EAAgB,gCAEpBtO,UAAU,SACb,uCAID1B,EAAAA,cAACoH,EAAAA,GAAM,CACHnB,YAAY,OACZC,MAAM,SACNpD,QAASA,IACLkN,EAAgB,8BAEpBtO,UAAU,SACb,sCAKL1B,EAAAA,cAAA,SAAG,4BAECA,EAAAA,cAAA,WAAcmJ,EAAS,SAAU,CAAE8B,UAAU,OAIrDjL,EAAAA,cAAAA,EAAAA,SAAA,KAAE,8B,6WClIX,MAAMiQ,EAA2DA,EACpE1M,QAAAA,MAEA,MAAM,SAAE4F,EAAQ,aAAEC,EAAY,MAAE8G,IAAU5G,EAAAA,EAAAA,MACpC2E,EAAYiC,IAEZC,EAAoBtE,EAAAA,EAAAA,WAAAA,QAAAA,MAAAA,cAQ1B,OACI7L,EAAAA,cAAA,QACI0B,UAAU,oEACVwH,SAAUE,GATD0C,gBACPqE,EAAkBpE,YAAY,CAChCxH,cAAehB,EAAQiB,aASvBxE,EAAAA,cAAA,MAAI0B,UAAU,MAAK,0BACnB1B,EAAAA,cAACsI,EAAAA,EAAO,CAACC,MAAM,UAAU7G,UAAU,SAC/B1B,EAAAA,cAAA,SACIA,EAAAA,cAAA,SAAG,aAAa,6DACSA,EAAAA,cAAA,SAAG,eAAe,IAC3CA,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,wDAGJA,EAAAA,cAAA,UAAI,uFAIJA,EAAAA,cAAA,UAAI,4DAIJA,EAAAA,cAAA,UAAI,2FAIJA,EAAAA,cAAA,UAAI,kDAGZA,EAAAA,cAAA,SAAG,oJAOPA,EAAAA,cAAA,aAAO,qDACPA,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,YACDmG,EAAS,YAAa,CAAE8B,UAAU,MAE1CjL,EAAAA,cAACoH,EAAAA,GAAM,CACHpE,KAAK,SACLiD,YAAY,OACZC,MAAM,SACNxE,UAAU,QACVmB,UAAWoL,EAAUmC,WACxB,iB,sXC5DN,MAAMC,EAAwDA,EACjE9M,QAAAA,MAEA,MAAM,SAAE4F,EAAQ,aAAEC,EAAY,MAAE8G,IAAU5G,EAAAA,EAAAA,MACpC2E,EAAYiC,IAEZI,EACFzE,EAAAA,EAAAA,WAAAA,QAAAA,cAAAA,cAQJ,OACI7L,EAAAA,cAAA,QACI0B,UAAU,oEACVwH,SAAUE,GATD0C,gBACPwE,EAAsBvE,YAAY,CACpCC,UAAWzI,EAAQyI,gBASnBhM,EAAAA,cAAA,MAAI0B,UAAU,MAAK,wBACnB1B,EAAAA,cAACsI,EAAAA,EAAO,CAACC,MAAM,UAAU7G,UAAU,SAC/B1B,EAAAA,cAAA,SACIA,EAAAA,cAAA,SAAG,aAAa,+GAENuQ,EAAAA,GAAAA,MAAeC,KAAK,CAAEC,KAAM,IAAKhM,WAAW,IACtDzE,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,wDAGJA,EAAAA,cAAA,UAAI,uFAIJA,EAAAA,cAAA,UAAI,4DAIJA,EAAAA,cAAA,UAAI,2FAIJA,EAAAA,cAAA,UAAI,kDAGZA,EAAAA,cAAA,SAAG,yHAMPA,EAAAA,cAAA,aAAO,qDACPA,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,YACDmG,EAAS,YAAa,CAAE8B,UAAU,MAE1CjL,EAAAA,cAACoH,EAAAA,GAAM,CACHpE,KAAK,SACLiD,YAAY,OACZC,MAAM,SACNxE,UAAU,QACVmB,UAAWoL,EAAUmC,WACxB,2B,ubC1DN,MAAMM,EAERA,EAAGnN,QAAAA,MACJ,MAAM,EAAEoN,IAAMC,EAAAA,EAAAA,OACR,SACFzH,EAAQ,aACRC,EACA6E,WAAW,OAAEiB,KACb5F,EAAAA,EAAAA,IAAgB,CAChB+B,cAAe,CACX7G,OAAQjB,EAAQiB,QAEpBqM,KAAM,WAEJC,EAAcjF,EAAAA,EAAAA,SAAAA,YAAAA,cACdkF,EACFlF,EAAAA,EAAAA,WAAAA,QAAAA,aAAAA,cA6BJ,OACI7L,EAAAA,cAAA,OAAK0B,UAAU,uHACX1B,EAAAA,cAAA,QACI0B,UAAU,sBACVwH,SAAUE,GA/BkB0C,MAAAA,GAC7BiF,EACFhF,YAAY,CACTiF,UAAWC,EAAOzM,OAClBwH,UAAWzI,EAAQyI,YAEtBkF,MAAK,IACF/E,SAASgF,QACL7M,EAAAA,GAAAA,OAAAA,WAAAA,cAAwC,CACpCC,cAAe0M,EAAOzM,eAwB9BxE,EAAAA,cAAA,MAAI0B,UAAW0P,EAAAA,IAAqB,iBAEpCpR,EAAAA,cAACsI,EAAAA,EAAO,CAACC,MAAM,QACXvI,EAAAA,cAAA,OAAK0B,UAAU,kBACX1B,EAAAA,cAAA,SAAG,8HAQXA,EAAAA,cAAA,OAAK0B,UAAU,iBACX1B,EAAAA,cAAC2H,EAAAA,EAAW,CACRC,SAAS,aACTE,aACI9H,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,QACDmG,EAAS,SAAU,CACnB8B,SAAU,sBACVoG,SAvCKvF,MAAAA,IACrC,IACI,MAAMwF,QAAaR,EAAY/E,YAAY,CACvCvH,OAAQA,IAGZ,OAAsB,IAAf8M,EAAKC,OAAwBD,EAAKnD,OAC3C,MAAOpB,GACL,OAAO4D,EAAE,wBAAwBlM,iBAkCZyK,EAAO1K,OACJxE,EAAAA,cAAA,KAAG0B,UAAU,YACRwN,EAAO1K,OAAO2K,SAEnB,SAMpBnP,EAAAA,cAAA,OAAK0B,UAAU,+EACVqP,EAAqBS,UAClBxR,EAAAA,cAAA,KAAG0B,UAAU,cAAa,UAC1B,KACHqP,EAAqBU,QAClBzR,EAAAA,cAAA,KAAG0B,UAAU,YACRqP,EAAqBW,MAAMvC,SAEhC,KAEJnP,EAAAA,cAAC2R,EAAAA,EAAW,CACR3O,KAAK,SACLH,SAAUkO,EAAqBa,UAC/BlQ,UAAU,aACb,qB,gTC7ErB,MAAMmQ,EAGDA,EAAGC,SAAAA,EAAU1H,SAAAA,KACV0H,IAAa1H,EAETpK,EAAAA,cAAA,cACK8R,EAASrN,WAAW,MAAS2F,EAAS3F,YAIxCzE,EAAAA,cAAAA,EAAAA,SAAA,KAAG8R,EAASrN,YAIrBsN,EAGDA,EAAGD,SAAAA,EAAU1H,SAAAA,KACV0H,IAAa1H,EAETpK,EAAAA,cAAAA,EAAAA,SAAA,KACKgS,KAAKC,UAAUH,GAAU,MAASE,KAAKC,UAAU7H,IAInDpK,EAAAA,cAAAA,EAAAA,SAAA,KAAGgS,KAAKC,UAAUH,IAIpBI,EAAkD/K,IAC3D,MAAM,QAAE5D,EAAO,SAAE4H,EAAQ,QAAEgH,EAAO,eAAEC,EAAc,WAAE1J,GAAevB,GAE/DgC,SAAUkJ,EACVjJ,aAAckJ,IACdhJ,EAAAA,EAAAA,MAEEiJ,EAAoB1G,EAAAA,EAAAA,WAAAA,QAAAA,UAAAA,cACpB2G,EACF3G,EAAAA,EAAAA,WAAAA,QAAAA,aAAAA,cACE3C,EAAiD4C,MAAAA,IACnD,MAAM2G,EAAe,CACjBC,WAAYjD,EAAK1G,OACjB4J,YAAapP,EAAQyI,UACrBmC,OAAQsB,EAAKtB,QAAU,IAG3B,IACwB,WAAhBsB,EAAKmD,aACCL,EAAkBxG,YAAY0G,SAE9BD,EAAqBzG,YAAY0G,GAE7C,QACEvG,OAAOC,SAASC,WAIxB,OACIpM,EAAAA,cAAA,OAAK0B,UAAU,oIACX1B,EAAAA,cAAA,MAAI0B,UAAU,YAAW,eAEzB1B,EAAAA,cAACkL,EAAAA,gBAAe,CAAC3H,QAASA,EAAS4H,SAAUA,IAE7CnL,EAAAA,cAAC0Q,EAAyB,CAACnN,QAASA,IAEpCvD,EAAAA,cAACqP,EAAAA,SAAalI,GAEdnH,EAAAA,cAAA,MAAI0B,UAAU,MAAK,2BAEnB1B,EAAAA,cAAA,SAAO0B,UAAU,SACb1B,EAAAA,cAAA,aACIA,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,sBACJA,EAAAA,cAAA,UAAI,0BACJA,EAAAA,cAAA,UAAI,gBACJA,EAAAA,cAAA,UAAI,iCACJA,EAAAA,cAAA,UAAI,YAGZA,EAAAA,cAAA,aACKmH,EAAM0L,gBAAgBrN,KAAKsN,GACxB9S,EAAAA,cAAA,MAAIyF,IAAKqN,EAAMC,SACX/S,EAAAA,cAAA,UACIA,EAAAA,cAAC6R,EAAkB,CACfC,SAAUgB,EAAME,gBAChB5I,SAAU0I,EAAMG,mBAGxBjT,EAAAA,cAAA,UACIA,EAAAA,cAAC6R,EAAkB,CACfC,SAAUgB,EAAMI,wBAChB9I,SAAU0I,EAAMK,2BAGxBnT,EAAAA,cAAA,UAAK8S,EAAMM,UACXpT,EAAAA,cAAA,UAAM,GAAE8S,EAAMO,cACV3K,EAAWoK,EAAMO,UAAU5O,YAAYuE,UAE3ChJ,EAAAA,cAAA,UAAK8S,EAAM3E,aAM3BnO,EAAAA,cAAA,MAAI0B,UAAU,MAAK,sBACnB1B,EAAAA,cAAC6N,EAAAA,qBAAoB,CACjBC,aAAcvK,EAAQ+P,MACtBtH,UAAWzI,EAAQyI,YAGvBhM,EAAAA,cAAA,MAAI0B,UAAU,MAAK,wBAEnB1B,EAAAA,cAAA,SAAO0B,UAAU,SACb1B,EAAAA,cAAA,aACIA,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,UAAI,gBACJA,EAAAA,cAAA,UAAI,iCACJA,EAAAA,cAAA,UAAI,YAGZA,EAAAA,cAAA,aACKmH,EAAMoM,oBAAoB/N,KAAKsN,GAC5B9S,EAAAA,cAAA,MAAIyF,IAAKqN,EAAMC,SACX/S,EAAAA,cAAA,UACIA,EAAAA,cAAC+R,EAA0B,CACvBD,SAAUgB,EAAMU,SAChBpJ,SAAU0I,EAAM1E,YAGxBpO,EAAAA,cAAA,UAAK8S,EAAMM,UACXpT,EAAAA,cAAA,UACM,GAAE8S,EAAMO,cACN3K,EAAWoK,EAAMO,UAAU5O,YAAYuE,UAG/ChJ,EAAAA,cAAA,UAAK8S,EAAM3E,aAM3BnO,EAAAA,cAAA,MAAI0B,UAAU,MAAK,mBAEnB1B,EAAAA,cAAA,UACKmS,EAAQ3M,KAAKiO,GACVzT,EAAAA,cAAA,MAAIyF,IAAKgO,EAAO1K,QACX0K,EAAOzK,MAAM,aAAWyK,EAAO1K,OAAO,IAAE,IACzC/I,EAAAA,cAAA,KACIqE,KAAMC,EAAAA,GAAAA,OAAAA,WAAAA,WACU,CAAEyE,OAAQ0K,EAAO1K,SAC5BtE,YACR,gBAObzE,EAAAA,cAACiJ,EAAAA,UAAS,CAACC,SAAUA,IAErBlJ,EAAAA,cAAA,QACI0B,UAAU,oEACVwH,SAAUoJ,EAAyBpJ,IAEnClJ,EAAAA,cAAA,MAAI0B,UAAU,MAAK,kBAEnB1B,EAAAA,cAAA,QAAAuH,EAAA,CACIvE,KAAK,SACLsH,MAAM,UACF+H,EAAqB,YAG7BrS,EAAAA,cAAA,SACIA,EAAAA,cAAA,SAAOoI,QAAQ,iBAAgB,qBAC/BpI,EAAAA,cAAA,SAAAuH,EAAA,CACIrE,GAAG,iBACCmP,EAAqB,SAAU,CAC/BqB,eAAe,KAGlBvB,EAAQ3M,KAAKiO,GACVzT,EAAAA,cAAA,UAAQyF,IAAKgO,EAAO1K,OAAQuB,MAAOmJ,EAAO1K,QACrC0K,EAAOzK,MAAM,aAAWyK,EAAO1K,OAAO,SAMvD/I,EAAAA,cAAA,SAAG,8BAECA,EAAAA,cAAA,WACQqS,EAAqB,SAAU,CAAEpH,UAAU,MAIvDjL,EAAAA,cAACoH,EAAAA,GAAM,CACHpE,KAAK,SACLiD,YAAY,OACZC,MAAM,SACNxE,UAAU,SACb,kBAKL1B,EAAAA,cAAA,MAAI0B,UAAU,MAAK,sBAEnB1B,EAAAA,cAAA,SAAO0B,UAAU,SACb1B,EAAAA,cAAA,aACIA,EAAAA,cAAA,UACIA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,UAAI,oBACJA,EAAAA,cAAA,UAAI,gBACJA,EAAAA,cAAA,UAAI,iCACJA,EAAAA,cAAA,UAAI,YAGZA,EAAAA,cAAA,aACKoS,EAAe5M,KAAKsN,GACjB9S,EAAAA,cAAA,MAAIyF,IAAKqN,EAAMC,SACX/S,EAAAA,cAAA,UACuB,eAAlB8S,EAAMa,QACD,QACA,WAEV3T,EAAAA,cAAA,UAAM,GAAE8S,EAAM/J,WACVL,EAAWoK,EAAM/J,OAAOtE,YAAYuE,UAExChJ,EAAAA,cAAA,UAAK8S,EAAMM,UACXpT,EAAAA,cAAA,UAAM,GAAE8S,EAAMO,cACV3K,EAAWoK,EAAMO,UAAU5O,YAAYuE,UAE3ChJ,EAAAA,cAAA,UAAK8S,EAAM3E,aAM3BnO,EAAAA,cAACwI,EAAAA,0BAA8BrB,GAC/BnH,EAAAA,cAACqQ,EAAAA,kBAAsBlJ,GACvBnH,EAAAA,cAACiQ,EAAAA,qBAAyB9I,KAKtC+K,EAAWzK,YAAc,yBACzB,S,+HC9RO,MAAMmM,EACT,0IACSxC,EAAsB,mCACtByC,EACT,8EACSC,EAAyB","sources":["webpack:///./preact/components/artist-alley/artist-alley-filter-provider.tsx","webpack:///./preact/components/artist-alley/artist-alley-listing.tsx","webpack:///./preact/components/elements/button.tsx","webpack:///./preact/components/elements/settings-row.tsx","webpack:///./preact/components/pages/moderation/manage-page.active-listings.tsx","webpack:///./preact/components/pages/moderation/manage-page.add-editor.tsx","webpack:///./preact/components/pages/moderation/manage-page.edit-profile-form.tsx","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/solid/esm/ChevronUpDownIcon.js","webpack:///../node_modules/.pnpm/@heroicons+react@2.0.13_react@18.0.0/node_modules/@heroicons/react/24/solid/esm/CheckIcon.js","webpack:///./preact/components/pages/moderation/manage-page.edit-project-flags-form.tsx","webpack:///./preact/components/pages/moderation/manage-page.mod-flags.tsx","webpack:///./preact/components/pages/moderation/manage-page.purge-immediately.tsx","webpack:///./preact/components/pages/moderation/manage-page.queue-for-purge.tsx","webpack:///./preact/components/partials/manage-page.moderator-handle-change-form.tsx","webpack:///./preact/components/pages/moderation/manage-page.tsx","webpack:///./preact/components/settings/shared.tsx"],"sourcesContent":["import { CategoryMatch, SortOrder } from \"@/shared/api-types/artist-alley-v1\";\nimport { ArtistAlleyAdultDisplayMode } from \"@/shared/types/artist-alley\";\nimport React, { useContext } from \"react\";\n\nexport const ArtistAlleyFilterProvider = React.createContext<{\n    adultFilterMode: ArtistAlleyAdultDisplayMode;\n    isAdult: boolean;\n    categories: Set<string>;\n    setAdultFilterMode: (mode: ArtistAlleyAdultDisplayMode) => void;\n    categoryMatch: CategoryMatch;\n    setCategoryMatch: (mode: CategoryMatch) => void;\n    sortOrder: SortOrder;\n    setSortOrder: (order: SortOrder) => void;\n}>({\n    adultFilterMode: \"hide\",\n    isAdult: false,\n    categories: new Set(),\n    setAdultFilterMode: () => {},\n    categoryMatch: \"any\",\n    setCategoryMatch: () => {},\n    sortOrder: \"random\",\n    setSortOrder: () => {},\n});\n\nexport const useArtistAlleyFilters = () => {\n    return useContext(ArtistAlleyFilterProvider);\n};\n","import { renderMarkdownReactNoHTML } from \"@/client/lib/markdown/other-rendering\";\nimport { tw } from \"@/client/lib/tw-tagged-literal\";\nimport sitemap from \"@/shared/sitemap\";\nimport {\n    ArtistAlleyWireAttachment,\n    WireArtistAlley,\n} from \"@/shared/types/artist-alley\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { useContext, useMemo, useState } from \"react\";\nimport { useDynamicTheme } from \"../../hooks/dynamic-theme\";\nimport { useDisplayPrefs } from \"../../hooks/use-display-prefs\";\nimport { useImageOptimizer } from \"../../hooks/use-image-optimizer\";\nimport { BasicButton } from \"../elements/basic-button\";\nimport { PlayPauseButton } from \"../elements/play-pause-button\";\nimport { ProjectAvatar } from \"../partials/project-avatar\";\nimport { useArtistAlleyFilters } from \"./artist-alley-filter-provider\";\nimport { Menu } from \"@headlessui/react\";\nimport {\n    EyeIcon as EyeIconOutline,\n    EyeSlashIcon as EyeSlashIconOutline,\n    ShareIcon,\n    ShieldExclamationIcon as ShieldExclamationIconOutline,\n    TrashIcon as TrashIconOutline,\n} from \"@heroicons/react/24/outline\";\nimport {\n    ArrowUturnLeftIcon,\n    EllipsisHorizontalIcon,\n} from \"@heroicons/react/24/solid\";\nimport { MeatballMenuItem } from \"../elements/meatball-menu-item\";\nimport { ReportingUIContext } from \"@/client/reporting/machine\";\n\nconst ASPECT_RATIO = 300 / 250;\n\nconst ArtistAlleyAttachment: React.FC<{\n    attachment: ArtistAlleyWireAttachment;\n}> = ({ attachment }) => {\n    const displayPrefs = useDisplayPrefs();\n    const [src, setSrc] = useState(\n        displayPrefs.gifsStartPaused\n            ? attachment.previewURL\n            : attachment.fileURL\n    );\n    const [isPlaying, setIsPlaying] = useState(!displayPrefs.gifsStartPaused);\n\n    const srcWithDpr = useImageOptimizer(src, 300, ASPECT_RATIO);\n\n    const handlePause = () => {\n        setIsPlaying(false);\n        setSrc(attachment.previewURL);\n    };\n\n    const handlePlay = () => {\n        setIsPlaying(true);\n        setSrc(attachment.fileURL);\n    };\n\n    return (\n        <div className=\"group relative\">\n            <img\n                src={srcWithDpr(1)}\n                srcSet={`\n                ${srcWithDpr(1)} 1x,\n                ${srcWithDpr(2)} 2x,\n                ${srcWithDpr(3)} 3x,\n            `}\n                alt={attachment.altText}\n                className=\"co-border aspect-[300/250] w-full border-b object-cover\"\n            />\n\n            {attachment.previewURL !== attachment.fileURL && (\n                <PlayPauseButton\n                    isPlaying={isPlaying}\n                    showPlay={attachment.previewURL !== attachment.fileURL}\n                    extraClasses=\"absolute bottom-3 right-3 w-12\"\n                    onPlay={handlePlay}\n                    onPause={handlePause}\n                />\n            )}\n        </div>\n    );\n};\n\nconst ArtistAlleyMeatballMenu: React.FC<{ listing: WireArtistAlley }> = ({\n    listing,\n}) => {\n    const reportingUIContext = useContext(ReportingUIContext);\n\n    return (\n        // explicit height is required to vertically align the\n        // meatballs with the rest of the action buttons\n        <Menu as=\"div\" className=\"relative h-6\">\n            <Menu.Button className=\"co-action-button cursor-pointer text-sm font-bold hover:underline\">\n                <EllipsisHorizontalIcon className=\"h-6 w-6 transition-transform ui-open:rotate-90\" />\n            </Menu.Button>\n\n            <Menu.Items className=\"co-meatball-items absolute right-0 top-8 z-30 flex min-w-max flex-col divide-y rounded-lg p-3  focus:!outline-none\">\n                <Menu.Item>\n                    <MeatballMenuItem\n                        disabled={false}\n                        onClick={() => {\n                            reportingUIContext.send({\n                                type: \"START_REPORT\",\n                                artistAlleyListingId: listing.id,\n                            });\n                        }}\n                        ItemIcon={ShieldExclamationIconOutline}\n                        text=\"report\"\n                    />\n                </Menu.Item>\n            </Menu.Items>\n        </Menu>\n    );\n};\n\nexport const ArtistAlleyListing: React.FC<{\n    listing: WireArtistAlley;\n    project: WireProjectModel;\n}> = ({ listing, project }) => {\n    const rendered = useMemo(() => {\n        return renderMarkdownReactNoHTML(listing.body, new Date(), {\n            disableEmbeds: true,\n            externalLinksInNewTab: true,\n            hasCohostPlus: false,\n            renderingContext: \"artistAlley\",\n        });\n    }, [listing.body]);\n\n    const theme = useDynamicTheme();\n\n    return (\n        <div\n            data-theme={theme.current}\n            className=\"co-themed-box co-artist-alley-listing flex w-full flex-col rounded-lg border\"\n        >\n            <div className=\"co-border flex flex-row items-center gap-2 border-b px-2 py-3\">\n                <ProjectAvatar project={project} className=\"h-8\" />\n                <a\n                    href={sitemap.public.project\n                        .mainAppProfile({ projectHandle: project.handle })\n                        .toString()}\n                >\n                    @{project.handle}\n                </a>\n                <div className=\"flex-1\">&nbsp;</div>\n                {listing.adultContent ? (\n                    <span className=\"co-18-plus rounded-lg p-1 text-xs \">\n                        18+\n                    </span>\n                ) : null}\n                <ArtistAlleyMeatballMenu listing={listing} />\n            </div>\n            {listing.attachment && (\n                <ArtistAlleyAttachment attachment={listing.attachment} />\n            )}\n            <div className=\"co-prose prose p-2\">{rendered}</div>\n\n            <div className=\"mx-2 my-3\">\n                <BasicButton\n                    as=\"a\"\n                    buttonColor=\"\"\n                    buttonSize=\"regular\"\n                    href={listing.cta.link}\n                    extraClasses=\"co-cta-button\"\n                    target=\"_blank\"\n                >\n                    {listing.cta.text}\n                </BasicButton>\n            </div>\n\n            {listing.categories.length > 0 && (\n                <ListingTags tags={listing.categories} />\n            )}\n        </div>\n    );\n};\n\nconst ListingTags: React.FC<{ tags: string[] }> = ({ tags }) => {\n    const { categories } = useArtistAlleyFilters();\n    const filteredTags = tags.filter((tag) => tag != \"\");\n\n    return filteredTags.length ? (\n        <div className=\"w-full max-w-full p-3\">\n            <div\n                className={tw`co-tags relative w-full overflow-y-hidden break-words leading-none`}\n            >\n                <div>\n                    {filteredTags.map((tag) => (\n                        <button\n                            key={tag}\n                            className={`mr-2 inline-block text-sm hover:underline ${\n                                // bold currently filtered tags\n                                categories.has(tag) ? \"font-bold\" : \"\"\n                            }`}\n                            onClick={() => {\n                                categories.has(tag)\n                                    ? categories.delete(tag)\n                                    : categories.add(tag);\n                            }}\n                        >\n                            #{tag}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        </div>\n    ) : null;\n};\n","import classnames from \"classnames\";\nimport React, { FunctionComponent } from \"react\";\nimport { z } from \"zod\";\n\nexport const ButtonStyle = z.enum([\"pill\", \"roundrect\", \"authn\"]);\nexport type ButtonStyle = z.infer<typeof ButtonStyle>;\n\nexport const ButtonColor = z.enum([\n    \"cherry\",\n    \"strawberry\",\n    \"mango\",\n    \"not-black\",\n    \"red\",\n    \"green\",\n    \"accent\",\n    \"secondary\",\n    \"authn-primary\",\n    \"authn-other\",\n]);\nexport type ButtonColor = z.infer<typeof ButtonColor>;\n\nexport const SharedProps = z.object({\n    buttonStyle: ButtonStyle,\n    color: ButtonColor,\n    className: z.string().optional(),\n});\nexport type SharedProps = z.infer<typeof SharedProps>;\n\nconst baseColors = classnames(\"bg-notWhite\", \"hover:text-notWhite\");\n\n// WHY NOT HAVE THESE AS INTERPOLATED CLASS NAMES?\n// tailwind jit doesn't handle interpolated class names!\n// you have to have the full class name written for it to pick up on a string as\n// a class name! so we do this\nconst pillClasses = classnames(\n    \"font-atkinson\",\n    \"font-bold\",\n    \"rounded-full\",\n    \"border-2\"\n);\n\nconst roundrectClasses = classnames(\"body-2\", \"rounded-lg\");\n\nconst authnStyleClasses = classnames(\n    \"flex\",\n    \"h-12\",\n    \"items-center\",\n    \"justify-center\",\n    \"rounded-lg\",\n    \"px-6\",\n    \"text-lg\"\n);\n\nconst cherryClasses = classnames(\n    \"border-cherry\",\n    \"hover:bg-cherry\",\n    \"text-cherry\",\n    \"active:bg-cherry-600\",\n    \"active:border-cherry-600\",\n    \"disabled:text-cherry-300\",\n    \"disabled:border-cherry-300\",\n    \"focus:outline-cherry\",\n    \"focus:ring-cherry\",\n    baseColors\n);\nconst strawberryClasses = classnames(\n    \"border-strawberry\",\n    \"hover:bg-strawberry\",\n    \"text-strawberry\",\n    \"active:bg-strawberry-600\",\n    \"active:border-strawberry-600\",\n    \"disabled:text-strawberry-300\",\n    \"disabled:border-strawberry-300\",\n    \"focus:outline-strawberry\",\n    \"focus:ring-strawberry\",\n    baseColors\n);\n\nconst redClasses = classnames(\n    \"border-red\",\n    \"hover:bg-red\",\n    \"text-red\",\n    \"active:bg-red-600\",\n    \"active:border-red-600\",\n    \"disabled:text-red-300\",\n    \"disabled:border-red-300\",\n    \"focus:outline-red\",\n    baseColors\n);\n\nconst greenClasses = classnames(\n    \"border-green\",\n    \"hover:bg-green\",\n    \"text-green\",\n    \"active:bg-green-600\",\n    \"active:border-green-600\",\n    \"disabled:text-green-300\",\n    \"disabled:border-green-300\",\n    \"focus:outline-green\",\n    baseColors\n);\nconst mangoClasses = classnames(\n    \"border-mango\",\n    \"hover:bg-mango\",\n    \"text-mango\",\n    \"bg-notBlack\",\n    \"hover:text-notBlack\"\n);\nconst notBlackClasses = classnames(\n    \"border-notBlack\",\n    \"hover:bg-notBlack\",\n    \"text-notBlack\",\n    \"focus:outline-notBlack\",\n    \"focus:ring-notBlack\",\n    baseColors\n);\n\nconst accentClasses = classnames(\n    \"border-accent\",\n    \"text-accent\",\n    \"bg-foreground\",\n    \"hover:bg-accent\",\n    \"hover:text-text\"\n);\n\nconst secondaryClasses = classnames(\n    \"bg-secondary\",\n    \"text-notWhite\",\n    \"dark:text-notBlack\",\n    \"hover:bg-secondary-600\"\n);\n\nconst authnPrimaryColorClasses = classnames(\n    \"bg-foreground\",\n    \"text-text\",\n    \"hover:bg-foreground-600\",\n    \"active:bg-foreground-700\",\n    \"disabled:bg-foreground-200\"\n);\n\nconst authnOtherColorClasses = classnames(\n    \"border-2\",\n    \"border-foreground\",\n    \"text-foreground\",\n    \"hover:bg-longan-200\"\n);\n\nconst sharedClasses = (props: SharedProps) =>\n    classnames(\n        \"leading-none\",\n        \"align-middle\",\n        \"py-2\",\n        \"px-4\",\n        \"no-select\",\n        props.className,\n        {\n            [pillClasses]: props.buttonStyle === \"pill\",\n            [roundrectClasses]: props.buttonStyle === \"roundrect\",\n            [authnStyleClasses]: props.buttonStyle === \"authn\",\n            [cherryClasses]: props.color === \"cherry\",\n            [strawberryClasses]: props.color === \"strawberry\",\n            [mangoClasses]: props.color === \"mango\",\n            [notBlackClasses]: props.color === \"not-black\",\n            [redClasses]: props.color === \"red\",\n            [accentClasses]: props.color === \"accent\",\n            [greenClasses]: props.color === \"green\",\n            [secondaryClasses]: props.color === \"secondary\",\n            [authnPrimaryColorClasses]: props.color === \"authn-primary\",\n            [authnOtherColorClasses]: props.color === \"authn-other\",\n        }\n    );\n\nexport const Button: FunctionComponent<\n    SharedProps &\n        React.ButtonHTMLAttributes<HTMLButtonElement> & {\n            ref?: React.Ref<HTMLButtonElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, className, ...props }, ref) => {\n    const classes = sharedClasses({\n        buttonStyle,\n        color,\n        className,\n        ...props,\n    });\n    return (\n        <button {...props} className={classes} ref={ref}>\n            {props.children}\n        </button>\n    );\n});\nButton.displayName = \"Button\";\n\nexport const LinkButton: FunctionComponent<\n    SharedProps &\n        React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n            ref?: React.Ref<HTMLAnchorElement>;\n        }\n> = React.forwardRef(({ buttonStyle, color, ...props }, ref) => {\n    const classes = sharedClasses({ buttonStyle, color, ...props });\n    return (\n        <a {...props} className={classes} ref={ref}>\n            {props.children}\n        </a>\n    );\n});\nLinkButton.displayName = \"LinkButton\";\n","import React, { FunctionComponent, ReactElement, ReactNode } from \"react\";\nimport { InfoBox, InfoBoxLevel } from \"./info-box\";\nimport classNames from \"classnames\";\n\ntype SettingsRowProps = {\n    bigLabel: ReactNode;\n    smallLabel?: string;\n    inputElement: ReactElement<{ id: string }>;\n    infoBoxLevel?: InfoBoxLevel;\n    infoBoxContent?: ReactElement;\n    customDescription?: ReactElement;\n    disabled?: boolean;\n};\n\nexport const SettingsRow: FunctionComponent<SettingsRowProps> = ({\n    bigLabel,\n    smallLabel,\n    inputElement,\n    infoBoxLevel,\n    infoBoxContent,\n    customDescription,\n    disabled,\n}) => {\n    const bigLabelRowSpanClasses = smallLabel ? \"row-span-1\" : \"row-span-2\";\n    const customDescriptionContent = customDescription ?? null;\n\n    return (\n        <div className=\"grid grid-cols-[1fr_min-content] grid-rows-[min-content] items-center gap-2.5 pt-2.5\">\n            <>\n                <label\n                    htmlFor={inputElement.props.id}\n                    className={classNames(\n                        `col-start-1 row-start-1 font-bold`,\n                        bigLabelRowSpanClasses,\n                        { \"text-gray-300\": disabled }\n                    )}\n                >\n                    {bigLabel}\n                </label>\n\n                {smallLabel ? (\n                    <label\n                        htmlFor={inputElement.props.id}\n                        className={classNames(\n                            \"col-start-1 row-start-2 align-middle\",\n                            { \"text-gray-300\": disabled }\n                        )}\n                    >\n                        {smallLabel}\n                    </label>\n                ) : null}\n\n                <div className=\"col-start-2 row-span-2 row-start-1\">\n                    {inputElement}\n                </div>\n\n                {infoBoxLevel ? (\n                    <InfoBox\n                        level={infoBoxLevel}\n                        className=\"col-span-2 col-start-1\"\n                    >\n                        {infoBoxContent}\n                    </InfoBox>\n                ) : (\n                    customDescriptionContent\n                )}\n\n                <hr className=\"col-span-2 col-start-1 w-full border-gray-300\" />\n            </>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { FunctionComponent } from \"react\";\nimport { type ManagePageProps } from \"./manage-page\";\nimport { ArtistAlleyListing } from \"../../artist-alley/artist-alley-listing\";\nimport { BasicButton } from \"../../elements/basic-button\";\nimport sitemap from \"@/shared/sitemap\";\n\nexport type ActiveArtistAlleyListingProps = Pick<\n    ManagePageProps,\n    \"project\" | \"listings\" | \"userLookup\"\n>;\n\nexport const ActiveArtistAlleyListings: FunctionComponent<\n    ActiveArtistAlleyListingProps\n> = ({ project, listings, userLookup }) => {\n    return (\n        <>\n            <h4 className=\"h4\">artist alley listings</h4>\n\n            <div className=\"flex flex-row flex-wrap gap-3\">\n                {listings.map((listing) => (\n                    <div\n                        className=\"w-[300px] border border-notBlack p-3\"\n                        key={listing.id}\n                    >\n                        <ArtistAlleyListing\n                            listing={listing}\n                            project={project}\n                        />\n                        <BasicButton\n                            as={\"a\"}\n                            href={sitemap.public.moderation.manageArtistAlleyListing(\n                                { adId: listing.id }\n                            )}\n                            buttonSize=\"regular\"\n                            buttonColor=\"stroke\"\n                            extraClasses=\"mt-3\"\n                        >\n                            manage listing\n                        </BasicButton>\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n","import { useEmailSearch } from \"@/client/preact/hooks/search\";\nimport { GetUserListResp } from \"@/shared/api-types/users-v1\";\nimport { WireUserModel } from \"@/shared/types/wire-models\";\nimport React, { FunctionComponent, useCallback, useState } from \"react\";\nimport Autosuggest, {\n    ChangeEvent,\n    OnSuggestionsClearRequested,\n    OnSuggestionSelected,\n    RenderSuggestion,\n    SuggestionsFetchRequested,\n} from \"react-autosuggest\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { Button } from \"@/client/preact/components/elements/button\";\n\nconst renderSuggestion: RenderSuggestion<GetUserListResp[\"users\"][0]> = (\n    suggestion,\n    { isHighlighted }\n) => (\n    <div key={`autocomplete-user-${suggestion.userId}`}>\n        {suggestion.email} (user id {suggestion.userId})\n    </div>\n);\n\nexport type EditorOperationInputs = {\n    action: \"create\" | \"delete\";\n    userId: number;\n    email?: string;\n    reason?: string;\n};\n\ntype AddEditorProps = {\n    onSubmit: SubmitHandler<EditorOperationInputs>;\n};\n\nexport const AddEditor: FunctionComponent<AddEditorProps> = ({ onSubmit }) => {\n    const { register, handleSubmit, setValue } =\n        useForm<EditorOperationInputs>();\n\n    const [selectedEditorToAdd, setSelectedEditorToAdd] = useState<\n        WireUserModel | undefined\n    >(undefined);\n    const [emailSearchToken, setEmailSearchToken] = useState<string>(\"\");\n    const { users: emailSearchUsers, invalidate: emailSearchInvalidate } =\n        useEmailSearch(emailSearchToken);\n\n    const onEmailSearchChange = useCallback(\n        (event: React.FormEvent<HTMLElement>, { newValue }: ChangeEvent) => {\n            setEmailSearchToken(newValue);\n        },\n        [setEmailSearchToken]\n    );\n\n    const onAddEditorDeselect = () => {\n        void setSelectedEditorToAdd(undefined);\n        setValue(\"userId\", -1);\n    };\n\n    const onSuggestionsFetchRequested = useCallback<SuggestionsFetchRequested>(\n        ({ value }) => {\n            void emailSearchInvalidate(value);\n        },\n        [emailSearchInvalidate]\n    );\n\n    const onSuggestionsClearRequested =\n        useCallback<OnSuggestionsClearRequested>(() => {\n            void emailSearchInvalidate(\"\");\n        }, [emailSearchInvalidate]);\n\n    const onSuggestionSelected = useCallback<\n        OnSuggestionSelected<WireUserModel>\n    >(\n        (_event, { suggestion }) => {\n            void setSelectedEditorToAdd(suggestion);\n            setValue(\"userId\", suggestion.userId);\n        },\n        [setSelectedEditorToAdd, setValue]\n    );\n\n    return (\n        <>\n            <form\n                className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n                onSubmit={handleSubmit(onSubmit)}\n            >\n                <h4 className=\"h4\">add editors</h4>\n\n                <input type=\"hidden\" value=\"create\" {...register(\"action\")} />\n\n                <p />\n\n                {selectedEditorToAdd ? (\n                    <>\n                        selected user:\n                        {`${selectedEditorToAdd.email} (user id ${selectedEditorToAdd.userId})`}\n                        <Button\n                            buttonStyle=\"pill\"\n                            color=\"cherry\"\n                            className=\"w-1/4\"\n                            onClick={onAddEditorDeselect}\n                        >\n                            deselect\n                        </Button>\n                    </>\n                ) : (\n                    <>\n                        search for the e-mail of an editor to add:\n                        <Autosuggest\n                            suggestions={emailSearchUsers ?? []}\n                            getSuggestionValue={(suggestion) =>\n                                suggestion.email\n                            }\n                            inputProps={{\n                                onChange: onEmailSearchChange,\n                                value: emailSearchToken,\n                            }}\n                            onSuggestionsFetchRequested={\n                                onSuggestionsFetchRequested\n                            }\n                            onSuggestionsClearRequested={\n                                onSuggestionsClearRequested\n                            }\n                            onSuggestionSelected={onSuggestionSelected}\n                            renderSuggestion={renderSuggestion}\n                            alwaysRenderSuggestions={true}\n                        />\n                    </>\n                )}\n\n                <p>\n                    reason for adding editor:\n                    <textarea {...register(\"reason\", { required: true })} />\n                </p>\n\n                <Button\n                    type=\"submit\"\n                    buttonStyle=\"pill\"\n                    color=\"cherry\"\n                    className=\"w-fit\"\n                >\n                    add editor\n                </Button>\n            </form>\n        </>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport sitemap from \"@/shared/sitemap\";\nimport { WireProjectModelModeratorExtensions } from \"@/shared/types/projects\";\nimport { WireUserModel } from \"@/shared/types/wire-models\";\nimport React, { FunctionComponent } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { Button } from \"../../elements/button\";\n\ntype Inputs = {\n    displayName: string;\n    dek: string;\n    description: string;\n    pronouns: string;\n    url: string;\n    clearAvatar: boolean;\n    clearHeader: boolean;\n};\n\nexport const EditProfileForm: FunctionComponent<{\n    project: WireProjectModelModeratorExtensions;\n    selfUser: WireUserModel | undefined;\n}> = ({ project, selfUser }) => {\n    const { register, handleSubmit, reset } = useForm<Inputs>({\n        defaultValues: {\n            clearAvatar: false,\n            clearHeader: false,\n            dek: project.dek,\n            description: project.description,\n            displayName: project.displayName,\n            pronouns: project.pronouns ?? \"\",\n            url: project.url ?? \"\",\n        },\n    });\n\n    const updateProfileMutation =\n        trpc.moderation.project.updateProfile.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = async (inputs) => {\n        await updateProfileMutation.mutateAsync({\n            projectId: project.projectId,\n            ...inputs,\n        });\n        window.location.reload();\n    };\n\n    return (\n        <form\n            className=\"prose rounded-lg border p-3\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <table>\n                <tbody>\n                    <tr>\n                        <td>handle</td>\n                        <td>\n                            {project.handle}{\" \"}\n                            {project.handleSuspicionResult ? (\n                                <span\n                                    className={`${\n                                        project.handleSuspicionResult.score >\n                                        0.8\n                                            ? \"text-red\"\n                                            : \"\"\n                                    }`}\n                                >\n                                    (suspicion score:{\" \"}\n                                    {(\n                                        project.handleSuspicionResult.score *\n                                        100\n                                    ).toLocaleString(undefined, {\n                                        maximumFractionDigits: 2,\n                                    })}\n                                    %)\n                                </span>\n                            ) : null}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>display name</td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                {...register(\"displayName\", {\n                                    maxLength: 70,\n                                })}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>dek</td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                {...register(\"dek\", {\n                                    maxLength: 35,\n                                })}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>pronouns</td>\n                        <td>\n                            <input\n                                type=\"text\"\n                                {...register(\"pronouns\", {\n                                    maxLength: 35,\n                                })}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>url</td>\n                        <td>\n                            <input type=\"url\" {...register(\"url\")} />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>description</td>\n                        <td>\n                            <textarea\n                                className=\"w-full max-w-prose\"\n                                {...register(\"description\")}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>avatar</td>\n                        <td>\n                            <a\n                                href={project.avatarURL}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                {project.avatarURL}\n                            </a>\n                            <br />\n                            <label>remove? </label>\n                            <input\n                                type=\"checkbox\"\n                                {...register(\"clearAvatar\")}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>header</td>\n                        <td>\n                            {project.headerURL ? (\n                                <>\n                                    <a\n                                        href={project.headerURL}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                    >\n                                        {project.headerURL}\n                                    </a>\n                                    <br />\n                                    <label>remove? </label>\n                                    <input\n                                        type=\"checkbox\"\n                                        {...register(\"clearHeader\")}\n                                    />\n                                </>\n                            ) : (\n                                \"none\"\n                            )}\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td>self user</td>\n                        <td>\n                            {selfUser ? (\n                                <a\n                                    href={sitemap.public.moderation\n                                        .manageUser({\n                                            userId: selfUser.userId,\n                                        })\n                                        .toString()}\n                                >\n                                    {selfUser.email} (user id {selfUser.userId})\n                                </a>\n                            ) : (\n                                <>none</>\n                            )}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>last activity time</td>\n                        <td>{project.lastActivityTime ?? \"null\"}</td>\n                    </tr>\n                    <tr>\n                        <td>delete after time</td>\n                        <td>{project.deleteAfter ?? \"null\"}</td>\n                    </tr>\n                </tbody>\n            </table>\n\n            <Button type=\"submit\" buttonStyle=\"pill\" color=\"green\">\n                save changes\n            </Button>\n            <Button\n                type=\"reset\"\n                buttonStyle=\"pill\"\n                color=\"red\"\n                onClick={(e) => {\n                    e.preventDefault();\n                    reset(undefined, { keepDefaultValues: true });\n                }}\n            >\n                reset changes\n            </Button>\n        </form>\n    );\n};\n","import * as React from \"react\";\n\nfunction ChevronUpDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M11.47 4.72a.75.75 0 011.06 0l3.75 3.75a.75.75 0 01-1.06 1.06L12 6.31 8.78 9.53a.75.75 0 01-1.06-1.06l3.75-3.75zm-3.75 9.75a.75.75 0 011.06 0L12 17.69l3.22-3.22a.75.75 0 111.06 1.06l-3.75 3.75a.75.75 0 01-1.06 0l-3.75-3.75a.75.75 0 010-1.06z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronUpDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckIcon);\nexport default ForwardRef;","import React, { FunctionComponent } from \"react\";\nimport { useForm, SubmitHandler, Controller } from \"react-hook-form\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { ProjectFlag } from \"@/shared/types/projects\";\nimport { ProjectId } from \"@/shared/types/ids\";\nimport { Listbox } from \"@headlessui/react\";\nimport { DevTool } from \"@hookform/devtools\";\nimport { CheckIcon, ChevronUpDownIcon } from \"@heroicons/react/24/solid\";\nimport { Button } from \"@/client/preact/components/elements/button\";\n\ntype Inputs = {\n    projectFlags: ProjectFlag[];\n    reason: string;\n};\n\nexport const EditProjectFlagsForm: FunctionComponent<{\n    currentFlags: ProjectFlag[];\n    projectId: ProjectId;\n}> = ({ currentFlags, projectId }) => {\n    const editProjectFlags = trpc.moderation.project.updateFlags.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = (inputs) => {\n        return editProjectFlags.mutateAsync({\n            projectId,\n            newFlags: inputs.projectFlags,\n            reason: inputs.reason,\n        });\n    };\n\n    const { register, handleSubmit, control, formState } = useForm<Inputs>({\n        defaultValues: {\n            projectFlags: currentFlags,\n            reason: \"\",\n        },\n    });\n\n    return (\n        <form\n            onSubmit={handleSubmit(onSubmit)}\n            className=\"my-6 flex max-w-prose flex-col gap-4\"\n        >\n            <div className=\"max-w-prose\">\n                <label>flags</label>\n                <Controller\n                    control={control}\n                    name=\"projectFlags\"\n                    render={({ field }) => (\n                        <Listbox\n                            multiple\n                            value={field.value}\n                            onChange={field.onChange}\n                        >\n                            <div className=\"relative mt-1\">\n                                <Listbox.Button className=\"relative w-full cursor-default rounded-lg bg-notWhite py-2 pl-3 pr-10 text-left shadow-md focus:outline-none focus-visible:border-cherry focus-visible:ring-2 focus-visible:ring-notWhite focus-visible:ring-opacity-75 focus-visible:ring-offset-2 focus-visible:ring-offset-mango-300\">\n                                    <span className=\"block truncate\">\n                                        {field.value.join(\", \")}\n                                    </span>\n                                    <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n                                        <ChevronUpDownIcon\n                                            className=\"h-5 w-5 text-gray-400\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </span>\n                                </Listbox.Button>\n                                <Listbox.Options className=\"absolute mt-1 max-h-60 w-full overflow-auto rounded-md bg-notWhite py-1 text-base shadow-lg ring-1 ring-notBlack ring-opacity-5 focus:outline-none\">\n                                    {ProjectFlag.options.map((flag) => (\n                                        <Listbox.Option\n                                            key={flag}\n                                            value={flag}\n                                            className={({ active }) =>\n                                                `relative cursor-default select-none py-2 pl-10 pr-4 ${\n                                                    active\n                                                        ? \"bg-cherry-100 text-cherry-900\"\n                                                        : \"text-gray-900\"\n                                                }`\n                                            }\n                                        >\n                                            {({ selected }) => (\n                                                <>\n                                                    {\" \"}\n                                                    <span\n                                                        className={`block truncate ${\n                                                            selected\n                                                                ? \"font-medium\"\n                                                                : \"font-normal\"\n                                                        }`}\n                                                    >\n                                                        {flag}\n                                                    </span>\n                                                    {selected ? (\n                                                        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-mango-600\">\n                                                            <CheckIcon\n                                                                className=\"h-5 w-5\"\n                                                                aria-hidden=\"true\"\n                                                            />\n                                                        </span>\n                                                    ) : null}\n                                                </>\n                                            )}\n                                        </Listbox.Option>\n                                    ))}\n                                </Listbox.Options>\n                            </div>\n                        </Listbox>\n                    )}\n                />\n            </div>\n            <div className=\"flex flex-col gap-2\">\n                <label>change reason</label>\n                {formState.errors.reason ? (\n                    <span className=\"font-bold text-red\">\n                        {formState.errors.reason.message}\n                    </span>\n                ) : null}\n                <textarea\n                    className=\"w-full\"\n                    {...register(\"reason\", {\n                        required: \"You must provide a reason!\",\n                    })}\n                />\n            </div>\n            <Button\n                type=\"submit\"\n                buttonStyle=\"pill\"\n                color=\"cherry\"\n                className=\"max-w-max\"\n            >\n                submit\n            </Button>\n            {formState.isSubmitSuccessful ? (\n                <span className=\"font-bold text-green\">Submit successful!</span>\n            ) : null}\n            {process.env.NODE_ENV === \"development\" ? (\n                <DevTool control={control} />\n            ) : null}\n        </form>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport { ProjectHandle } from \"@/shared/types/ids\";\nimport React, { FunctionComponent } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { type ManagePageProps } from \"./manage-page\";\n\nconst useModFlags = (projectHandle: ProjectHandle) => {\n    const results = trpc.projects.modFlags.query.useQuery({ projectHandle });\n    return {\n        isFetched: results.isFetched,\n        projectId: results.data?.projectId,\n        adultContent: results.data?.adultContent,\n        adultContentOverride: results.data?.adultContentOverride,\n    };\n};\n\ntype ModFlagOperation =\n    | \"clear-adult-content\"\n    | \"set-adult-content\"\n    | \"clear-adult-content-override\"\n    | \"set-adult-content-override\";\ntype Inputs = {\n    reason: string;\n    operation: ModFlagOperation;\n};\n\nexport const ModFlags: FunctionComponent<ManagePageProps> = ({ project }) => {\n    const { register, handleSubmit, setValue } = useForm<Inputs>();\n    const modFlags = useModFlags(project.handle);\n    const mutation = trpc.projects.modFlags.mutate.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = (data) => {\n        try {\n            const payload: {\n                projectHandle: ProjectHandle;\n                reason: string;\n                adultContent?: boolean;\n                adultContentOverride?: boolean;\n            } = {\n                reason: data.reason,\n                projectHandle: project.handle,\n            };\n\n            switch (data.operation) {\n                case \"clear-adult-content\":\n                    payload.adultContent = false;\n                    break;\n                case \"set-adult-content\":\n                    payload.adultContent = true;\n                    break;\n                case \"set-adult-content-override\":\n                    payload.adultContentOverride = true;\n                    break;\n                case \"clear-adult-content-override\":\n                    payload.adultContentOverride = false;\n                    break;\n            }\n\n            mutation.mutate(payload);\n        } finally {\n            location.reload();\n        }\n    };\n\n    const onButtonClicked = (operation: ModFlagOperation) => {\n        setValue(\"operation\", operation);\n        handleSubmit(onSubmit);\n    };\n\n    return (\n        <div className=\"max-w-fit gap-2 rounded-lg border border-accent p-3\">\n            <h4 className=\"h4\">moderation flags</h4>\n\n            {modFlags.isFetched ? (\n                <form\n                    className=\"flex flex-col\"\n                    onSubmit={handleSubmit(onSubmit)}\n                >\n                    <p>\n                        adult content:{\" \"}\n                        {modFlags.adultContent?.toString() ?? \"loading...\"}\n                    </p>\n\n                    <p>\n                        adult content override:{\" \"}\n                        {modFlags.adultContentOverride?.toString() ??\n                            \"loading...\"}\n                    </p>\n\n                    {modFlags.adultContent ? (\n                        <Button\n                            buttonStyle=\"pill\"\n                            color=\"cherry\"\n                            onClick={() =>\n                                onButtonClicked(\"clear-adult-content\")\n                            }\n                            className=\"w-fit\"\n                        >\n                            set adult content flag to false\n                        </Button>\n                    ) : (\n                        <Button\n                            buttonStyle=\"pill\"\n                            color=\"cherry\"\n                            onClick={() => onButtonClicked(\"set-adult-content\")}\n                            className=\"w-fit\"\n                        >\n                            set adult content flag to true\n                        </Button>\n                    )}\n                    {modFlags.adultContentOverride ? (\n                        <Button\n                            buttonStyle=\"pill\"\n                            color=\"cherry\"\n                            onClick={() =>\n                                onButtonClicked(\"clear-adult-content-override\")\n                            }\n                            className=\"w-fit\"\n                        >\n                            set adult content override to false\n                        </Button>\n                    ) : (\n                        <Button\n                            buttonStyle=\"pill\"\n                            color=\"cherry\"\n                            onClick={() =>\n                                onButtonClicked(\"set-adult-content-override\")\n                            }\n                            className=\"w-fit\"\n                        >\n                            set adult content override to true\n                        </Button>\n                    )}\n\n                    <p>\n                        reason for making change:\n                        <textarea {...register(\"reason\", { required: true })} />\n                    </p>\n                </form>\n            ) : (\n                <>(loading current state)</>\n            )}\n        </div>\n    );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport { InfoBox } from \"../../elements/info-box\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { type ManagePageProps } from \"./manage-page\";\n\ntype Inputs = {\n    confirmed: boolean;\n};\n\nexport const PurgeImmediatelyForm: FunctionComponent<ManagePageProps> = ({\n    project,\n}) => {\n    const { register, handleSubmit, watch } = useForm<Inputs>();\n    const formState = watch();\n\n    const purgePageMutation = trpc.moderation.project.purge.useMutation();\n\n    const onSubmit = async () => {\n        await purgePageMutation.mutateAsync({\n            projectHandle: project.handle,\n        });\n    };\n\n    return (\n        <form\n            className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <h4 className=\"h4\">purge page immediately</h4>\n            <InfoBox level=\"warning\" className=\"prose\">\n                <p>\n                    <b>HEADS UP!</b> This will perform the following\n                    irreverseable operations <b>immediately</b>:\n                    <ul>\n                        <li>\n                            hard-delete all of this page's posts without shares;\n                        </li>\n                        <li>\n                            transfer all of this page's posts with shares to\n                            @deactivated and soft-delete them;\n                        </li>\n                        <li>\n                            hard-delete all of this page's comments without\n                            replies;\n                        </li>\n                        <li>\n                            transfer all of this page's comments with replies to\n                            @deactivated and soft-delete them;\n                        </li>\n                        <li>hard-delete this page and its relationships.</li>\n                    </ul>\n                </p>\n                <p>\n                    Only use this form if you're doing it at user request, and\n                    only if a deferred deletion is inappropriate for the\n                    circumstances of the situation!\n                </p>\n            </InfoBox>\n\n            <label>I've read the warnings and I'm still gonna do it:</label>\n            <input\n                type=\"checkbox\"\n                {...register(\"confirmed\", { required: true })}\n            />\n            <Button\n                type=\"submit\"\n                buttonStyle=\"pill\"\n                color=\"cherry\"\n                className=\"w-fit\"\n                disabled={!formState.confirmed}\n            >\n                purge page\n            </Button>\n        </form>\n    );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport { InfoBox } from \"../../elements/info-box\";\nimport { trpc } from \"@/client/lib/trpc\";\nimport { type ManagePageProps } from \"./manage-page\";\nimport { DateTime } from \"luxon\";\n\ntype Inputs = {\n    confirmed: boolean;\n};\n\nexport const QueueForPurgeForm: FunctionComponent<ManagePageProps> = ({\n    project,\n}) => {\n    const { register, handleSubmit, watch } = useForm<Inputs>();\n    const formState = watch();\n\n    const queueForPurgeMutation =\n        trpc.moderation.project.queueForPurge.useMutation();\n\n    const onSubmit = async () => {\n        await queueForPurgeMutation.mutateAsync({\n            projectId: project.projectId,\n        });\n    };\n\n    return (\n        <form\n            className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n            onSubmit={handleSubmit(onSubmit)}\n        >\n            <h4 className=\"h4\">queue page for purge</h4>\n            <InfoBox level=\"warning\" className=\"prose\">\n                <p>\n                    <b>HEADS UP!</b> This will start a timer to perform the\n                    following irreverseable operations, at some time within 24\n                    hours of {DateTime.now().plus({ days: 3 }).toString()}:\n                    <ul>\n                        <li>\n                            hard-delete all of this page's posts without shares;\n                        </li>\n                        <li>\n                            transfer all of this page's posts with shares to\n                            @deactivated and soft-delete them;\n                        </li>\n                        <li>\n                            hard-delete all of this page's comments without\n                            replies;\n                        </li>\n                        <li>\n                            transfer all of this page's comments with replies to\n                            @deactivated and soft-delete them;\n                        </li>\n                        <li>hard-delete this page and its relationships.</li>\n                    </ul>\n                </p>\n                <p>\n                    The editor(s) of this page will be able to cancel the queued\n                    deletion, if it was mistaken or they change their mind.\n                </p>\n            </InfoBox>\n\n            <label>I've read the warnings and I'm still gonna do it:</label>\n            <input\n                type=\"checkbox\"\n                {...register(\"confirmed\", { required: true })}\n            />\n            <Button\n                type=\"submit\"\n                buttonStyle=\"pill\"\n                color=\"cherry\"\n                className=\"w-fit\"\n                disabled={!formState.confirmed}\n            >\n                queue page for purge\n            </Button>\n        </form>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport sitemap from \"@/shared/sitemap\";\nimport { ProjectHandle } from \"@/shared/types/ids\";\nimport { WireProjectModel } from \"@/shared/types/projects\";\nimport React, { FunctionComponent } from \"react\";\nimport { SubmitHandler, useForm, Validate } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { InfoBox } from \"../elements/info-box\";\nimport { SettingsRow } from \"../elements/settings-row\";\nimport { sectionTitleClasses } from \"../settings/shared\";\nimport { AuthnButton } from \"./authn-button\";\n\ntype Inputs = {\n    handle: string;\n};\n\nexport const ModeratorHandleChangeForm: FunctionComponent<{\n    project: WireProjectModel;\n}> = ({ project }) => {\n    const { t } = useTranslation();\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<Inputs>({\n        defaultValues: {\n            handle: project.handle,\n        },\n        mode: \"onBlur\",\n    });\n    const checkHandle = trpc.projects.checkHandle.useMutation();\n    const changeHandleMutation =\n        trpc.moderation.project.changeHandle.useMutation();\n\n    const onSubmit: SubmitHandler<Inputs> = async (values) => {\n        return changeHandleMutation\n            .mutateAsync({\n                newHandle: values.handle as ProjectHandle,\n                projectId: project.projectId,\n            })\n            .then(() =>\n                location.replace(\n                    sitemap.public.moderation.manageProject({\n                        projectHandle: values.handle as ProjectHandle,\n                    })\n                )\n            );\n    };\n\n    const validateHandle: Validate<string> = async (handle: string) => {\n        try {\n            const resp = await checkHandle.mutateAsync({\n                handle: handle as ProjectHandle,\n            });\n\n            return resp.valid === true ? true : resp.reason;\n        } catch (e) {\n            return t(\"common:unknown-error\").toString();\n        }\n    };\n\n    return (\n        <div className=\"flex max-h-min w-full max-w-prose flex-col gap-4 rounded-lg border border-mango bg-notWhite px-7 py-8 text-notBlack\">\n            <form\n                className=\"flex flex-col gap-4\"\n                onSubmit={handleSubmit(onSubmit)}\n            >\n                <h4 className={sectionTitleClasses}>change handle</h4>\n\n                <InfoBox level=\"info\">\n                    <div className=\"prose prose-sm\">\n                        <p>\n                            Handles must be at least 3 characters long, only\n                            contain letters, numbers, and hyphens (\"-\"), and not\n                            already be in use.\n                        </p>\n                    </div>\n                </InfoBox>\n\n                <div className=\"flex flex-col\">\n                    <SettingsRow\n                        bigLabel=\"new handle\"\n                        inputElement={\n                            <>\n                                <input\n                                    type=\"text\"\n                                    {...register(\"handle\", {\n                                        required: \"Handle is required!\",\n                                        validate: validateHandle,\n                                    })}\n                                />\n                                {errors.handle ? (\n                                    <p className=\"text-red\">\n                                        {errors.handle.message}\n                                    </p>\n                                ) : null}\n                            </>\n                        }\n                    />\n                </div>\n\n                <div className=\"flex w-full flex-row items-center justify-end gap-4 font-bold text-notWhite\">\n                    {changeHandleMutation.isSuccess ? (\n                        <p className=\"text-green\">saved!</p>\n                    ) : null}\n                    {changeHandleMutation.isError ? (\n                        <p className=\"text-red\">\n                            {changeHandleMutation.error.message}\n                        </p>\n                    ) : null}\n\n                    <AuthnButton\n                        type=\"submit\"\n                        disabled={changeHandleMutation.isLoading}\n                        className=\"font-bold\"\n                    >\n                        change handle\n                    </AuthnButton>\n                </div>\n            </form>\n        </div>\n    );\n};\n","import { trpc } from \"@/client/lib/trpc\";\nimport { Button } from \"@/client/preact/components/elements/button\";\nimport sitemap from \"@/shared/sitemap\";\nimport { UserId } from \"@/shared/types/ids\";\nimport {\n    ProjectFlag,\n    WireProjectModelModeratorExtensions,\n} from \"@/shared/types/projects\";\nimport React, { FunctionComponent } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { ModeratorHandleChangeForm } from \"../../partials/manage-page.moderator-handle-change-form\";\nimport { AddEditor, EditorOperationInputs } from \"./manage-page.add-editor\";\nimport { EditProfileForm } from \"./manage-page.edit-profile-form\";\nimport { EditProjectFlagsForm } from \"./manage-page.edit-project-flags-form\";\nimport { ModFlags } from \"./manage-page.mod-flags\";\nimport { PurgeImmediatelyForm } from \"./manage-page.purge-immediately\";\nimport { ActiveArtistAlleyListings } from \"./manage-page.active-listings\";\nimport { QueueForPurgeForm } from \"./manage-page.queue-for-purge\";\nimport { ModWireArtistAlley } from \"@/shared/types/artist-alley\";\nimport {\n    WireAuditLogEntryTypes,\n    WireUserModel,\n} from \"@/shared/types/wire-models\";\n\nexport type ManagePageProps = {\n    project: WireProjectModelModeratorExtensions;\n    modFlagAuditLog: WireAuditLogEntryTypes[\"edit_project_mod_flags\"][];\n    projectFlagAuditLog: WireAuditLogEntryTypes[\"edit_project_flags\"][];\n    selfUser: WireUserModel | undefined;\n    editors: WireUserModel[];\n    editorAuditLog: (\n        | WireAuditLogEntryTypes[\"add_editor\"]\n        | WireAuditLogEntryTypes[\"remove_editor\"]\n    )[];\n    userLookup: { [userId: string]: WireUserModel };\n    listings: ModWireArtistAlley[];\n};\n\nconst DescribeFlagChange: FunctionComponent<{\n    oldValue: boolean;\n    newValue: boolean;\n}> = ({ oldValue, newValue }) => {\n    if (oldValue !== newValue) {\n        return (\n            <strong>\n                {oldValue.toString()} &rarr; {newValue.toString()}\n            </strong>\n        );\n    } else {\n        return <>{oldValue.toString()}</>;\n    }\n};\n\nconst DescribeProjectFlagsChange: FunctionComponent<{\n    oldValue: ProjectFlag[];\n    newValue: ProjectFlag[];\n}> = ({ oldValue, newValue }) => {\n    if (oldValue !== newValue) {\n        return (\n            <>\n                {JSON.stringify(oldValue)} &rarr; {JSON.stringify(newValue)}\n            </>\n        );\n    } else {\n        return <>{JSON.stringify(oldValue)}</>;\n    }\n};\n\nexport const ManagePage: FunctionComponent<ManagePageProps> = (props) => {\n    const { project, selfUser, editors, editorAuditLog, userLookup } = props;\n    const {\n        register: registerRemoveEditor,\n        handleSubmit: handleSubmitRemoveEditor,\n    } = useForm<EditorOperationInputs>();\n\n    const addEditorMutation = trpc.moderation.project.addEditor.useMutation();\n    const removeEditorMutation =\n        trpc.moderation.project.removeEditor.useMutation();\n    const onSubmit: SubmitHandler<EditorOperationInputs> = async (data) => {\n        const mutationArgs = {\n            fromUserId: data.userId as UserId,\n            toProjectId: project.projectId,\n            reason: data.reason ?? \"\",\n        };\n\n        try {\n            if (data.action === \"create\") {\n                await addEditorMutation.mutateAsync(mutationArgs);\n            } else {\n                await removeEditorMutation.mutateAsync(mutationArgs);\n            }\n        } finally {\n            window.location.reload();\n        }\n    };\n\n    return (\n        <div className=\"cohost-shadow-light dark:cohost-shadow-dark container mx-auto mt-12 flex flex-col gap-4 rounded-lg bg-notWhite p-3 text-notBlack\">\n            <h1 className=\"text-4xl\">manage page</h1>\n\n            <EditProfileForm project={project} selfUser={selfUser} />\n\n            <ModeratorHandleChangeForm project={project} />\n\n            <ModFlags {...props} />\n\n            <h4 className=\"h4\">moderation flag changes</h4>\n\n            <table className=\"prose\">\n                <thead>\n                    <tr>\n                        <td>adult content flag</td>\n                        <td>adult content override</td>\n                        <td>performed at</td>\n                        <td>performed by user id (e-mail)</td>\n                        <td>reason</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.modFlagAuditLog.map((entry) => (\n                        <tr key={entry.entryId}>\n                            <td>\n                                <DescribeFlagChange\n                                    oldValue={entry.oldAdultContent}\n                                    newValue={entry.newAdultContent}\n                                />\n                            </td>\n                            <td>\n                                <DescribeFlagChange\n                                    oldValue={entry.oldAdultContentOverride}\n                                    newValue={entry.newAdultContentOverride}\n                                />\n                            </td>\n                            <td>{entry.loggedAt}</td>\n                            <td>{`${entry.changedBy} (${\n                                userLookup[entry.changedBy.toString()].email\n                            })`}</td>\n                            <td>{entry.reason}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <h4 className=\"h4\">edit project flags</h4>\n            <EditProjectFlagsForm\n                currentFlags={project.flags}\n                projectId={project.projectId}\n            />\n\n            <h4 className=\"h4\">project flag changes</h4>\n\n            <table className=\"prose\">\n                <thead>\n                    <tr>\n                        <th>flags</th>\n                        <th>performed at</th>\n                        <th>performed by user id (e-mail)</th>\n                        <th>reason</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.projectFlagAuditLog.map((entry) => (\n                        <tr key={entry.entryId}>\n                            <td>\n                                <DescribeProjectFlagsChange\n                                    oldValue={entry.oldFlags}\n                                    newValue={entry.newFlags}\n                                />\n                            </td>\n                            <td>{entry.loggedAt}</td>\n                            <td>\n                                {`${entry.changedBy} (${\n                                    userLookup[entry.changedBy.toString()].email\n                                })`}\n                            </td>\n                            <td>{entry.reason}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <h4 className=\"h4\">current editors</h4>\n\n            <ul>\n                {editors.map((editor) => (\n                    <li key={editor.userId}>\n                        {editor.email} (user id {editor.userId}){\" \"}\n                        <a\n                            href={sitemap.public.moderation\n                                .manageUser({ userId: editor.userId })\n                                .toString()}\n                        >\n                            (manage)\n                        </a>\n                    </li>\n                ))}\n            </ul>\n\n            <AddEditor onSubmit={onSubmit} />\n\n            <form\n                className=\"flex max-w-fit flex-col gap-2 rounded-lg border border-accent p-3\"\n                onSubmit={handleSubmitRemoveEditor(onSubmit)}\n            >\n                <h4 className=\"h4\">remove editors</h4>\n\n                <input\n                    type=\"hidden\"\n                    value=\"remove\"\n                    {...registerRemoveEditor(\"action\")}\n                />\n\n                <p>\n                    <label htmlFor=\"remove-userId\">editor to remove:</label>\n                    <select\n                        id=\"remove-userId\"\n                        {...registerRemoveEditor(\"userId\", {\n                            valueAsNumber: true,\n                        })}\n                    >\n                        {editors.map((editor) => (\n                            <option key={editor.userId} value={editor.userId}>\n                                {editor.email} (user id {editor.userId})\n                            </option>\n                        ))}\n                    </select>\n                </p>\n\n                <p>\n                    reason for removing editor:\n                    <textarea\n                        {...registerRemoveEditor(\"reason\", { required: true })}\n                    />\n                </p>\n\n                <Button\n                    type=\"submit\"\n                    buttonStyle=\"pill\"\n                    color=\"cherry\"\n                    className=\"w-fit\"\n                >\n                    remove editor\n                </Button>\n            </form>\n\n            <h4 className=\"h4\">editorship changes</h4>\n\n            <table className=\"prose\">\n                <thead>\n                    <tr>\n                        <td>added/removed</td>\n                        <td>user id (e-mail)</td>\n                        <td>performed at</td>\n                        <td>performed by user id (e-mail)</td>\n                        <td>reason</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {editorAuditLog.map((entry) => (\n                        <tr key={entry.entryId}>\n                            <td>\n                                {entry.logType === \"add_editor\"\n                                    ? \"added\"\n                                    : \"removed\"}\n                            </td>\n                            <td>{`${entry.userId} (${\n                                userLookup[entry.userId.toString()].email\n                            })`}</td>\n                            <td>{entry.loggedAt}</td>\n                            <td>{`${entry.changedBy} (${\n                                userLookup[entry.changedBy.toString()].email\n                            })`}</td>\n                            <td>{entry.reason}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <ActiveArtistAlleyListings {...props} />\n            <QueueForPurgeForm {...props} />\n            <PurgeImmediatelyForm {...props} />\n        </div>\n    );\n};\n\nManagePage.displayName = \"moderation/manage-page\";\nexport default ManagePage;\n","export const sectionBoxClasses =\n    \"cohost-shadow-light dark:cohost-shadow-dark mx-auto flex max-h-min w-full flex-col gap-4 rounded-lg bg-notWhite text-notBlack px-7 py-8\";\nexport const sectionTitleClasses = \"font-atkinson font-bold text-4xl\";\nexport const buttonRowClasses =\n    \"flex w-full flex-row items-center justify-end gap-4 font-bold text-notWhite\";\nexport const subsectionTitleClasses = \"font-atkinson font-bold text-2xl pt-8\";\n"],"names":["ArtistAlleyFilterProvider","React","adultFilterMode","isAdult","categories","Set","setAdultFilterMode","categoryMatch","setCategoryMatch","sortOrder","setSortOrder","useArtistAlleyFilters","useContext","ArtistAlleyAttachment","attachment","displayPrefs","useDisplayPrefs","src","setSrc","useState","gifsStartPaused","previewURL","fileURL","isPlaying","setIsPlaying","srcWithDpr","useImageOptimizer","className","srcSet","alt","altText","PlayPauseButton","showPlay","extraClasses","onPlay","handlePlay","onPause","handlePause","ArtistAlleyMeatballMenu","listing","reportingUIContext","ReportingUIContext","Menu","as","EllipsisHorizontalIcon","MeatballMenuItem","disabled","onClick","send","type","artistAlleyListingId","id","ItemIcon","ShieldExclamationIconOutline","text","ArtistAlleyListing","project","rendered","useMemo","renderMarkdownReactNoHTML","body","Date","disableEmbeds","externalLinksInNewTab","hasCohostPlus","renderingContext","theme","useDynamicTheme","current","ProjectAvatar","href","sitemap","projectHandle","handle","toString","adultContent","BasicButton","buttonColor","buttonSize","cta","link","target","length","ListingTags","tags","filteredTags","filter","tag","tw","map","key","has","delete","add","ButtonStyle","z","ButtonColor","baseColors","buttonStyle","color","optional","classnames","pillClasses","roundrectClasses","authnStyleClasses","cherryClasses","strawberryClasses","redClasses","greenClasses","mangoClasses","notBlackClasses","accentClasses","secondaryClasses","authnPrimaryColorClasses","authnOtherColorClasses","sharedClasses","props","Button","ref","classes","_extends","children","displayName","LinkButton","SettingsRow","bigLabel","smallLabel","inputElement","infoBoxLevel","infoBoxContent","customDescription","bigLabelRowSpanClasses","customDescriptionContent","htmlFor","classNames","InfoBox","level","ActiveArtistAlleyListings","listings","userLookup","adId","renderSuggestion","suggestion","isHighlighted","userId","email","AddEditor","onSubmit","register","handleSubmit","setValue","useForm","selectedEditorToAdd","setSelectedEditorToAdd","undefined","emailSearchToken","setEmailSearchToken","users","emailSearchUsers","invalidate","emailSearchInvalidate","useEmailSearch","onEmailSearchChange","useCallback","event","newValue","onSuggestionsFetchRequested","value","onSuggestionsClearRequested","onSuggestionSelected","_event","onAddEditorDeselect","Autosuggest","suggestions","getSuggestionValue","inputProps","onChange","alwaysRenderSuggestions","required","EditProfileForm","selfUser","reset","defaultValues","clearAvatar","clearHeader","dek","description","pronouns","url","updateProfileMutation","trpc","async","mutateAsync","projectId","inputs","window","location","reload","handleSuspicionResult","score","toLocaleString","maximumFractionDigits","maxLength","avatarURL","rel","headerURL","lastActivityTime","deleteAfter","e","preventDefault","keepDefaultValues","title","titleId","svgRef","Object","assign","xmlns","viewBox","fill","fillRule","d","clipRule","EditProjectFlagsForm","currentFlags","editProjectFlags","control","formState","projectFlags","reason","newFlags","Controller","name","render","field","Listbox","multiple","join","ChevronUpDownIcon","ProjectFlag","flag","active","selected","CheckIcon","errors","message","isSubmitSuccessful","ModFlags","modFlags","results","isFetched","data","adultContentOverride","useModFlags","mutation","payload","operation","mutate","onButtonClicked","PurgeImmediatelyForm","watch","purgePageMutation","confirmed","QueueForPurgeForm","queueForPurgeMutation","DateTime","plus","days","ModeratorHandleChangeForm","t","useTranslation","mode","checkHandle","changeHandleMutation","newHandle","values","then","replace","sectionTitleClasses","validate","resp","valid","isSuccess","isError","error","AuthnButton","isLoading","DescribeFlagChange","oldValue","DescribeProjectFlagsChange","JSON","stringify","ManagePage","editors","editorAuditLog","registerRemoveEditor","handleSubmitRemoveEditor","addEditorMutation","removeEditorMutation","mutationArgs","fromUserId","toProjectId","action","modFlagAuditLog","entry","entryId","oldAdultContent","newAdultContent","oldAdultContentOverride","newAdultContentOverride","loggedAt","changedBy","flags","projectFlagAuditLog","oldFlags","editor","valueAsNumber","logType","sectionBoxClasses","buttonRowClasses","subsectionTitleClasses"],"sourceRoot":""}